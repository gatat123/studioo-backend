<inspections profile="Project Default"><group name="Node.js" path="JavaScript 및 TypeScript"><inspection shortName="NodeCoreCodingAssistance" defaultSeverity="WARNING" displayName="해결되지 않은 Node.js API" enabled="true" language="JavaScript" pluginId="JavaScript" pluginVersion="252.26199.162" isGlobalTool="false">&lt;html&gt;
&lt;body&gt;
Node.js의 &lt;code&gt;require&lt;/code&gt;나 코어 모듈('path', 'http', 'fs' 등)에 대해 코딩 지원을 구성할 것을 제안합니다.
&lt;p&gt;
전체 목록은 &lt;a href="https://nodejs.org/api/"&gt;https://nodejs.org/api/&lt;/a&gt;을 참고하십시오.&lt;/p&gt;
&lt;!-- tooltip end --&gt;&lt;p&gt;&lt;small&gt;Inspection ID: NodeCoreCodingAssistance&lt;/small&gt;&lt;/p&gt;&lt;/body&gt;
&lt;/html&gt;</inspection></group><group name="Docker-compose" path=""><inspection shortName="ComposeUnquotedPorts" defaultSeverity="WEAK WARNING" displayName="따옴표로 묶이지 않은 포트 매핑" enabled="true" language="yaml" pluginId="Docker" pluginVersion="252.26199.163" isGlobalTool="false">&lt;html&gt;
&lt;body&gt;
&lt;p&gt;Docker Compose 파일 내 따옴표로 묶이지 않은 포트 매핑을 보고합니다.&lt;/p&gt;
&lt;p&gt;
  &lt;a href="https://docs.docker.com/compose/compose-file/compose-file-v3/#short-syntax-1"&gt;Compose 파일 사양&lt;/a&gt;에 따르면, YAML은 &lt;code&gt;xx:yy&lt;/code&gt; 형식의 숫자를 60진법으로 분석하기 때문에 60 미만의 컨테이너 포트를 사용할 때 &lt;code&gt;HOST:CONTAINER&lt;/code&gt; 형식으로 포트를 매핑하면 잘못된 결과가 발생할 수 있습니다.
  이러한 이유로 포트 매핑을 문자열로 명시적으로 항상 지정하는 것이 좋습니다.
&lt;/p&gt;
&lt;p&gt;&lt;b&gt;예:&lt;/b&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;
  ports:
    - 3000
    - 3000-3005
    - 22:22
    - 8080:8080
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;빠른 수정을 적용한 후:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;
  ports:
    - "3000"
    - "3000-3005"
    - "22:22"
    - "8080:8080"
&lt;/code&gt;&lt;/pre&gt;
&lt;!-- tooltip end --&gt;&lt;p&gt;&lt;small&gt;Inspection ID: ComposeUnquotedPorts&lt;/small&gt;&lt;/p&gt;&lt;/body&gt;
&lt;/html&gt;</inspection><inspection shortName="ComposeMissingKeys" defaultSeverity="ERROR" displayName="누락된 docker-compose YAML 키" enabled="true" language="yaml" pluginId="Docker" pluginVersion="252.26199.163" isGlobalTool="false">&lt;html&gt;
&lt;body&gt;
Docker Compose 파일 내 누락된 필수 키를 보고합니다.
&lt;br&gt;
&lt;!-- tooltip end --&gt;&lt;p&gt;&lt;small&gt;Inspection ID: ComposeMissingKeys&lt;/small&gt;&lt;/p&gt;&lt;/body&gt;
&lt;/html&gt;</inspection><inspection shortName="ComposeUnknownKeys" defaultSeverity="ERROR" displayName="알 수 없는 docker-compose YAML 키" enabled="true" language="yaml" pluginId="Docker" pluginVersion="252.26199.163" isGlobalTool="false">&lt;html&gt;
&lt;body&gt;
Docker Compose 파일에서 인식되지 않는 키를 보고합니다.&lt;br&gt;
&lt;!-- tooltip end --&gt;&lt;p&gt;&lt;small&gt;Inspection ID: ComposeUnknownKeys&lt;/small&gt;&lt;/p&gt;&lt;/body&gt;
&lt;/html&gt;</inspection><inspection shortName="ComposeErroneousRelation" defaultSeverity="WARNING" displayName="docker-compose YAML에 있는 관계의 오류" enabled="true" language="yaml" pluginId="Docker" pluginVersion="252.26199.163" isGlobalTool="false">&lt;html&gt;
&lt;body&gt;
&lt;p&gt;Docker Compose 파일 내에서 오류가 있는 관계를 보고합니다.&lt;/p&gt;
&lt;p&gt;
  &lt;a href="https://docs.docker.com/reference/compose-file/services/#volumes"&gt;Compose 파일 사양&lt;/a&gt;에 따르면, 특정 필드가 다른 키-값 쌍에 따라 유효하지 않을 수 있으며 오류를 일으킬 수 있습니다.
&lt;/p&gt;
&lt;p&gt;
  예를 들어 이러한 관계 중 하나가 볼륨 &lt;code&gt;source&lt;/code&gt; 필드입니다. 이 필드는 볼륨 &lt;code&gt;type&lt;/code&gt; 타입이 &lt;code&gt;tmpfs&lt;/code&gt;일 때 유효하지 않습니다.
&lt;/p&gt;
&lt;br&gt;
&lt;!-- tooltip end --&gt;&lt;p&gt;&lt;small&gt;Inspection ID: ComposeErroneousRelation&lt;/small&gt;&lt;/p&gt;&lt;/body&gt;
&lt;/html&gt;</inspection><inspection shortName="ComposeUnknownValues" defaultSeverity="ERROR" displayName="알 수 없는 docker-compose YAML 값" enabled="true" language="yaml" pluginId="Docker" pluginVersion="252.26199.163" isGlobalTool="false">&lt;html&gt;
&lt;body&gt;
Docker Compose 파일에서 인식되지 않는 값을 보고합니다.
&lt;br&gt;
&lt;!-- tooltip end --&gt;&lt;p&gt;&lt;small&gt;Inspection ID: ComposeUnknownValues&lt;/small&gt;&lt;/p&gt;&lt;/body&gt;
&lt;/html&gt;</inspection></group><group name="코드 품질 도구" path="JavaScript 및 TypeScript"><inspection shortName="JSHint" defaultSeverity="ERROR" displayName="JSHint" enabled="false" language="JavaScript" pluginId="JavaScript" pluginVersion="252.26199.162" isGlobalTool="false">&lt;html&gt;
&lt;body&gt;
&lt;a href="https://jshint.com/"&gt;JSHint&lt;/a&gt; linter에 의해 탐지된 문제를 보고합니다.
&lt;!-- tooltip end --&gt;&lt;p&gt;&lt;small&gt;Inspection ID: JSHint&lt;/small&gt;&lt;/p&gt;&lt;/body&gt;
&lt;/html&gt;</inspection><inspection shortName="Eslint" defaultSeverity="WARNING" displayName="ESLint" enabled="true" language="JavaScript" pluginId="JavaScript" pluginVersion="252.26199.162" isGlobalTool="false">&lt;html&gt;
&lt;body&gt;
&lt;a href="https://eslint.org"&gt;ESLint&lt;/a&gt;에 의해 탐지된 차이를 보고합니다.
&lt;!-- tooltip end --&gt;
&lt;br/&gt;&lt;br/&gt;
강조 표시는 각각의 개별 규칙에 대한 &lt;a href="https://eslint.org/docs/user-guide/configuring"&gt;ESLint 구성 파일&lt;/a&gt;에 지정된 규칙 심각도를 기반으로 합니다.
&lt;br/&gt;&lt;br/&gt;
'구성 파일에서 규칙 중요도 사용' 체크박스를 지워서 이 검사에 구성된 모든 ESLint 규칙 심각도를 사용하십시오.
&lt;p&gt;&lt;small&gt;Inspection ID: Eslint&lt;/small&gt;&lt;/p&gt;&lt;/body&gt;
&lt;/html&gt;</inspection><inspection shortName="TsLint" defaultSeverity="WARNING" displayName="TSLint" enabled="false" language="TypeScript" pluginId="tslint" pluginVersion="252.26199.162" isGlobalTool="false">&lt;html&gt;
&lt;body&gt;
&lt;a href="https://github.com/palantir/tslint"&gt;TSLint&lt;/a&gt;에 의해 탐지된 차이를 보고합니다.
&lt;!-- tooltip end --&gt;
&lt;br/&gt;&lt;br/&gt;
강조 표시는 각각의 개별 규칙에 대한 &lt;a href="https://palantir.github.io/tslint/usage/configuration/"&gt;TSLint 구성 파일&lt;/a&gt;에 지정된 규칙 심각도를 기반으로 합니다.
&lt;br/&gt;&lt;br/&gt;
'구성 파일에서 규칙 중요도 사용' 체크박스를 지워서 이 검사에 구성된 모든 TSLint 규칙 심각도를 사용하세요.
&lt;p&gt;&lt;small&gt;Inspection ID: TsLint&lt;/small&gt;&lt;/p&gt;&lt;/body&gt;
&lt;/html&gt;</inspection><inspection shortName="StandardJS" defaultSeverity="ERROR" displayName="표준 코드 스타일" enabled="false" language="JavaScript" pluginId="JavaScript" pluginVersion="252.26199.162" isGlobalTool="false">&lt;html&gt;
&lt;body&gt;
&lt;a href="https://standardjs.com/"&gt;JavaScript Standard Style&lt;/a&gt; linter에 의해 탐지된 차이를 보고합니다.
&lt;!-- tooltip end --&gt;
&lt;br/&gt;&lt;br/&gt;
에디터의 강조 표시 심각도는 linter 보고서의 심각도 수준을 기반으로 합니다.
&lt;p&gt;&lt;small&gt;Inspection ID: StandardJS&lt;/small&gt;&lt;/p&gt;&lt;/body&gt;
&lt;/html&gt;</inspection></group><group name="switch 문 이슈" path="JavaScript 및 TypeScript"><inspection shortName="JSDuplicateCaseLabel" defaultSeverity="WARNING" displayName="중복 'case' 라벨" enabled="true" language="JavaScript" pluginId="JavaScript" pluginVersion="252.26199.162" isGlobalTool="false">&lt;html&gt;
&lt;body&gt;
&lt;code&gt;switch&lt;/code&gt; 문 내 중복된 &lt;code&gt;case&lt;/code&gt; 라벨을 보고합니다. 이는 보통 오류를 나타냅니다.
&lt;!-- tooltip end --&gt;&lt;p&gt;&lt;small&gt;Inspection ID: JSDuplicateCaseLabel&lt;/small&gt;&lt;/p&gt;&lt;/body&gt;
&lt;/html&gt;</inspection><inspection shortName="JSMissingSwitchBranches" defaultSeverity="INFORMATION" displayName="'switch' 문에 분기가 누락되었습니다" enabled="true" language="JavaScript" pluginId="JavaScript" pluginVersion="252.26199.162" isGlobalTool="false">&lt;html&gt;
&lt;body&gt;
&lt;code&gt;enum&lt;/code&gt; 또는 &lt;code&gt;union&lt;/code&gt; 타입의 변수에 대한 &lt;code&gt;switch&lt;/code&gt; 문에서 해당 타입의 일부의 값 옵션을 포함하지 않는 경우를 보고합니다.
&lt;!-- tooltip end --&gt;&lt;p&gt;&lt;small&gt;Inspection ID: JSMissingSwitchBranches&lt;/small&gt;&lt;/p&gt;&lt;/body&gt;
&lt;/html&gt;</inspection><inspection shortName="DefaultNotLastCaseInSwitchJS" defaultSeverity="WARNING" displayName="'default'가 'switch'의 마지막 case가 아님" enabled="false" language="JavaScript" pluginId="JavaScript" pluginVersion="252.26199.162" isGlobalTool="false">&lt;html&gt;
&lt;body&gt;
가장 마지막 케이스여야 할 &lt;code&gt;default&lt;/code&gt; 케이스가 다른 케이스 앞에 오기 때문에 혼란을 일으킬 수 있는 &lt;code&gt;switch&lt;/code&gt; 문을 보고합니다.
&lt;!-- tooltip end --&gt;&lt;p&gt;&lt;small&gt;Inspection ID: DefaultNotLastCaseInSwitchJS&lt;/small&gt;&lt;/p&gt;&lt;/body&gt;
&lt;/html&gt;</inspection><inspection shortName="JSMissingSwitchDefault" defaultSeverity="INFORMATION" displayName="'switch' 문에 'default' 분기가 없습니다" enabled="true" language="JavaScript" pluginId="JavaScript" pluginVersion="252.26199.162" isGlobalTool="false">&lt;html&gt;
&lt;body&gt;
일부의 가능한 값이 열거되지 않은 경우에 &lt;code&gt;default&lt;/code&gt; 절이 없는&lt;code&gt;switch&lt;/code&gt; 문을 보고합니다.
&lt;!-- tooltip end --&gt;&lt;p&gt;&lt;small&gt;Inspection ID: JSMissingSwitchDefault&lt;/small&gt;&lt;/p&gt;&lt;/body&gt;
&lt;/html&gt;</inspection><inspection shortName="JSSwitchVariableDeclarationIssue" defaultSeverity="WARNING" displayName="변수가 선언되고 다른 'case' 절에서 사용됩니다" enabled="true" language="JavaScript" pluginId="JavaScript" pluginVersion="252.26199.162" isGlobalTool="false">&lt;html&gt;
&lt;body&gt;
&lt;code&gt;switch&lt;/code&gt; 내 하나의 &lt;code&gt;case&lt;/code&gt; 절로 선언되어 있으나 같은 구문의 다른&lt;code&gt;case&lt;/code&gt; 절에서 사용된 변수를 보고합니다.
블록 스코프의 변수에 대해, 이는 &lt;code&gt;ReferenceError&lt;/code&gt;를 발생시킵니다.
&lt;code&gt;var&lt;/code&gt; 변수에 대해 이는 잠재적 오류를 나타냅니다. &lt;p&gt;이 패턴이 의도적으로 사용된 경우, &lt;code&gt;var&lt;/code&gt; 변수에 대한 검사를 비활성화하십시오.&lt;/p&gt;
&lt;!-- tooltip end --&gt;&lt;p&gt;&lt;small&gt;Inspection ID: JSSwitchVariableDeclarationIssue&lt;/small&gt;&lt;/p&gt;&lt;/body&gt;
&lt;/html&gt;</inspection><inspection shortName="TextLabelInSwitchStatementJS" defaultSeverity="WARNING" displayName="'switch' 문의 텍스트 라벨" enabled="false" language="JavaScript" pluginId="JavaScript" pluginVersion="252.26199.162" isGlobalTool="false">&lt;html&gt;
&lt;body&gt;
오타로 자주 발생하는 &lt;code&gt;switch&lt;/code&gt; 구문 내부의 라벨이 지정된 구문을 보고합니다.
&lt;p&gt;예:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;
    &lt;b&gt;switch&lt;/b&gt;(x)
    {
        &lt;b&gt;case&lt;/b&gt; 1:
        case2:   //오타!
        &lt;b&gt;case&lt;/b&gt; 3:
            &lt;b&gt;break&lt;/b&gt;;
    }
&lt;/code&gt;&lt;/pre&gt;
&lt;!-- tooltip end --&gt;&lt;p&gt;&lt;small&gt;Inspection ID: TextLabelInSwitchStatementJS&lt;/small&gt;&lt;/p&gt;&lt;/body&gt;
&lt;/html&gt;</inspection><inspection shortName="JSUnreachableSwitchBranches" defaultSeverity="WARNING" displayName="도달할 수 없는 'switch' 문의 'case' 브랜치" enabled="true" language="JavaScript" pluginId="JavaScript" pluginVersion="252.26199.162" isGlobalTool="false">&lt;html&gt;
&lt;body&gt;
&lt;code&gt;switch&lt;/code&gt; 문의 도달할 수 없는 &lt;code&gt;case&lt;/code&gt; 브랜치를 보고합니다. &lt;p&gt;예:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;
/**
 * @param {('foo' | 'bar')} p
 */
function foo(p) {
    switch (p) {
        case 'foo': break;
        case 'bar': break;
        case 'baz': break; // 도달할 수 없음
    }
}
&lt;/code&gt;&lt;/pre&gt;
&lt;!-- tooltip end --&gt;&lt;p&gt;&lt;small&gt;Inspection ID: JSUnreachableSwitchBranches&lt;/small&gt;&lt;/p&gt;&lt;/body&gt;
&lt;/html&gt;</inspection><inspection shortName="FallThroughInSwitchStatementJS" defaultSeverity="WARNING" displayName="'switch' 문의 폴스루" enabled="true" language="JavaScript" pluginId="JavaScript" pluginVersion="252.26199.162" isGlobalTool="false">&lt;html&gt;
&lt;body&gt;
제어가 한 브랜치에서 다른 브랜치로 진행되는 &lt;code&gt;switch&lt;/code&gt; 문을 보고합니다.  그러한 '폴스루'는 보통 오류를 나타냅니다(예:&lt;code&gt;break&lt;/code&gt; 또는 &lt;code&gt;return&lt;/code&gt; 누락).
&lt;!-- tooltip end --&gt;&lt;p&gt;&lt;small&gt;Inspection ID: FallThroughInSwitchStatementJS&lt;/small&gt;&lt;/p&gt;&lt;/body&gt;
&lt;/html&gt;</inspection><inspection shortName="JSRedundantSwitchStatement" defaultSeverity="INFORMATION" displayName="'switch' 문은 중복이며 바꿀 수 있습니다" enabled="true" language="JavaScript" pluginId="JavaScript" pluginVersion="252.26199.162" isGlobalTool="false">&lt;html&gt;
&lt;body&gt;
본문이 비어 있거나 단 하나의 &lt;code&gt;case&lt;/code&gt; 브랜치 또는 &lt;code&gt;default&lt;/code&gt; 브랜치만 포함하는 &lt;code&gt;switch&lt;/code&gt; 문을 보고합니다.
&lt;!-- tooltip end --&gt;&lt;p&gt;&lt;small&gt;Inspection ID: JSRedundantSwitchStatement&lt;/small&gt;&lt;/p&gt;&lt;/body&gt;
&lt;/html&gt;</inspection><inspection shortName="NestedSwitchStatementJS" defaultSeverity="WARNING" displayName="중첩된 'switch' 문" enabled="false" language="JavaScript" pluginId="JavaScript" pluginVersion="252.26199.162" isGlobalTool="false">&lt;html&gt;
&lt;body&gt;
다른 &lt;code&gt;switch&lt;/code&gt; 문에 중첩된 &lt;code&gt;switch&lt;/code&gt; 문을 보고합니다.  들여쓰기가 일관되지 않은 경우 
중첩된 &lt;code&gt;switch&lt;/code&gt; 문은 혼란을 일으킬 가능성이 매우 큽니다.
&lt;!-- tooltip end --&gt;&lt;p&gt;&lt;small&gt;Inspection ID: NestedSwitchStatementJS&lt;/small&gt;&lt;/p&gt;&lt;/body&gt;
&lt;/html&gt;</inspection></group><group name="OpenAPI 사양" path=""><inspection shortName="SwJsonMaybeSpecificationInspection" defaultSeverity="WARNING" displayName="가능한 OpenAPI/Swagger 사양 후보" enabled="true" language="JSON" pluginId="com.intellij.swagger" pluginVersion="252.26199.162" isGlobalTool="false">&lt;html&gt;
&lt;body&gt;
OpenAPI/Swagger 사양의 일부로 해석될 수 있는 JSON 파일을 탐지합니다.
&lt;p&gt;
  이러한 파일은 명시적인 사양 속성은 포함하지 않으나 인접한 기본 사양 파일에서 참조됩니다.
&lt;/p&gt;
&lt;!-- tooltip end --&gt;

&lt;p&gt;
  다음의 예시는 같은 디렉터리에 있는 두 파일을 포함합니다. 첫 번째 파일은 일반적인 기본 사양 파일입니다.
  두 번째 파일은 첫 번째 파일에서 참조되며 따라서 사양으로 간주될 수 있다고 제안됩니다.
&lt;/p&gt;

&lt;p&gt;&lt;b&gt;기본 사양 파일 &lt;code&gt;openapi.yaml&lt;/code&gt;:&lt;/b&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code lang="yaml"&gt;
openapi: 3.1.0
components:
  schemas:
    CustomSchema:
      description: Custom schema object
      properties:
        foo:
          $ref: 'common.components.json#/components/schemas/CommonSchema'
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;b&gt;사양 파일 후보 &lt;code&gt;common.components.json&lt;/code&gt;:&lt;/b&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code lang="json"&gt;
{
  "components": { // 'Mark file as OpenAPI specification' 강조 표시
    "schemas": {
      "CommonSchema": {
        "description": "Common schema object reused in several specifications"
      }
    }
  }
}
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;small&gt;Inspection ID: SwJsonMaybeSpecificationInspection&lt;/small&gt;&lt;/p&gt;&lt;/body&gt;
&lt;/html&gt;</inspection><inspection shortName="SwYamlMaybeSpecificationInspection" defaultSeverity="WARNING" displayName="가능한 OpenAPI/Swagger 사양 후보" enabled="true" language="yaml" pluginId="com.intellij.swagger" pluginVersion="252.26199.162" isGlobalTool="false">&lt;html&gt;
&lt;body&gt;
OpenAPI/Swagger 사양의 일부로 해석될 수 있는 YAML 파일을 탐지합니다.
&lt;p&gt;
  이러한 파일은 명시적인 사양 속성은 포함하지 않으나 인접한 기본 사양 파일에서 참조됩니다.
&lt;/p&gt;
&lt;!-- tooltip end --&gt;

&lt;p&gt;
  다음의 예시는 같은 디렉터리에 있는 두 파일을 포함합니다. 첫 번째 파일은 일반적인 기본 사양 파일입니다.
  두 번째 파일은 첫 번째 파일에서 참조되며 따라서 사양으로 간주될 수 있다고 제안됩니다.
&lt;/p&gt;

&lt;p&gt;&lt;b&gt;기본 사양 파일 &lt;code&gt;openapi.yaml&lt;/code&gt;:&lt;/b&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;
openapi: 3.1.0
components:
  schemas:
    CustomSchema:
      description: Custom schema object
      properties:
        foo:
          $ref: 'common.components.yaml#/components/schemas/CommonSchema'
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;b&gt;사양 파일 후보 &lt;code&gt;common.components.yaml&lt;/code&gt;:&lt;/b&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;
components: # 'Mark file as OpenAPI specification' highlighting
  schemas:
    CommonSchema:
      description: Common schema object reused in several specifications
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;small&gt;Inspection ID: SwYamlMaybeSpecificationInspection&lt;/small&gt;&lt;/p&gt;&lt;/body&gt;
&lt;/html&gt;</inspection><inspection shortName="SwJsonUnresolvedReferencesInspection" defaultSeverity="ERROR" displayName="미해결 참조" enabled="true" language="JSON" pluginId="com.intellij.swagger" pluginVersion="252.26199.162" isGlobalTool="false">&lt;html&gt;
&lt;body&gt;
JSON 사양 파일에서 미해결 참조를 탐지합니다.
&lt;!-- tooltip end --&gt;&lt;p&gt;&lt;small&gt;Inspection ID: SwJsonUnresolvedReferencesInspection&lt;/small&gt;&lt;/p&gt;&lt;/body&gt;
&lt;/html&gt;</inspection><inspection shortName="SwYamlUnresolvedReferencesInspection" defaultSeverity="ERROR" displayName="미해결 참조" enabled="true" language="yaml" pluginId="com.intellij.swagger" pluginVersion="252.26199.162" isGlobalTool="false">&lt;html&gt;
&lt;body&gt;
YAML 사양 파일에서 미해결 참조를 탐지합니다.
&lt;!-- tooltip end --&gt;&lt;p&gt;&lt;small&gt;Inspection ID: SwYamlUnresolvedReferencesInspection&lt;/small&gt;&lt;/p&gt;&lt;/body&gt;
&lt;/html&gt;</inspection></group><group name="Handlebars/Mustache" path=""><inspection shortName="HbEmptyBlock" defaultSeverity="WARNING" displayName="누락된 블록 헬퍼 인수" enabled="true" language="Handlebars" pluginId="com.dmarcotte.handlebars" pluginVersion="252.26199.162" isGlobalTool="false">&lt;html&gt;
&lt;body&gt;
인수가 없는 &lt;code&gt;if&lt;/code&gt;, &lt;code&gt;each&lt;/code&gt;, &lt;code&gt;with&lt;/code&gt; 블록 헬퍼를 보고합니다.
&lt;!-- tooltip end --&gt;&lt;p&gt;&lt;small&gt;Inspection ID: HbEmptyBlock&lt;/small&gt;&lt;/p&gt;&lt;/body&gt;
&lt;/html&gt;</inspection></group><group name="Cucumber" path=""><inspection shortName="GherkinBrokenTableInspection" defaultSeverity="ERROR" displayName="Gherkin 테이블이 손상되었습니다" enabled="true" language="Gherkin" pluginId="gherkin" pluginVersion="252.26199.162" isGlobalTool="false">&lt;html&gt;
&lt;body&gt;
셀의 개수가 테이블 헤더 내 셀의 개수와 다른 행이 하나 이상인 경우 테이블을 보고합니다.
&lt;!-- tooltip end --&gt;&lt;p&gt;&lt;small&gt;Inspection ID: GherkinBrokenTableInspection&lt;/small&gt;&lt;/p&gt;&lt;/body&gt;
&lt;/html&gt;</inspection><inspection shortName="GherkinScenarioToScenarioOutline" defaultSeverity="ERROR" displayName="Examples 섹션이 있는 Scenario" enabled="true" language="Gherkin" pluginId="gherkin" pluginVersion="252.26199.162" isGlobalTool="false">&lt;html&gt;
&lt;body&gt;
&lt;code&gt;Examples&lt;/code&gt; 섹션을 포함하는 Gherkin Scenario를 보고합니다.
&lt;p&gt;빠른 수정을 사용하면 &lt;code&gt;Scenario&lt;/code&gt;를 &lt;code&gt;Scenario Outline&lt;/code&gt;으로 변환할 수 있습니다.&lt;/p&gt;
&lt;!-- tooltip end --&gt;&lt;p&gt;&lt;small&gt;Inspection ID: GherkinScenarioToScenarioOutline&lt;/small&gt;&lt;/p&gt;&lt;/body&gt;
&lt;/html&gt;</inspection><inspection shortName="CucumberTableInspection" defaultSeverity="WARNING" displayName="Cucumber 테이블 내 사용되지 않거나 누락된 열" enabled="true" language="Gherkin" pluginId="gherkin" pluginVersion="252.26199.162" isGlobalTool="false">&lt;html&gt;
&lt;body&gt;
Cucumber .feature 파일의 &lt;code&gt;Examples&lt;/code&gt; 섹션 내 사용되지 않거나 누락된 열이 있는 테이블을 보고합니다.
&lt;!-- tooltip end --&gt;&lt;p&gt;&lt;small&gt;Inspection ID: CucumberTableInspection&lt;/small&gt;&lt;/p&gt;&lt;/body&gt;
&lt;/html&gt;</inspection><inspection shortName="CucumberUndefinedStep" defaultSeverity="WARNING" displayName="정의되지 않은 단계" enabled="true" language="Gherkin" pluginId="gherkin" pluginVersion="252.26199.162" isGlobalTool="false">&lt;html&gt;
&lt;body&gt;
일치하는 Step 정의가 없는 Cucumber(또는 그 외 Gherkin) .feature 파일 내 Step을 보고합니다.
&lt;p&gt;빠른 수정을 사용하면 새 Step 정의를 자동으로 생성할 수 있습니다.&lt;/p&gt;
&lt;!-- tooltip end --&gt;&lt;p&gt;&lt;small&gt;Inspection ID: CucumberUndefinedStep&lt;/small&gt;&lt;/p&gt;&lt;/body&gt;
&lt;/html&gt;</inspection><inspection shortName="CucumberExamplesColon" defaultSeverity="ERROR" displayName="Examples 키워드 뒤에 ':' 누락" enabled="true" language="Gherkin" pluginId="gherkin" pluginVersion="252.26199.162" isGlobalTool="false">&lt;html&gt;
&lt;body&gt;
Cucumber .feature 파일 내 &lt;code&gt;Examples&lt;/code&gt; 섹션 중 &lt;code&gt;Examples&lt;/code&gt; 키워드 뒤에 ':'이 없는 경우를 보고합니다.
&lt;!-- tooltip end --&gt;&lt;p&gt;&lt;small&gt;Inspection ID: CucumberExamplesColon&lt;/small&gt;&lt;/p&gt;&lt;/body&gt;
&lt;/html&gt;
</inspection><inspection shortName="GherkinMisplacedBackground" defaultSeverity="ERROR" displayName="잘못 배치된 Background 섹션" enabled="true" language="Gherkin" pluginId="gherkin" pluginVersion="252.26199.162" isGlobalTool="false">&lt;html&gt;
&lt;body&gt;
잘못된 위치에 있는 &lt;code&gt;Background&lt;/code&gt; 섹션을 보고합니다. &lt;code&gt;Background&lt;/code&gt; 섹션은 &lt;code&gt;Scenario&lt;/code&gt; 섹션 앞에 와야 합니다.
&lt;!-- tooltip end --&gt;&lt;p&gt;&lt;small&gt;Inspection ID: GherkinMisplacedBackground&lt;/small&gt;&lt;/p&gt;&lt;/body&gt;
&lt;/html&gt;</inspection><inspection shortName="CucumberMissedExamples" defaultSeverity="ERROR" displayName="Examples 섹션 누락" enabled="true" language="Gherkin" pluginId="gherkin" pluginVersion="252.26199.162" isGlobalTool="false">&lt;html&gt;
&lt;body&gt;
    &lt;code&gt;Examples&lt;/code&gt; 섹션이 없는 Cucumber .feature 파일 내 Scenario Outline을 보고합니다.
    &lt;p&gt;빠른 수정을 사용하면 테이블 헤더가 사전 작성된 &lt;code&gt;Examples&lt;/code&gt; 섹션이 자동으로 생성됩니다.&lt;/p&gt;
&lt;!-- tooltip end --&gt;&lt;p&gt;&lt;small&gt;Inspection ID: CucumberMissedExamples&lt;/small&gt;&lt;/p&gt;&lt;/body&gt;
&lt;/html&gt;</inspection></group><group name="유효성 이슈" path="JavaScript 및 TypeScript"><inspection shortName="StringLiteralBreaksHTMLJS" defaultSeverity="WARNING" displayName="HTML 구문 분석을 중단하는 문자열 리터럴" enabled="false" language="JavaScript" pluginId="JavaScript" pluginVersion="252.26199.162" isGlobalTool="false">&lt;html&gt;
&lt;body&gt;
&lt;code&gt;&amp;lt;/&lt;/code&gt; 시퀀스를 포함하는 문자열 리터럴을 보고합니다.  그러한 문자열을 사용하면
JavaScript 코드가 포함된 모든 HTML이 잘못 분석될 수 있습니다.
&lt;!-- tooltip end --&gt;&lt;p&gt;&lt;small&gt;Inspection ID: StringLiteralBreaksHTMLJS&lt;/small&gt;&lt;/p&gt;&lt;/body&gt;
&lt;/html&gt;</inspection><inspection shortName="JSConstantReassignment" defaultSeverity="ERROR" displayName="const 또는 readonly 변수에 할당을 시도합니다" enabled="true" language="JavaScript" pluginId="JavaScript" pluginVersion="252.26199.162" isGlobalTool="false">&lt;html&gt;
&lt;body&gt;
상수 또는 읽기 전용 변수에 값이 다시 대입된 경우를 보고합니다.
&lt;!-- tooltip end --&gt;&lt;p&gt;&lt;small&gt;Inspection ID: JSConstantReassignment&lt;/small&gt;&lt;/p&gt;&lt;/body&gt;
&lt;/html&gt;</inspection><inspection shortName="ReservedWordUsedAsNameJS" defaultSeverity="WARNING" displayName="이름으로 사용되는 예약 단어" enabled="true" language="JavaScript" pluginId="JavaScript" pluginVersion="252.26199.162" isGlobalTool="false">&lt;html&gt;
&lt;body&gt;
이름으로 사용된 JavaScript 예약어를 보고합니다.  JavaScript 사양에는 
현재 키워드로 사용되지 않는 많은 단어가 예약되어 있습니다.  이러한 단어를 식별자로 사용하면 JavaScript의 이후 버전이 키워드로 사용하기 시작할 경우 코드가 파손될 수 있습니다.
&lt;!-- tooltip end --&gt;&lt;p&gt;&lt;small&gt;Inspection ID: ReservedWordUsedAsNameJS&lt;/small&gt;&lt;/p&gt;&lt;/body&gt;
&lt;/html&gt;</inspection><inspection shortName="ThisExpressionReferencesGlobalObjectJS" defaultSeverity="WARNING" displayName="전역 객체를 참조하는 'this' 식" enabled="true" language="JavaScript" pluginId="JavaScript" pluginVersion="252.26199.162" isGlobalTool="false">&lt;html&gt;
&lt;body&gt;
객체 리터럴 또는 생성자 본문 외부에 있는 &lt;code&gt;this&lt;/code&gt; 표현식을 보고합니다.  그러한 &lt;code&gt;this&lt;/code&gt;
표현식은 최상위 "global" JavaScript 객체를 참조하지만
거의 쓸모가 없습니다.
&lt;!-- tooltip end --&gt;&lt;p&gt;&lt;small&gt;Inspection ID: ThisExpressionReferencesGlobalObjectJS&lt;/small&gt;&lt;/p&gt;&lt;/body&gt;
&lt;/html&gt;</inspection><inspection shortName="FunctionWithInconsistentReturnsJS" defaultSeverity="WARNING" displayName="일관되지 않은 반환이 있는 함수" enabled="false" language="JavaScript" pluginId="JavaScript" pluginVersion="252.26199.162" isGlobalTool="false">&lt;html&gt;
&lt;body&gt;
일부 사례에서 값을 반환하지 않는 반면 
다른 사례에서는 값이 반환되지 않는 함수를 보고합니다. 이는 보통 오류를 나타냅니다.
&lt;p&gt;예:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;
function foo() {
  if (true)
    return 3;
  return;
}
&lt;/code&gt;
&lt;/pre&gt;
&lt;!-- tooltip end --&gt;&lt;p&gt;&lt;small&gt;Inspection ID: FunctionWithInconsistentReturnsJS&lt;/small&gt;&lt;/p&gt;&lt;/body&gt;
&lt;/html&gt;</inspection><inspection shortName="JSOctalInteger" defaultSeverity="ERROR" displayName="8진 정수" enabled="true" language="JavaScript" pluginId="JavaScript" pluginVersion="252.26199.162" isGlobalTool="false">&lt;html&gt;
&lt;body&gt;
&lt;code&gt;0o&lt;/code&gt; 대신 사용이 중단된 &lt;code&gt;0&lt;/code&gt; 접두사를 사용한 8진수 정수 리터럴을 보고합니다.&lt;br/&gt;
그러한 리터럴은 최근 ECMAScript 코드에서 허용되지 않기 때문에 strict 모드에서 사용하면 오류로 처리됩니다.&lt;br/&gt;
ES5 및 ES3 언어 수준에서 이 검사를 강제 실행하려면 다음 'ES5- 코드에서 오래된 8진수 리터럴 사용에 대한 경고' 체크박스를 선택하십시오.
&lt;!-- tooltip end --&gt;&lt;p&gt;&lt;small&gt;Inspection ID: JSOctalInteger&lt;/small&gt;&lt;/p&gt;&lt;/body&gt;
&lt;/html&gt;</inspection><inspection shortName="BadExpressionStatementJS" defaultSeverity="WEAK WARNING" displayName="대입 또는 호출이 아닌 표현식 구문" enabled="true" language="JavaScript" pluginId="JavaScript" pluginVersion="252.26199.162" isGlobalTool="false">&lt;html&gt;
&lt;body&gt;
대입 또는 호출이 아닌 표현식 구문을 보고합니다.
그러한 구문은 보통 오류를 나타냅니다.
&lt;!-- tooltip end --&gt;&lt;p&gt;&lt;small&gt;Inspection ID: BadExpressionStatementJS&lt;/small&gt;&lt;/p&gt;&lt;/body&gt;
&lt;/html&gt;</inspection></group><group name="React" path="JavaScript 및 TypeScript"><inspection shortName="JSXDomNesting" defaultSeverity="WARNING" displayName="잘못된 DOM 요소 중첩" enabled="true" language="JavaScript" pluginId="JavaScript" pluginVersion="252.26199.162" isGlobalTool="false">&lt;html&gt;
&lt;body&gt;
DOM 사양에 따라 제대로 중첩되지 않은 JSX 파일의 HTML 요소를 탐지합니다.
React는 잘못 중첩된 요소에 대해 런타임 경고를 보고합니다.


&lt;!--Write your description here.--&gt;
&lt;!--Start the description with a verb in 3rd person singular, like reports, detects, highlights.--&gt;
&lt;!--In the first sentence, briefly explain what exactly the inspection helps you detect.--&gt;
&lt;!--Make sure the sentence is not very long and complicated.--&gt;
&lt;!--&lt;p&gt;--&gt;
&lt;!--  The first sentence must be in a dedicated paragraph separated from the rest of the text. This will make the description easier to read.--&gt;
&lt;!--  Make sure the description doesn’t just repeat the inspection title.--&gt;
&lt;!--&lt;/p&gt;--&gt;
&lt;!--&lt;p&gt;--&gt;
&lt;!--  See https://plugins.jetbrains.com/docs/intellij/inspections.html#descriptions for more information.--&gt;
&lt;!--&lt;/p&gt;--&gt;
&lt;!--&amp;lt;!&amp;ndash; tooltip end &amp;ndash;&amp;gt;--&gt;
&lt;!--&lt;p&gt;Text after this comment will only be shown in the settings of the inspection.&lt;/p&gt;--&gt;

&lt;!--&lt;p&gt;To open related settings directly from the description, add a link with `settings://$` optionally followed by `?$` to pre-select a UI--&gt;
&lt;!--  element.&lt;/p&gt;--&gt;
&lt;!-- tooltip end --&gt;&lt;p&gt;&lt;small&gt;Inspection ID: JSXDomNesting&lt;/small&gt;&lt;/p&gt;&lt;/body&gt;
&lt;/html&gt;</inspection></group><group name="유닛 테스트" path="JavaScript 및 TypeScript"><inspection shortName="JSTestFailedLine" defaultSeverity="WARNING" displayName="테스트 코드에서 실패 줄 강조 표시" enabled="true" language="JavaScript" pluginId="JavaScript" pluginVersion="252.26199.162" isGlobalTool="false">&lt;html&gt;
&lt;body&gt;
테스트 내 실패한 메서드 호출이나 어설션을 보고합니다.
&lt;!-- tooltip end --&gt;&lt;p&gt;&lt;small&gt;Inspection ID: JSTestFailedLine&lt;/small&gt;&lt;/p&gt;&lt;/body&gt;
&lt;/html&gt;</inspection><inspection shortName="KarmaConfigFile" defaultSeverity="WARNING" displayName="잘못된 Karma 구성 파일" enabled="true" language="JavaScript" pluginId="Karma" pluginVersion="252.26199.162" isGlobalTool="false">&lt;!--
  ~ Copyright 2000-2018 JetBrains s.r.o. Use of this source code is governed by the Apache 2.0 license that can be found in the LICENSE file.
  --&gt;

&lt;html&gt;
&lt;body&gt;
  Karma 구성 파일(예: &lt;code&gt;karma.conf.js&lt;/code&gt;)의 파일 경로('basePath', 'files') 내 잠재적 오류를 보고합니다.
&lt;!-- tooltip end --&gt;&lt;p&gt;&lt;small&gt;Inspection ID: KarmaConfigFile&lt;/small&gt;&lt;/p&gt;&lt;/body&gt;
&lt;/html&gt;</inspection></group><group name="TypeScript" path="JavaScript 및 TypeScript"><inspection shortName="TypeScriptAbstractClassConstructorCanBeMadeProtected" defaultSeverity="WEAK WARNING" displayName="추상 클래스 생성자를 protected로 만들 수 있습니다" enabled="true" language="TypeScript" pluginId="JavaScript" pluginVersion="252.26199.162" isGlobalTool="false">&lt;html&gt;
&lt;body&gt;
추상 클래스의 public 생성자를 보고하고 protected으로 만들 것을 제안합니다(public인 의미가 없기 때문에).
&lt;!-- tooltip end --&gt;&lt;p&gt;&lt;small&gt;Inspection ID: TypeScriptAbstractClassConstructorCanBeMadeProtected&lt;/small&gt;&lt;/p&gt;&lt;/body&gt;
&lt;/html&gt;</inspection><inspection shortName="TypeScriptValidateTypes" defaultSeverity="ERROR" displayName="타입 불일치" enabled="true" language="TypeScript" pluginId="JavaScript" pluginVersion="252.26199.162" isGlobalTool="false">&lt;html&gt;
&lt;body&gt;
타입이 잘못된 매개변수, 반환 값, 또는 대입 표현식을 보고합니다.
&lt;!-- tooltip end --&gt;&lt;p&gt;&lt;small&gt;Inspection ID: TypeScriptValidateTypes&lt;/small&gt;&lt;/p&gt;&lt;/body&gt;
&lt;/html&gt;</inspection><inspection shortName="TypeScriptUMDGlobal" defaultSeverity="WEAK WARNING" displayName="참조된 UMD 전역 변수" enabled="true" language="JavaScript" pluginId="JavaScript" pluginVersion="252.26199.162" isGlobalTool="false">&lt;html&gt;
&lt;body&gt;
현재 파일이 모듈(ECMAScript 또는 CommonJS)인 경우, Universal Module Definition (UMD) 전역 변수의 사용을 보고합니다.
명시적 import 문 없이 UMD 변수를 참조하면 라이브러리가 묵시적으로 포함되지 않은 경우 런타임 오류가 일어날 수 있습니다.
&lt;!-- tooltip end --&gt;&lt;p&gt;&lt;small&gt;Inspection ID: TypeScriptUMDGlobal&lt;/small&gt;&lt;/p&gt;&lt;/body&gt;
&lt;/html&gt;</inspection><inspection shortName="TypeScriptExplicitMemberType" defaultSeverity="INFORMATION" displayName="명시적 타입" enabled="true" language="TypeScript" pluginId="JavaScript" pluginVersion="252.26199.162" isGlobalTool="false">&lt;html&gt;
&lt;body&gt;
명시적 타입에 대한 현재 코드 스타일과 일치하지 않는 타입 어노테이션을 보고합니다.
&lt;!-- tooltip end --&gt;
&lt;p&gt;
  컨텍스트에서 추론되는 타입이 타입 어노테이션과 정확히 일치하지 않는 경우 타입 선언은 불필요합니다. 예:
&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;
    var pi: number = 3.14
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;일부 경우에는 명시적 타입을 반드시 포함하는 것이 좋습니다. 명시적 타입은 우발적 타입 변경을 방지하고 코드를 더욱 명시적으로 만듭니다.&lt;/p&gt;
&lt;p&gt;&lt;small&gt;Inspection ID: TypeScriptExplicitMemberType&lt;/small&gt;&lt;/p&gt;&lt;/body&gt;
&lt;/html&gt;</inspection><inspection shortName="TypeScriptFieldCanBeMadeReadonly" defaultSeverity="WEAK WARNING" displayName="필드가 읽기 전용일 수 있습니다" enabled="true" language="TypeScript" pluginId="JavaScript" pluginVersion="252.26199.162" isGlobalTool="false">&lt;html&gt;
&lt;body&gt;
읽기 전용으로 만들 수 있는 private 필드를 보고합니다(예: 필드가 생성자에만 대입되는 경우).
&lt;!-- tooltip end --&gt;&lt;p&gt;&lt;small&gt;Inspection ID: TypeScriptFieldCanBeMadeReadonly&lt;/small&gt;&lt;/p&gt;&lt;/body&gt;
&lt;/html&gt;</inspection><inspection shortName="TypeScriptUnresolvedReference" defaultSeverity="ERROR" displayName="해결되지 않은 TypeScript 참조" enabled="true" language="TypeScript" pluginId="JavaScript" pluginVersion="252.26199.162" isGlobalTool="false">&lt;html&gt;
&lt;body&gt;
TypeScript 코드의 미해결 참조를 보고합니다.
&lt;!-- tooltip end --&gt;&lt;p&gt;&lt;small&gt;Inspection ID: TypeScriptUnresolvedReference&lt;/small&gt;&lt;/p&gt;&lt;/body&gt;
&lt;/html&gt;</inspection><inspection shortName="TypeScriptMissingConfigOption" defaultSeverity="WARNING" displayName="tsconfig.json 옵션 누락 " enabled="true" language="TypeScript" pluginId="JavaScript" pluginVersion="252.26199.162" isGlobalTool="false">&lt;html&gt;
&lt;body&gt;
&lt;code&gt;tsconfig.json&lt;/code&gt;에 명시적 옵션이 필요한 사용 위치를 보고합니다.
예를 들어, &lt;code&gt;.tsx&lt;/code&gt; 파일에서 JSX를 사용하려면 &lt;code&gt;tsconfig.json&lt;/code&gt;에 &lt;code&gt;'jsx'&lt;/code&gt; 프로퍼티가 포함되어야 합니다.
&lt;!-- tooltip end --&gt;&lt;p&gt;&lt;small&gt;Inspection ID: TypeScriptMissingConfigOption&lt;/small&gt;&lt;/p&gt;&lt;/body&gt;
&lt;/html&gt;</inspection><inspection shortName="TypeScriptJSXUnresolvedComponent" defaultSeverity="WEAK WARNING" displayName="해결되지 않은 JSX 구성 요소" enabled="true" language="TypeScript" pluginId="JavaScript" pluginVersion="252.26199.162" isGlobalTool="false">&lt;html&gt;
&lt;body&gt;
JSX 구성 요소에 대한 미해결 참조를 보고합니다.
참조 구성 요소가 프로젝트 또는 종속성으로 정의되어 있는 경우 import 문을 추가하거나 지정된 이름으로 새 구성 요소를 생성할 것을 권장합니다.
&lt;p&gt;새 구성 요소 템플릿을 '에디터 | 파일 및 템플릿'에서 수정할 수 있습니다.&lt;/p&gt;
&lt;!-- tooltip end --&gt;&lt;p&gt;&lt;small&gt;Inspection ID: TypeScriptJSXUnresolvedComponent&lt;/small&gt;&lt;/p&gt;&lt;/body&gt;
&lt;/html&gt;</inspection><inspection shortName="TypeScriptLibrary" defaultSeverity="ERROR" displayName="전역 라이브러리 누락" enabled="true" language="TypeScript" pluginId="JavaScript" pluginVersion="252.26199.162" isGlobalTool="false">&lt;html&gt;
&lt;body&gt;
심볼에 필요하지만 &lt;code&gt;tsconfig.json&lt;/code&gt; 내 &lt;code&gt;lib&lt;/code&gt; 컴파일러 옵션에 나열되어 있지 않은 TypeScript 라이브러리 파일을 보고합니다.
&lt;!-- tooltip end --&gt;&lt;p&gt;&lt;small&gt;Inspection ID: TypeScriptLibrary&lt;/small&gt;&lt;/p&gt;&lt;/body&gt;
&lt;/html&gt;</inspection><inspection shortName="TypeScriptDuplicateUnionOrIntersectionType" defaultSeverity="WARNING" displayName="공용체 또는 교차 타입 구성 요소 중복" enabled="true" language="TypeScript" pluginId="JavaScript" pluginVersion="252.26199.162" isGlobalTool="false">&lt;html&gt;
&lt;body&gt;
유니온 타입 또는 인터섹션 타입 내부의 중복 타입을 보고합니다.
&lt;!-- tooltip end --&gt;&lt;p&gt;&lt;small&gt;Inspection ID: TypeScriptDuplicateUnionOrIntersectionType&lt;/small&gt;&lt;/p&gt;&lt;/body&gt;
&lt;/html&gt;</inspection><inspection shortName="TypeScriptRedundantGenericType" defaultSeverity="WEAK WARNING" displayName="불필요한 타입 인수" enabled="true" language="TypeScript" pluginId="JavaScript" pluginVersion="252.26199.162" isGlobalTool="false">&lt;html&gt;
&lt;body&gt;
기본 인수와 동등하며 삭제가 가능한 타입 인수를 보고 합니다.
&lt;p&gt;
예:
&lt;pre&gt;&lt;code&gt;
type Foo&amp;lt;T=number&amp;gt; = T;
let z: Foo&amp;lt;number&amp;gt;;
&lt;/code&gt;&lt;/pre&gt;

&lt;!-- tooltip end --&gt;&lt;p&gt;&lt;small&gt;Inspection ID: TypeScriptRedundantGenericType&lt;/small&gt;&lt;/p&gt;&lt;/body&gt;
&lt;/html&gt;</inspection><inspection shortName="TypeScriptCheckImport" defaultSeverity="ERROR" displayName="해결되지 않은 가져온 이름" enabled="true" language="TypeScript" pluginId="JavaScript" pluginVersion="252.26199.162" isGlobalTool="false">&lt;html&gt;
&lt;body&gt;
TypeScript의&lt;code&gt;import&lt;/code&gt; 선언 내 해결되지 않은 이름 또는 바인딩을 보고합니다.
&lt;!-- tooltip end --&gt;&lt;p&gt;&lt;small&gt;Inspection ID: TypeScriptCheckImport&lt;/small&gt;&lt;/p&gt;&lt;/body&gt;
&lt;/html&gt;</inspection><inspection shortName="TypeScriptSuspiciousConstructorParameterAssignment" defaultSeverity="WARNING" displayName="대입된 생성자 필드 매개변수" enabled="true" language="TypeScript" pluginId="JavaScript" pluginVersion="252.26199.162" isGlobalTool="false">&lt;html&gt;
&lt;body&gt;
TypeScript 코드 내 클래스 필드가 생성자 파라미터로 선언되고 나서 이 파라미터가 대입되는 일반적인 실수를 보고합니다.&lt;br/&gt;
이 경우, 대응하는 필드는 대입되지 &lt;i&gt;않고&lt;/i&gt; 로컬 파라미터 값만 변경됩니다.
&lt;pre&gt;&lt;code&gt;
class Foo {
  constructor(private p: number) {
    p = 1; //must be this.p = 1;
  }
}
&lt;/code&gt;&lt;/pre&gt;
&lt;!-- tooltip end --&gt;&lt;p&gt;&lt;small&gt;Inspection ID: TypeScriptSuspiciousConstructorParameterAssignment&lt;/small&gt;&lt;/p&gt;&lt;/body&gt;
&lt;/html&gt;</inspection><inspection shortName="TypeScriptValidateGenericTypes" defaultSeverity="ERROR" displayName="올바르지 않은 제네릭 타입 인수" enabled="true" language="TypeScript" pluginId="JavaScript" pluginVersion="252.26199.162" isGlobalTool="false">&lt;html&gt;
&lt;body&gt;
함수, 인터페이스 또는 클래스 선언 내 유효하지 않은 타입 인수를 보고합니다.
&lt;!-- tooltip end --&gt;&lt;p&gt;&lt;small&gt;Inspection ID: TypeScriptValidateGenericTypes&lt;/small&gt;&lt;/p&gt;&lt;/body&gt;
&lt;/html&gt;</inspection><inspection shortName="TypeScriptConfig" defaultSeverity="WARNING" displayName="일관되지 않은 tsconfig.json 프로퍼티" enabled="true" language="JSON" pluginId="JavaScript" pluginVersion="252.26199.162" isGlobalTool="false">&lt;html&gt;
&lt;body&gt;
tsconfig.json 파일 내 &lt;code&gt;paths&lt;/code&gt;, &lt;code&gt;checkJs&lt;/code&gt;, 또는 &lt;code&gt;extends&lt;/code&gt; 프로퍼티의 불일치를 보고합니다.
&lt;br&gt;
&lt;code&gt;checkJs&lt;/code&gt; 프로퍼티에는 &lt;code&gt;allowJs&lt;/code&gt;가 필요합니다.
&lt;br&gt;
&lt;code&gt;extends&lt;/code&gt; 프로퍼티는 유효한 파일 참조여야 합니다.

&lt;!-- tooltip end --&gt;&lt;p&gt;&lt;small&gt;Inspection ID: TypeScriptConfig&lt;/small&gt;&lt;/p&gt;&lt;/body&gt;
&lt;/html&gt;</inspection><inspection shortName="JSEqualityComparisonWithCoercion.TS" defaultSeverity="WARNING" displayName="동치 연산자는 타입 강제 변환을 일으킬 수 있습니다" enabled="false" language="TypeScript" pluginId="JavaScript" pluginVersion="252.26199.162" isGlobalTool="false">&lt;html&gt;
&lt;body&gt;
예기치 않은 타입 강제 변환을 일으킬 수 있는 상등 연산자의 사용 위치를 보고합니다.
&lt;code&gt;==&lt;/code&gt; 또는 &lt;code&gt;!=&lt;/code&gt; 상등 연산자를 타입 안전 &lt;code&gt;===&lt;/code&gt; 또는 &lt;code&gt;!==&lt;/code&gt; 연산자로 바꿀 것을 제안합니다.

&lt;p&gt;선택한 옵션에 따라 다음 중 하나가 보고됩니다.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;code&gt;==&lt;/code&gt; 및 &lt;code&gt;!=&lt;/code&gt; 연산자의 모든 사용 위치.
  &lt;/li&gt;
  &lt;li&gt;
    null과의 비교를 제외한 모든 사용 위치. 일부 코드 스타일은 &lt;code&gt;x === null || x === undefined&lt;/code&gt; 대신 &lt;code&gt;x == null&lt;/code&gt;을 사용할 수 있도록 허용합니다.
  &lt;/li&gt;
  &lt;li&gt;
    의심스러운 표현식만(예: &lt;code&gt;0&lt;/code&gt;, &lt;code&gt;''&lt;/code&gt;, 
&lt;code&gt;null&lt;/code&gt;, &lt;code&gt;true&lt;/code&gt;, 
&lt;code&gt;false&lt;/code&gt; 또는 &lt;code&gt;undefined&lt;/code&gt;와의 &lt;code&gt;==&lt;/code&gt; 또는 &lt;code&gt;!=&lt;/code&gt; 비교).
  &lt;/li&gt;
&lt;/ul&gt;
&lt;!-- tooltip end --&gt;&lt;p&gt;&lt;small&gt;Inspection ID: JSEqualityComparisonWithCoercion.TS&lt;/small&gt;&lt;/p&gt;&lt;/body&gt;
&lt;/html&gt;</inspection><inspection shortName="TypeScriptSmartCast" defaultSeverity="WARNING" displayName="좁혀진 타입" enabled="true" language="TypeScript" pluginId="JavaScript" pluginVersion="252.26199.162" isGlobalTool="false">&lt;html&gt;
&lt;body&gt;
변수 타입이 타입 가드에 의해 좁혀진 변수의 사용 위치를 보고합니다.
심각도는 이 검사에 영향을 미치지 않습니다.
&lt;!-- tooltip end --&gt;&lt;p&gt;&lt;small&gt;Inspection ID: TypeScriptSmartCast&lt;/small&gt;&lt;/p&gt;&lt;/body&gt;
&lt;/html&gt;</inspection><inspection shortName="TypeScriptMissingAugmentationImport" defaultSeverity="INFORMATION" displayName="증강 가져오기 누락" enabled="true" language="TypeScript" pluginId="JavaScript" pluginVersion="252.26199.162" isGlobalTool="false">&lt;html&gt;
&lt;body&gt;
명시적 가져오기 없이 &lt;a href="https://www.typescriptlang.org/docs/handbook/declaration-merging.html#module-augmentation"&gt;보강 모듈&lt;/a&gt; 내 사용 위치를 보고합니다.
&lt;!-- tooltip end --&gt;&lt;p&gt;&lt;small&gt;Inspection ID: TypeScriptMissingAugmentationImport&lt;/small&gt;&lt;/p&gt;&lt;/body&gt;
&lt;/html&gt;</inspection></group><group name="EditorConfig" path=""><inspection shortName="EditorConfigNumerousWildcards" defaultSeverity="WEAK WARNING" displayName="와일드카드가 너무 많음" enabled="true" language="EditorConfig" pluginId="org.editorconfig.editorconfigjetbrains" pluginVersion="252.26199.169" isGlobalTool="false">&lt;!-- Copyright 2000-2018 JetBrains s.r.o. Use of this source code is governed by the Apache 2.0 license that can be found in the LICENSE file. --&gt;
&lt;html&gt;
&lt;body&gt;
너무 많은 와일드카드를 포함하는 섹션을 보고합니다. 지나친 와일드카드 사용은 성능 이슈를 가져올 수 있습니다.
&lt;!-- tooltip end --&gt;&lt;p&gt;&lt;small&gt;Inspection ID: EditorConfigNumerousWildcards&lt;/small&gt;&lt;/p&gt;&lt;/body&gt;
&lt;/html&gt;</inspection><inspection shortName="EditorConfigEmptyHeader" defaultSeverity="ERROR" displayName="빈 헤더" enabled="true" language="EditorConfig" pluginId="org.editorconfig.editorconfigjetbrains" pluginVersion="252.26199.169" isGlobalTool="false">&lt;!-- Copyright 2000-2018 JetBrains s.r.o. Use of this source code is governed by the Apache 2.0 license that can be found in the LICENSE file. --&gt;
&lt;html&gt;
&lt;body&gt;
헤더가 빈 섹션을 보고합니다. 섹션 헤더는 &lt;code&gt;gitignore&lt;/code&gt;에서 지원하는 것과 유사한 형식의 파일 경로 glob을 포함해야 합니다.
&lt;!-- tooltip end --&gt;&lt;p&gt;&lt;small&gt;Inspection ID: EditorConfigEmptyHeader&lt;/small&gt;&lt;/p&gt;&lt;/body&gt;
&lt;/html&gt;
</inspection><inspection shortName="EditorConfigPartialOverride" defaultSeverity="WEAK WARNING" displayName="겹치는 섹션" enabled="true" language="EditorConfig" pluginId="org.editorconfig.editorconfigjetbrains" pluginVersion="252.26199.169" isGlobalTool="false">&lt;!-- Copyright 2000-2018 JetBrains s.r.o. Use of this source code is governed by the Apache 2.0 license that can be found in the LICENSE file. --&gt;
&lt;html&gt;
&lt;body&gt;
다른 섹션에 있는 다른 하위 집합과 겹치는 현재 섹션에 지정된 파일의 하위 집합을 보고합니다. 예:
&lt;code&gt;[{foo,bar}]&lt;/code&gt; 및 &lt;code&gt;[{foo,bas}]&lt;/code&gt; 모두 “foo”를 포함합니다.
&lt;!-- tooltip end --&gt;&lt;p&gt;&lt;small&gt;Inspection ID: EditorConfigPartialOverride&lt;/small&gt;&lt;/p&gt;&lt;/body&gt;
&lt;/html&gt;
</inspection><inspection shortName="EditorConfigValueUniqueness" defaultSeverity="ERROR" displayName="고유하지 않은 목록 값" enabled="true" language="EditorConfig" pluginId="org.editorconfig.editorconfigjetbrains" pluginVersion="252.26199.169" isGlobalTool="false">&lt;!-- Copyright 2000-2018 JetBrains s.r.o. Use of this source code is governed by the Apache 2.0 license that can be found in the LICENSE file. --&gt;
&lt;html&gt;
&lt;body&gt;
값 list 내 중복을 보고합니다.
&lt;!-- tooltip end --&gt;&lt;p&gt;&lt;small&gt;Inspection ID: EditorConfigValueUniqueness&lt;/small&gt;&lt;/p&gt;&lt;/body&gt;
&lt;/html&gt;
</inspection><inspection shortName="EditorConfigPairAcceptability" defaultSeverity="ERROR" displayName="예기치 않은 키-값 쌍" enabled="true" language="EditorConfig" pluginId="org.editorconfig.editorconfigjetbrains" pluginVersion="252.26199.169" isGlobalTool="false">&lt;!-- Copyright 2000-2018 JetBrains s.r.o. Use of this source code is governed by the Apache 2.0 license that can be found in the LICENSE file. --&gt;
&lt;html&gt;
&lt;body&gt;
현재 컨텍스트에서 허용되지 않는 키-값 쌍을 보고합니다.
&lt;!-- tooltip end --&gt;&lt;p&gt;&lt;small&gt;Inspection ID: EditorConfigPairAcceptability&lt;/small&gt;&lt;/p&gt;&lt;/body&gt;
&lt;/html&gt;
</inspection><inspection shortName="EditorConfigListAcceptability" defaultSeverity="ERROR" displayName="예기치 않은 값 목록" enabled="true" language="EditorConfig" pluginId="org.editorconfig.editorconfigjetbrains" pluginVersion="252.26199.169" isGlobalTool="false">&lt;!-- Copyright 2000-2018 JetBrains s.r.o. Use of this source code is governed by the Apache 2.0 license that can be found in the LICENSE file. --&gt;
&lt;html&gt;
&lt;body&gt;
list가 지원되지 않는 프로퍼티에 사용된 값 list를 보고합니다. 이 경우 한 개의 값만 지정될 수 있습니다.
&lt;!-- tooltip end --&gt;&lt;p&gt;&lt;small&gt;Inspection ID: EditorConfigListAcceptability&lt;/small&gt;&lt;/p&gt;&lt;/body&gt;
&lt;/html&gt;
</inspection><inspection shortName="EditorConfigCharClassRedundancy" defaultSeverity="WARNING" displayName="불필요한 문자 클래스" enabled="true" language="EditorConfig" pluginId="org.editorconfig.editorconfigjetbrains" pluginVersion="252.26199.169" isGlobalTool="false">&lt;!-- Copyright 2000-2018 JetBrains s.r.o. Use of this source code is governed by the Apache 2.0 license that can be found in the LICENSE file. --&gt;
&lt;html&gt;
&lt;body&gt;
한 개의 문자로 구성된 문자 클래스를 보고합니다.
이러한 클래스는 &lt;code&gt;[a]&lt;/code&gt;&amp;rarr;&lt;code&gt;a&lt;/code&gt; 예와 같이 한 개의 문자로 단순화될 수 있습니다.
&lt;!-- tooltip end --&gt;&lt;p&gt;&lt;small&gt;Inspection ID: EditorConfigCharClassRedundancy&lt;/small&gt;&lt;/p&gt;&lt;/body&gt;
&lt;/html&gt;
</inspection><inspection shortName="EditorConfigEncoding" defaultSeverity="WARNING" displayName="파일 인코딩이 EditorConfig 문자세트와 일치하지 않습니다" enabled="true" language="" pluginId="org.editorconfig.editorconfigjetbrains" pluginVersion="252.26199.169" isGlobalTool="false">&lt;html&gt;
&lt;body&gt;
현재 파일 인코딩이 .editorconfig 파일의 'charset' 프로퍼티에 정의된 인코딩과 일치하는지 확인합니다.
&lt;!-- tooltip end --&gt;&lt;p&gt;&lt;small&gt;Inspection ID: EditorConfigEncoding&lt;/small&gt;&lt;/p&gt;&lt;/body&gt;
&lt;/html&gt;</inspection><inspection shortName="EditorConfigRootDeclarationUniqueness" defaultSeverity="ERROR" displayName="추가 최상위 선언" enabled="true" language="EditorConfig" pluginId="org.editorconfig.editorconfigjetbrains" pluginVersion="252.26199.169" isGlobalTool="false">&lt;!-- Copyright 2000-2018 JetBrains s.r.o. Use of this source code is governed by the Apache 2.0 license that can be found in the LICENSE file. --&gt;
&lt;html&gt;
&lt;body&gt;
여러 개의 최상위 선언을 보고합니다. EditorConfig 파일에 선택적 “root=true” 최상위 선언이 하나만 있을 수 있습니다.
여러 개의 최상위 선언은 허용되지 않습니다.
&lt;!-- tooltip end --&gt;&lt;p&gt;&lt;small&gt;Inspection ID: EditorConfigRootDeclarationUniqueness&lt;/small&gt;&lt;/p&gt;&lt;/body&gt;
&lt;/html&gt;</inspection><inspection shortName="EditorConfigUnexpectedComma" defaultSeverity="ERROR" displayName="예기치 않은 쉼표" enabled="true" language="EditorConfig" pluginId="org.editorconfig.editorconfigjetbrains" pluginVersion="252.26199.169" isGlobalTool="false">&lt;!-- Copyright 2000-2018 JetBrains s.r.o. Use of this source code is governed by the Apache 2.0 license that can be found in the LICENSE file. --&gt;
&lt;html&gt;
&lt;body&gt;
현재 컨텍스트에서 사용될 수 없는 쉼표를 보고합니다. 쉼표는 목록에서 값의 구분 기호로만 허용됩니다.
&lt;!-- tooltip end --&gt;&lt;p&gt;&lt;small&gt;Inspection ID: EditorConfigUnexpectedComma&lt;/small&gt;&lt;/p&gt;&lt;/body&gt;
&lt;/html&gt;
</inspection><inspection shortName="EditorConfigReferenceCorrectness" defaultSeverity="ERROR" displayName="잘못된 참조" enabled="true" language="EditorConfig" pluginId="org.editorconfig.editorconfigjetbrains" pluginVersion="252.26199.169" isGlobalTool="false">&lt;!-- Copyright 2000-2018 JetBrains s.r.o. Use of this source code is governed by the Apache 2.0 license that can be found in the LICENSE file. --&gt;
&lt;html&gt;
&lt;body&gt;
알 수 없거나 잘못된 타입을 가진 식별자를 보고합니다.
&lt;!-- tooltip end --&gt;&lt;p&gt;&lt;small&gt;Inspection ID: EditorConfigReferenceCorrectness&lt;/small&gt;&lt;/p&gt;&lt;/body&gt;
&lt;/html&gt;
</inspection><inspection shortName="EditorConfigRootDeclarationCorrectness" defaultSeverity="ERROR" displayName="예기치 않은 최상위 선언" enabled="true" language="EditorConfig" pluginId="org.editorconfig.editorconfigjetbrains" pluginVersion="252.26199.169" isGlobalTool="false">&lt;!-- Copyright 2000-2018 JetBrains s.r.o. Use of this source code is governed by the Apache 2.0 license that can be found in the LICENSE file. --&gt;
&lt;html&gt;
&lt;body&gt;
예기치 않은 최상위 선언을 보고합니다. EditorConfig 파일에서 “root=true”가 아닌 최상위 선언은 허락되지 않습니다.
&lt;!-- tooltip end --&gt;&lt;p&gt;&lt;small&gt;Inspection ID: EditorConfigRootDeclarationCorrectness&lt;/small&gt;&lt;/p&gt;&lt;/body&gt;
&lt;/html&gt;</inspection><inspection shortName="EditorConfigWildcardRedundancy" defaultSeverity="WARNING" displayName="중복된 와일드카드" enabled="true" language="EditorConfig" pluginId="org.editorconfig.editorconfigjetbrains" pluginVersion="252.26199.169" isGlobalTool="false">&lt;!-- Copyright 2000-2018 JetBrains s.r.o. Use of this source code is governed by the Apache 2.0 license that can be found in the LICENSE file. --&gt;
&lt;html&gt;
&lt;body&gt;
“**” 와일드카드가 동일한 섹션에서 사용되므로 불필요해진 와일드카드를 보고합니다.
&lt;p&gt;
“**” 와일드카드가 다른 와일드카드보다 더 광범위한 파일 집합을 정의합니다.
때문에, 동일한 섹션의 다른 와일드카드는 영향이 없으며 제거될 수 있습니다.
&lt;!-- tooltip end --&gt;&lt;p&gt;&lt;small&gt;Inspection ID: EditorConfigWildcardRedundancy&lt;/small&gt;&lt;/p&gt;&lt;/body&gt;
&lt;/html&gt;
</inspection><inspection shortName="EditorConfigHeaderUniqueness" defaultSeverity="WARNING" displayName="EditorConfig 섹션이 고유하지 않습니다" enabled="true" language="EditorConfig" pluginId="org.editorconfig.editorconfigjetbrains" pluginVersion="252.26199.169" isGlobalTool="false">&lt;!-- Copyright 2000-2018 JetBrains s.r.o. Use of this source code is governed by the Apache 2.0 license that can be found in the LICENSE file. --&gt;
&lt;html&gt;
&lt;body&gt;
다른 섹션과 동일한 파일 패턴을 정의하는 섹션을 보고합니다.
&lt;!-- tooltip end --&gt;&lt;p&gt;&lt;small&gt;Inspection ID: EditorConfigHeaderUniqueness&lt;/small&gt;&lt;/p&gt;&lt;/body&gt;
&lt;/html&gt;
</inspection><inspection shortName="EditorConfigVerifyByCore" defaultSeverity="ERROR" displayName="잘못된 .editorconfig 파일" enabled="true" language="EditorConfig" pluginId="org.editorconfig.editorconfigjetbrains" pluginVersion="252.26199.169" isGlobalTool="false">&lt;html&gt;
&lt;body&gt;
백킹 EditorConfig 코어 라이브러리를 사용하여 전체 파일을 검증하고 실패하는 곳이 있으면 모두 보고합니다.
실패가 어느 곳에서든 발생하면 EditorConfig 프로퍼티가 제대로 적용되지 않습니다.
&lt;!-- tooltip end --&gt;&lt;p&gt;&lt;small&gt;Inspection ID: EditorConfigVerifyByCore&lt;/small&gt;&lt;/p&gt;&lt;/body&gt;
&lt;/html&gt;</inspection><inspection shortName="EditorConfigPatternEnumerationRedundancy" defaultSeverity="ERROR" displayName="불필요한 중괄호" enabled="true" language="EditorConfig" pluginId="org.editorconfig.editorconfigjetbrains" pluginVersion="252.26199.169" isGlobalTool="false">&lt;!-- Copyright 2000-2018 JetBrains s.r.o. Use of this source code is governed by the Apache 2.0 license that can be found in the LICENSE file. --&gt;
&lt;html&gt;
&lt;body&gt;
여러 패턴이 포함된 목록(예: &lt;code&gt;{foo,bar}&lt;/code&gt;)이 아닌 하나의 패턴만 포함된 패턴 목록(예: &lt;code&gt;{foo}&lt;/code&gt;) 또는 빈 &lt;code&gt;{}&lt;/code&gt;인 패턴 목록을 보고합니다. 이 경우 중괄호는 이름의 일부로 처리됩니다. 예를 들어,
&lt;code&gt;*.{a}&lt;/code&gt; 패턴은 &lt;code&gt;my.{a}&lt;/code&gt; 파일과 일치하지만 &lt;code&gt;my.a&lt;/code&gt;와는 일치하지 않습니다.
&lt;!-- tooltip end --&gt;&lt;p&gt;&lt;small&gt;Inspection ID: EditorConfigPatternEnumerationRedundancy&lt;/small&gt;&lt;/p&gt;&lt;/body&gt;
&lt;/html&gt;
</inspection><inspection shortName="EditorConfigShadowedOption" defaultSeverity="WARNING" displayName="재정의된 프로퍼티" enabled="true" language="EditorConfig" pluginId="org.editorconfig.editorconfigjetbrains" pluginVersion="252.26199.169" isGlobalTool="false">&lt;!-- Copyright 2000-2018 JetBrains s.r.o. Use of this source code is governed by the Apache 2.0 license that can be found in the LICENSE file. --&gt;
&lt;html&gt;
&lt;body&gt;
다른 섹션에 이미 정의된 프로퍼티를 보고합니다.
&lt;p&gt;예:
&lt;pre&gt;&lt;code&gt;
[*.java]
indent_size=4
[{*.java,*.js}]
indent_size=2
&lt;/code&gt;&lt;/pre&gt;
두 번째 섹션도 모든 &lt;code&gt;*.java&lt;/code&gt; 파일을 포함하지만 indent_size도 재정의합니다.
결과적으로 2 값이 &lt;code&gt;*.java&lt;/code&gt; 파일에 사용됩니다.
&lt;!-- tooltip end --&gt;&lt;p&gt;&lt;small&gt;Inspection ID: EditorConfigShadowedOption&lt;/small&gt;&lt;/p&gt;&lt;/body&gt;
&lt;/html&gt;
</inspection><inspection shortName="EditorConfigCharClassLetterRedundancy" defaultSeverity="WARNING" displayName="문자 클래스의 문자 중복" enabled="true" language="EditorConfig" pluginId="org.editorconfig.editorconfigjetbrains" pluginVersion="252.26199.169" isGlobalTool="false">&lt;!-- Copyright 2000-2018 JetBrains s.r.o. Use of this source code is governed by the Apache 2.0 license that can be found in the LICENSE file. --&gt;
&lt;html&gt;
&lt;body&gt;
EditorConfig 섹션에서 예를 들어 &lt;code&gt;[aa]&lt;/code&gt;와 같이 문자 클래스에서 중복된 문자를 포함하는 와일드카드 패턴을 보고합니다.
&lt;!-- tooltip end --&gt;&lt;p&gt;&lt;small&gt;Inspection ID: EditorConfigCharClassLetterRedundancy&lt;/small&gt;&lt;/p&gt;&lt;/body&gt;
&lt;/html&gt;
</inspection><inspection shortName="EditorConfigValueCorrectness" defaultSeverity="ERROR" displayName="잘못된 프로퍼티 값" enabled="true" language="EditorConfig" pluginId="org.editorconfig.editorconfigjetbrains" pluginVersion="252.26199.169" isGlobalTool="false">&lt;!-- Copyright 2000-2018 JetBrains s.r.o. Use of this source code is governed by the Apache 2.0 license that can be found in the LICENSE file. --&gt;
&lt;html&gt;
&lt;body&gt;
값 제한을 충족하지 않는 프로퍼티 값을 보고합니다. 예를 들어 일부 프로퍼티는 "true" 또는 "false" 값만 포함할 수 있으며 다른 프로퍼티는 정수만을 포함할 수 있습니다. 값이 제한된 세트의 변형을 가지는 경우 모든 변형을 확인하려면 코드 완성 기능을 사용하세요.
&lt;!-- tooltip end --&gt;&lt;p&gt;&lt;small&gt;Inspection ID: EditorConfigValueCorrectness&lt;/small&gt;&lt;/p&gt;&lt;/body&gt;
&lt;/html&gt;
</inspection><inspection shortName="EditorConfigKeyCorrectness" defaultSeverity="WARNING" displayName="알 수 없는 프로퍼티" enabled="true" language="EditorConfig" pluginId="org.editorconfig.editorconfigjetbrains" pluginVersion="252.26199.169" isGlobalTool="false">&lt;!-- Copyright 2000-2018 JetBrains s.r.o. Use of this source code is governed by the Apache 2.0 license that can be found in the LICENSE file. --&gt;
&lt;html&gt;
&lt;body&gt;
IDE가 지원하지 않는 프로퍼티를 보고합니다. 참고: 일부 “ij” 도메인 프로퍼티는 특정 언어 플러그인을 필요로 할 수 있습니다.
&lt;!-- tooltip end --&gt;&lt;p&gt;&lt;small&gt;Inspection ID: EditorConfigKeyCorrectness&lt;/small&gt;&lt;/p&gt;&lt;/body&gt;
&lt;/html&gt;
</inspection><inspection shortName="EditorConfigUnusedDeclaration" defaultSeverity="WARNING" displayName="사용되지 않는 선언" enabled="true" language="EditorConfig" pluginId="org.editorconfig.editorconfigjetbrains" pluginVersion="252.26199.169" isGlobalTool="false">&lt;!-- Copyright 2000-2018 JetBrains s.r.o. Use of this source code is governed by the Apache 2.0 license that can be found in the LICENSE file. --&gt;
&lt;html&gt;
&lt;body&gt;
사용하지 않는 선언을 보고합니다. 이러한 선언은 제거될 수 있습니다.
&lt;!-- tooltip end --&gt;&lt;p&gt;&lt;small&gt;Inspection ID: EditorConfigUnusedDeclaration&lt;/small&gt;&lt;/p&gt;&lt;/body&gt;
&lt;/html&gt;
</inspection><inspection shortName="EditorConfigDeprecatedDescriptor" defaultSeverity="WARNING" displayName="곧 사용할 수 없게 될 프로퍼티" enabled="true" language="EditorConfig" pluginId="org.editorconfig.editorconfigjetbrains" pluginVersion="252.26199.169" isGlobalTool="false">&lt;!-- Copyright 2000-2018 JetBrains s.r.o. Use of this source code is governed by the Apache 2.0 license that can be found in the LICENSE file. --&gt;
&lt;html&gt;
&lt;body&gt;
더 이상 지원되지 않는 EditorConfig 프로퍼티를 보고합니다.
&lt;!-- tooltip end --&gt;&lt;p&gt;&lt;small&gt;Inspection ID: EditorConfigDeprecatedDescriptor&lt;/small&gt;&lt;/p&gt;&lt;/body&gt;
&lt;/html&gt;
</inspection><inspection shortName="EditorConfigEmptySection" defaultSeverity="WARNING" displayName="빈 섹션" enabled="true" language="EditorConfig" pluginId="org.editorconfig.editorconfigjetbrains" pluginVersion="252.26199.169" isGlobalTool="false">&lt;!-- Copyright 2000-2018 JetBrains s.r.o. Use of this source code is governed by the Apache 2.0 license that can be found in the LICENSE file. --&gt;
&lt;html&gt;
&lt;body&gt;
EditorConfig 프로퍼티를 전혀 포함하지 않는 섹션을 보고합니다.
&lt;!-- tooltip end --&gt;&lt;p&gt;&lt;small&gt;Inspection ID: EditorConfigEmptySection&lt;/small&gt;&lt;/p&gt;&lt;/body&gt;
&lt;/html&gt;
</inspection><inspection shortName="EditorConfigMissingRequiredDeclaration" defaultSeverity="ERROR" displayName="필요한 선언이 누락되었습니다" enabled="true" language="EditorConfig" pluginId="org.editorconfig.editorconfigjetbrains" pluginVersion="252.26199.169" isGlobalTool="false">&lt;!-- Copyright 2000-2018 JetBrains s.r.o. Use of this source code is governed by the Apache 2.0 license that can be found in the LICENSE file. --&gt;
&lt;html&gt;
&lt;body&gt;
필수 선언이 누락된 프로퍼티를 보고합니다. 더 자세한 내용은 문서를 참고하세요.
&lt;!-- tooltip end --&gt;&lt;p&gt;&lt;small&gt;Inspection ID: EditorConfigMissingRequiredDeclaration&lt;/small&gt;&lt;/p&gt;&lt;/body&gt;
&lt;/html&gt;
</inspection><inspection shortName="EditorConfigShadowingOption" defaultSeverity="WARNING" displayName="프로퍼티 재정의" enabled="true" language="EditorConfig" pluginId="org.editorconfig.editorconfigjetbrains" pluginVersion="252.26199.169" isGlobalTool="false">&lt;!-- Copyright 2000-2018 JetBrains s.r.o. Use of this source code is governed by the Apache 2.0 license that can be found in the LICENSE file. --&gt;
&lt;html&gt;
&lt;body&gt;
파일 내 먼저 정의된 동일한 프로퍼티를 재정의하는 프로퍼티를 보고합니다.
&lt;p&gt;예:
&lt;pre&gt;&lt;code&gt;
[*.java]
indent_size=4
[{*.java,*.js}]
indent_size=2
&lt;/code&gt;&lt;/pre&gt;
두 번째 섹션은 &lt;code&gt;[*. java]&lt;/code&gt;와 동일한 파일을 포함하지만 indent_size 값도 2로 설정합니다.
즉, 첫 번째 선언인 &lt;code&gt;indent_size=4&lt;/code&gt;는 무시됩니다.
&lt;!-- tooltip end --&gt;&lt;p&gt;&lt;small&gt;Inspection ID: EditorConfigShadowingOption&lt;/small&gt;&lt;/p&gt;&lt;/body&gt;
&lt;/html&gt;
</inspection><inspection shortName="EditorConfigSpaceInHeader" defaultSeverity="WEAK WARNING" displayName="파일 패턴 내 공백" enabled="true" language="EditorConfig" pluginId="org.editorconfig.editorconfigjetbrains" pluginVersion="252.26199.169" isGlobalTool="false">&lt;!-- Copyright 2000-2018 JetBrains s.r.o. Use of this source code is governed by the Apache 2.0 license that can be found in the LICENSE file. --&gt;
&lt;html&gt;
&lt;body&gt;
패턴 매칭에 영향을 주는 와일드카드 패턴 내 공백 문자를 보고합니다.
이러한 문자가 의도적인 것이 아닌 경우 문자는 제거되어야 합니다.
&lt;!-- tooltip end --&gt;&lt;p&gt;&lt;small&gt;Inspection ID: EditorConfigSpaceInHeader&lt;/small&gt;&lt;/p&gt;&lt;/body&gt;
&lt;/html&gt;
</inspection><inspection shortName="EditorConfigPatternRedundancy" defaultSeverity="WARNING" displayName="중복 또는 불필요한 패턴" enabled="true" language="EditorConfig" pluginId="org.editorconfig.editorconfigjetbrains" pluginVersion="252.26199.169" isGlobalTool="false">&lt;!-- Copyright 2000-2018 JetBrains s.r.o. Use of this source code is governed by the Apache 2.0 license that can be found in the LICENSE file. --&gt;
&lt;html&gt;
&lt;body&gt;
같은 스코프의 파일 또는 더 넓은 스코프를 정의하는 다른 패턴이 이미 존재하므로 불필요한 파일 패턴을 보고합니다.
예를 들어, &lt;code&gt;[{*.java,*}]&lt;/code&gt;에서 첫 번째 &lt;code&gt;*.java&lt;/code&gt; 패턴이 &lt;code&gt;*&lt;/code&gt;에 비해 더 좁은 스코프를 정의합니다.
따라서 이 패턴은 불필요하며 제거될 수 있습니다.
&lt;!-- tooltip end --&gt;&lt;p&gt;&lt;small&gt;Inspection ID: EditorConfigPatternRedundancy&lt;/small&gt;&lt;/p&gt;&lt;/body&gt;
&lt;/html&gt;
</inspection><inspection shortName="EditorConfigOptionRedundancy" defaultSeverity="WARNING" displayName="불필요한 프로퍼티" enabled="true" language="EditorConfig" pluginId="org.editorconfig.editorconfigjetbrains" pluginVersion="252.26199.169" isGlobalTool="false">&lt;!-- Copyright 2000-2018 JetBrains s.r.o. Use of this source code is governed by the Apache 2.0 license that can be found in the LICENSE file. --&gt;
&lt;html&gt;
&lt;body&gt;
다른 응용 섹션이 동일한 프로퍼티 및 값을 포함하므로 불필요한 프로퍼티를 보고합니다.
&lt;p&gt;
예:
&lt;pre&gt;&lt;code&gt;
[*]
indent_size=4
[*.java]
indent_size=4
&lt;/code&gt;&lt;/pre&gt;
두 가지 모두 &lt;code&gt;*.java&lt;/code&gt; 파일에 적용 가능하며 동일한 &lt;code&gt;indent_size&lt;/code&gt; 값을 정의합니다.
&lt;!-- tooltip end --&gt;&lt;p&gt;&lt;small&gt;Inspection ID: EditorConfigOptionRedundancy&lt;/small&gt;&lt;/p&gt;&lt;/body&gt;
&lt;/html&gt;
</inspection><inspection shortName="EditorConfigNoMatchingFiles" defaultSeverity="WARNING" displayName="일치하는 파일이 없음" enabled="true" language="EditorConfig" pluginId="org.editorconfig.editorconfigjetbrains" pluginVersion="252.26199.169" isGlobalTool="false">&lt;!-- Copyright 2000-2018 JetBrains s.r.o. Use of this source code is governed by the Apache 2.0 license that can be found in the LICENSE file. --&gt;
&lt;html&gt;
&lt;body&gt;
&lt;code&gt;.editorconfig&lt;/code&gt; 파일이 위치한 디렉터리 내 모든 파일과 일치하는 패턴이 없는 와일드카드를 사용하는 섹션을 보고합니다.
&lt;!-- tooltip end --&gt;&lt;p&gt;&lt;small&gt;Inspection ID: EditorConfigNoMatchingFiles&lt;/small&gt;&lt;/p&gt;&lt;/body&gt;
&lt;/html&gt;
</inspection></group><group name="Pug/Jade" path=""><inspection shortName="JadeTabsAndSpaces" defaultSeverity="ERROR" displayName="탭 및 공백이 둘 다 사용됨" enabled="true" language="Jade" pluginId="com.jetbrains.plugins.jade" pluginVersion="252.26199.162" isGlobalTool="false">&lt;html&gt;
&lt;body&gt;
Pug 파일 내 공백 및 들여쓰기 탭 사용을 보고합니다.
&lt;!-- tooltip end --&gt;&lt;p&gt;&lt;small&gt;Inspection ID: JadeTabsAndSpaces&lt;/small&gt;&lt;/p&gt;&lt;/body&gt;
&lt;/html&gt;</inspection></group><group name="데이터 흐름" path="JavaScript 및 TypeScript"><inspection shortName="ReuseOfLocalVariableJS" defaultSeverity="WARNING" displayName="지역 변수 재사용" enabled="false" language="JavaScript" pluginId="JavaScript" pluginVersion="252.26199.162" isGlobalTool="false">&lt;html&gt;
&lt;body&gt;
지역 변수 재사용 및 원래 변수의 사용과는 관계없는 새 값으로 해당 변수 덮어쓰기를 보고합니다.  지역 변수의 의도된 의미가 각 사용 위치에 따라 다를 수 있으므로
이러한 방식의 지역 변수 재사용은 혼란을 일으킬 수 있습니다.  또한 코드 변경으로 인해 값이 사용되고 있는 도중에 덮어쓰기되는 버그를 일으킬 수 있습니다.   변수의 수명을 가능한 한 짧게 유지하고 코드 간결성을 위해 지역 변수를 재사용하지 않는 것이 좋습니다.
&lt;!-- tooltip end --&gt;&lt;p&gt;&lt;small&gt;Inspection ID: ReuseOfLocalVariableJS&lt;/small&gt;&lt;/p&gt;&lt;/body&gt;
&lt;/html&gt;</inspection><inspection shortName="UnnecessaryLocalVariableJS" defaultSeverity="WARNING" displayName="중복 지역 변수" enabled="true" language="JavaScript" pluginId="JavaScript" pluginVersion="252.26199.162" isGlobalTool="false">&lt;html&gt;
&lt;body&gt;
함수를 더 쉽게 이해하는 데 도움이 되지 않는 다음과 같은 불필요한 지역 변수를 보고합니다. &lt;ul&gt;
&lt;li&gt;즉시 반환되는 지역 변수&lt;/li&gt;
&lt;li&gt;다른 변수로 즉시 대입되어 더 이상 사용되지 않는 지역 변수&lt;/li&gt;
&lt;li&gt;다른 지역 변수 또는 매개변수와 항상 같은 값을 가지는 지역 변수&lt;/li&gt;&lt;/ul&gt;
&lt;!-- tooltip end --&gt;
&lt;p&gt;
아래 체크박스를 사용하여 이 검사가 즉시 반환되거나 던져지는 변수를 무시하도록 하십시오.  일부 코드 스타일은 명확도와 디버그 용이성을 위해 
그러한 변수를 사용할 것을 제안합니다.
&lt;/p&gt;
&lt;p&gt;&lt;small&gt;Inspection ID: UnnecessaryLocalVariableJS&lt;/small&gt;&lt;/p&gt;&lt;/body&gt;
&lt;/html&gt;</inspection></group><group name="Dockerfile" path=""><inspection shortName="DockerFileArgumentCount" defaultSeverity="ERROR" displayName="잘못된 인수 개수" enabled="true" language="Dockerfile" pluginId="Docker" pluginVersion="252.26199.163" isGlobalTool="false">&lt;html&gt;
&lt;body&gt;
&lt;p&gt;Dockerfile 명령어의 잘못된 인수 개수를 보고합니다.&lt;/p&gt;
&lt;p&gt;
  인수 개수가 잘못된 명령에 도달하면 Docker 빌드는 실패합니다.
&lt;/p&gt;
&lt;!-- tooltip end --&gt;&lt;p&gt;&lt;small&gt;Inspection ID: DockerFileArgumentCount&lt;/small&gt;&lt;/p&gt;&lt;/body&gt;
&lt;/html&gt;</inspection><inspection shortName="DockerFileEntrypointWithoutExec" defaultSeverity="WARNING" displayName="진입점 셸 서식에 'exec' 누락" enabled="true" language="Dockerfile" pluginId="Docker" pluginVersion="252.26199.163" isGlobalTool="false">&lt;html&gt;
&lt;body&gt;
&lt;p&gt;ENTRYPOINT 명령어의 셸 서식에서 누락된 &lt;code&gt;exec&lt;/code&gt;을 보고합니다.&lt;/p&gt;
&lt;p&gt;
  &lt;code&gt;docker stop&lt;/code&gt;이 오래 실행되는 ENTRYPOINT 실행 파일에 대해 올바르게 신호를 보내려면&lt;code&gt;exec&lt;/code&gt;으로 시작해야 합니다.
&lt;/p&gt;
&lt;p&gt;
  자세한 정보는 &lt;a href="https://docs.docker.com/reference/dockerfile/#shell-form-entrypoint-example"&gt;Dockerfile 참조&lt;/a&gt;를 확인하세요.
&lt;/p&gt;
&lt;!-- tooltip end --&gt;&lt;p&gt;&lt;small&gt;Inspection ID: DockerFileEntrypointWithoutExec&lt;/small&gt;&lt;/p&gt;&lt;/body&gt;
&lt;/html&gt;</inspection><inspection shortName="DockerFileHeredocDelimiters" defaultSeverity="ERROR" displayName="닫히지 않은 heredoc 구분자" enabled="true" language="Dockerfile" pluginId="Docker" pluginVersion="252.26199.163" isGlobalTool="false">&lt;html&gt;
&lt;body&gt;
&lt;p&gt;
  파일 끝의 닫히지 않은 heredoc 구분 기호를 보고합니다.
&lt;/p&gt;
&lt;p&gt;&lt;b&gt;예:&lt;/b&gt;&lt;/p&gt;
이 코드는 누락된 FILE2 및 FILE3 구분 기호를 보고합니다.
&lt;pre&gt;&lt;code&gt;
  RUN &amp;lt;&amp;lt;FILE1 cat &amp;gt; file1 &amp;&amp; &amp;lt;&amp;lt;FILE2 cat &amp;gt; file2 &amp;&amp; &amp;lt;&amp;lt;FILE3 cat &amp;gt; file3
  mkdir -p foo/bar
  FILE1
&lt;/code&gt;&lt;/pre&gt;
&lt;!-- tooltip end --&gt;&lt;p&gt;&lt;small&gt;Inspection ID: DockerFileHeredocDelimiters&lt;/small&gt;&lt;/p&gt;&lt;/body&gt;
&lt;/html&gt;</inspection><inspection shortName="DockerFileCopyHeredoc" defaultSeverity="ERROR" displayName="ADD/COPY의 마지막 인수(대상)로 지정된 heredoc" enabled="true" language="Dockerfile" pluginId="Docker" pluginVersion="252.26199.163" isGlobalTool="false">&lt;html&gt;
&lt;body&gt;
&lt;p&gt;
  ADD/COPY 명령어의 마지막 인수(대상)로 사용된 heredoc을 보고합니다.
&lt;/p&gt;
&lt;p&gt;&lt;b&gt;예:&lt;/b&gt;&lt;/p&gt;
이 코드는 잘못된 대상을 정의합니다.
&lt;pre&gt;&lt;code&gt;
  COPY foo &amp;lt;&amp;lt;EOF1 bar &amp;lt;&amp;lt;EOF2
  file content 1
  EOF1
  file content 2
  EOF2
&lt;/code&gt;&lt;/pre&gt;
&lt;!-- tooltip end --&gt;&lt;p&gt;&lt;small&gt;Inspection ID: DockerFileCopyHeredoc&lt;/small&gt;&lt;/p&gt;&lt;/body&gt;
&lt;/html&gt;</inspection><inspection shortName="DockerFileAddOrCopyPaths" defaultSeverity="WARNING" displayName="'ADD'/'COPY' 명령어의 잘못된 대상" enabled="true" language="Dockerfile" pluginId="Docker" pluginVersion="252.26199.163" isGlobalTool="false">&lt;html&gt;
&lt;body&gt;
&lt;p&gt;&lt;code&gt;ADD&lt;/code&gt; 및 &lt;code&gt;COPY&lt;/code&gt; 명령어 내 잘못된 대상 디렉터리를 보고합니다.&lt;/p&gt;
&lt;p&gt;
  &lt;a href="https://docs.docker.com/engine/reference/builder/#add"&gt;Dockerfile 사양&lt;/a&gt;에 따르면 여러 개의 소스가 지정된 경우 대상은 디렉터리여야 하며 슬래시 '/'로 끝나야 합니다.
  그러지 않으면 Docker 빌드가 실패합니다.
&lt;/p&gt;
&lt;!-- tooltip end --&gt;
&lt;p&gt;&lt;b&gt;예:&lt;/b&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;
  # 아래 명령어 모두 실패함
  ADD textA.txt textB.txt relativeDir
  ADD ["binaryA.jar", "binary2.jar", "destination"]
  COPY text3.txt text4.txt /absolute/path
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;빠른 수정을 적용한 후:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;
  ADD textA.txt textB.txt relativeDir/
  ADD ["binaryA.jar", "binary2.jar", "destination/"]
  COPY text3.txt text4.txt /absolute/path/
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;small&gt;Inspection ID: DockerFileAddOrCopyPaths&lt;/small&gt;&lt;/p&gt;&lt;/body&gt;
&lt;/html&gt;</inspection><inspection shortName="DockerFileRunCommandMissingContinuation" defaultSeverity="ERROR" displayName="'RUN' 명령어의 연속 문자 누락" enabled="true" language="Dockerfile" pluginId="Docker" pluginVersion="252.26199.163" isGlobalTool="false">&lt;html&gt;
&lt;body&gt;
&lt;p&gt;&lt;code&gt;RUN&lt;/code&gt; 명령어 내 누락된 연속 문자를 보고합니다.&lt;/p&gt;
&lt;p&gt;
  &lt;i&gt;셸&lt;/i&gt; 형식의 &lt;code&gt;RUN&lt;/code&gt; 명령어에서는 하나의 &lt;code&gt;RUN&lt;/code&gt; 지시를 다음 줄에서 계속하려면  '\'(백슬래시)를 사용해야 합니다.
  그러지 않으면 Docker 빌드가 실패합니다.
&lt;/p&gt;
&lt;!-- tooltip end --&gt;
&lt;p&gt;&lt;b&gt;예:&lt;/b&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;
  # the command below will fail
  RUN /bin/bash -c 'source $HOME/.bashrc;
      echo $HOME'
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;빠른 수정을 적용한 후:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;
  RUN /bin/bash -c 'source $HOME/.bashrc; \
      echo $HOME'
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;small&gt;Inspection ID: DockerFileRunCommandMissingContinuation&lt;/small&gt;&lt;/p&gt;&lt;/body&gt;
&lt;/html&gt;</inspection><inspection shortName="DockerFileDuplicatedStageName" defaultSeverity="ERROR" displayName="중복된 스테이지 이름" enabled="true" language="Dockerfile" pluginId="Docker" pluginVersion="252.26199.163" isGlobalTool="false">&lt;html&gt;
&lt;body&gt;
&lt;p&gt;&lt;code&gt;FROM 내에서 중복된 스테이지 이름을 보고합니다... AS stage-name&lt;/code&gt; 명령어.&lt;/p&gt;

&lt;p&gt;&lt;b&gt;예:&lt;/b&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;
  # 아래의 명령어는 실패합니다
  FROM ubuntu:latest AS stage1
  FROM ubuntu:latest AS stage1
&lt;/code&gt;&lt;/pre&gt;
&lt;!-- tooltip end --&gt;&lt;p&gt;&lt;small&gt;Inspection ID: DockerFileDuplicatedStageName&lt;/small&gt;&lt;/p&gt;&lt;/body&gt;
&lt;/html&gt;</inspection><inspection shortName="DockerJsonFormStringLiterals" defaultSeverity="WARNING" displayName="JSON 배열 형식으로 된 작은따옴표로 묶인 문자열" enabled="true" language="Dockerfile" pluginId="Docker" pluginVersion="252.26199.163" isGlobalTool="false">&lt;html&gt;
&lt;body&gt;
&lt;p&gt;
  JSON 배열 양식에서 작은따옴표로 둘러싸인 문자열을 보고합니다.
&lt;/p&gt;
&lt;p&gt;
  JSON 배열 양식은 반드시 작은따옴표(')가 아닌 큰따옴표(")로 단어를 둘러싸야 합니다. 그러지 않으면 Docker 빌드가 실패합니다.
&lt;/p&gt;
&lt;!-- tooltip end --&gt;
&lt;p&gt;&lt;b&gt;예:&lt;/b&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;
  # 아래 명령어는 모두 실패합니다
  RUN ['/bin/bash', '-c', 'echo hello']
  ADD ['binaryA.jar', 'binary2.jar', 'destination/']
  COPY ['binaryA.jar', 'binary2.jar', 'destination/']
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;빠른 수정을 적용한 후:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;
  RUN ["/bin/bash", "-c", "echo hello"]
  ADD ["binaryA.jar", "binary2.jar", "destination/"]
  COPY ["binaryA.jar", "binary2.jar", "destination/"]
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;small&gt;Inspection ID: DockerJsonFormStringLiterals&lt;/small&gt;&lt;/p&gt;&lt;/body&gt;
&lt;/html&gt;</inspection><inspection shortName="DockerFileAssignments" defaultSeverity="ERROR" displayName="'key=value' 쌍 내 올바르지 않은 공백" enabled="true" language="Dockerfile" pluginId="Docker" pluginVersion="252.26199.163" isGlobalTool="false">&lt;html&gt;
&lt;body&gt;
&lt;p&gt;&lt;code&gt;ARG&lt;/code&gt;, &lt;code&gt;ENV&lt;/code&gt;, &lt;code&gt;LABEL&lt;/code&gt; 명령어의 키-값 쌍에 사용된 잘못된 공백을 보고합니다.&lt;/p&gt;
&lt;p&gt;
  &lt;a href="https://docs.docker.com/engine/reference/builder/#arg"&gt;Dockerfile 사양&lt;/a&gt;에 명시적으로 지정되어 있지 않지만 키-값 쌍의 몇 가지 공백 조합은 허용되지 않습니다.
  문제가 되는 명령에 도달하면 Docker 빌드는 실패합니다.
&lt;/p&gt;
&lt;!-- tooltip end --&gt;
&lt;p&gt;&lt;b&gt;예:&lt;/b&gt;&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;code&gt;ARG&lt;/code&gt; 명령어는 '=' 주위에 어떠한 공백도 허용하지 않습니다&lt;/li&gt;
  &lt;li&gt;&lt;code&gt;ENV&lt;/code&gt; 및 &lt;code&gt;LABEL&lt;/code&gt;은 '=' 뒤에 공백을 허용하지 않습니다&lt;/li&gt;
&lt;/ul&gt;
&lt;pre&gt;&lt;code&gt;
  # 아래의 모든 명령어는 실패합니다
  ARG answer = 42
  ARG version= "1.0.0"
  LABEL "maintained.by"= someone@gmail.com
  ENV JAVA_HOME= "/docker-java-home"
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;빠른 수정을 적용한 후:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;
  ARG answer=2
  ARG version="1.0.0"
  LABEL "maintained.by"=someone@gmail.com
  ENV JAVA_HOME="/docker-java-home"
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;small&gt;Inspection ID: DockerFileAssignments&lt;/small&gt;&lt;/p&gt;&lt;/body&gt;
&lt;/html&gt;</inspection></group><group name="함수 메트릭" path="JavaScript 및 TypeScript"><inspection shortName="FunctionWithMultipleLoopsJS" defaultSeverity="WARNING" displayName="여러 루프가 있는 함수" enabled="false" language="JavaScript" pluginId="JavaScript" pluginVersion="252.26199.162" isGlobalTool="false">&lt;html&gt;
&lt;body&gt;
여러 루프 구문을 포함하는 함수를 보고합니다.
&lt;!-- tooltip end --&gt;&lt;p&gt;&lt;small&gt;Inspection ID: FunctionWithMultipleLoopsJS&lt;/small&gt;&lt;/p&gt;&lt;/body&gt;
&lt;/html&gt;</inspection><inspection shortName="ParametersPerFunctionJS" defaultSeverity="WARNING" displayName="매개변수가 너무 많은 함수" enabled="false" language="JavaScript" pluginId="JavaScript" pluginVersion="252.26199.162" isGlobalTool="false">&lt;html&gt;
&lt;body&gt;
매개변수가 너무 많은 함수를 보고합니다.
그러한 함수는 보통 디자인 문제를 나타냅니다.
&lt;!-- tooltip end --&gt;
&lt;p&gt;
  아래 필드를 사용해 함수에 허용 가능한 매개변수의 최대 개수를 지정하세요.

&lt;p&gt;&lt;small&gt;Inspection ID: ParametersPerFunctionJS&lt;/small&gt;&lt;/p&gt;&lt;/body&gt;
&lt;/html&gt;</inspection><inspection shortName="NestingDepthJS" defaultSeverity="WARNING" displayName="지나치게 중첩된 함수" enabled="false" language="JavaScript" pluginId="JavaScript" pluginVersion="252.26199.162" isGlobalTool="false">&lt;html&gt;
&lt;body&gt;
다른 구문 내부에 너무 깊이 중첩된 구문이 본문에 포함된 함수를 보고합니다.
그러한 함수는 혼란을 일으킬 수 있으며 리팩토링이 필요함을 나타냅니다.
&lt;!-- tooltip end --&gt;
&lt;p&gt;
  아래 제공된 필드를 사용해 함수에 허용 가능한 중첩 깊이를 지정하십시오.
&lt;p&gt;&lt;small&gt;Inspection ID: NestingDepthJS&lt;/small&gt;&lt;/p&gt;&lt;/body&gt;
&lt;/html&gt;</inspection><inspection shortName="CyclomaticComplexityJS" defaultSeverity="WARNING" displayName="지나치게 복잡한 함수" enabled="false" language="JavaScript" pluginId="JavaScript" pluginVersion="252.26199.162" isGlobalTool="false">&lt;html&gt;
&lt;body&gt;
함수 내 분기점이 너무 많은 함수를 보고합니다(너무 높은 순환 복잡도). 그러한 함수는
혼란을 일으킬 수 있으며 검사하기 어렵습니다.
&lt;!-- tooltip end --&gt;
&lt;p&gt;
  아래 제공된 필드를 사용해 함수에 허용 가능한 최대 순환 복잡도를 지정하십시오.

&lt;p&gt;&lt;small&gt;Inspection ID: CyclomaticComplexityJS&lt;/small&gt;&lt;/p&gt;&lt;/body&gt;
&lt;/html&gt;</inspection><inspection shortName="ThreeNegationsPerFunctionJS" defaultSeverity="WARNING" displayName="3개 이상의 부정이 있는 함수" enabled="false" language="JavaScript" pluginId="JavaScript" pluginVersion="252.26199.162" isGlobalTool="false">&lt;html&gt;
&lt;body&gt;
세 개 이상의 부정 연산(&lt;code&gt;!&lt;/code&gt; 또는 &lt;code&gt;!=&lt;/code&gt;)을 포함하는 함수를 보고합니다.
그러한 함수는 불필요한 혼란을 일으킬 수 있습니다.
&lt;!-- tooltip end --&gt;&lt;p&gt;&lt;small&gt;Inspection ID: ThreeNegationsPerFunctionJS&lt;/small&gt;&lt;/p&gt;&lt;/body&gt;
&lt;/html&gt;</inspection><inspection shortName="StatementsPerFunctionJS" defaultSeverity="WARNING" displayName="지나치게 긴 함수" enabled="false" language="JavaScript" pluginId="JavaScript" pluginVersion="252.26199.162" isGlobalTool="false">&lt;html&gt;
&lt;body&gt;
지나치게 긴 함수를 보고합니다.
함수 내 비어 있지 않은 구문의 개수를 세어 함수 길이를 계산합니다.
너무 긴 함수는 오류가 발생하기 쉽고 검사하기 어렵습니다.
&lt;!-- tooltip end --&gt;
&lt;p&gt;
  아래 필드를 사용하여 함수에 사용 가능한 최대 구문 개수를 지정하십시오.

&lt;p&gt;&lt;small&gt;Inspection ID: StatementsPerFunctionJS&lt;/small&gt;&lt;/p&gt;&lt;/body&gt;
&lt;/html&gt;</inspection><inspection shortName="FunctionWithMultipleReturnPointsJS" defaultSeverity="WARNING" displayName="여러 반환점이 있는 함수" enabled="false" language="JavaScript" pluginId="JavaScript" pluginVersion="252.26199.162" isGlobalTool="false">&lt;html&gt;
&lt;body&gt;
여러 반환점이 있는 함수을 보고합니다.
그러한 함수는 이해하기 어렵고 유지 관리하기 힘듭니다.
&lt;!-- tooltip end --&gt;&lt;p&gt;&lt;small&gt;Inspection ID: FunctionWithMultipleReturnPointsJS&lt;/small&gt;&lt;/p&gt;&lt;/body&gt;
&lt;/html&gt;</inspection></group><group name="SQL 서버" path=""><inspection shortName="MsBuiltinInspection" defaultSeverity="WARNING" displayName="기본 제공 함수" enabled="true" language="SQL" pluginId="com.intellij.database" pluginVersion="252.26199.162" isGlobalTool="false">&lt;html&gt;
&lt;body&gt;
ISNULL 함수 내 문자열 인수 자르기를 보고합니다.

&lt;p&gt;ISNULL 구문은 &lt;code&gt;ISNULL(check_expression, replacement_value)&lt;/code&gt;입니다.
&lt;/p&gt;

&lt;p&gt;&lt;a href="https://docs.microsoft.com/en-us/sql/t-sql/functions/isnull-transact-sql" target="_blank"&gt;docs.microsoft.com의 ISNULL&lt;/a&gt;에 따르면 &lt;code&gt;replacement_value&lt;/code&gt;이 &lt;code&gt;check_expression&lt;/code&gt;보다 긴 경우 &lt;code&gt;replacement_value&lt;/code&gt;이 잘립니다.
&lt;/p&gt;

&lt;p&gt;예시(Microsoft SQL 서버):&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;DECLARE @name1 VARCHAR(2) = NULL;
DECLARE @name2 VARCHAR(10) = 'Example';
DECLARE @name3 VARCHAR(2) = 'Hi';

  -- '@name2'은 VARCHAR(10)이므로 잘립니다
SELECT ISNULL(@name1, @name2);

  -- '@name3'은 '@name1'와 같이 VARCHAR(2)이므로 잘리지 않습니다
SELECT ISNULL(@name1, @name3);&lt;/code&gt;&lt;/pre&gt;

&lt;!-- tooltip end --&gt;&lt;p&gt;&lt;small&gt;Inspection ID: MsBuiltinInspection&lt;/small&gt;&lt;/p&gt;&lt;/body&gt;
&lt;/html&gt;</inspection><inspection shortName="MsOrderByInspection" defaultSeverity="ERROR" displayName="쿼리 내 ORDER BY" enabled="true" language="SQL" pluginId="com.intellij.database" pluginVersion="252.26199.162" isGlobalTool="false">&lt;html&gt;
&lt;body&gt;
&lt;code&gt;ORDER BY&lt;/code&gt; 절이 뷰, 인라인 함수, 파생 테이블, 하위 쿼리, 공통 테이블 표현식에서 &lt;code&gt;TOP&lt;/code&gt;, &lt;code&gt;OFFSET&lt;/code&gt;, 또는 &lt;code&gt;FOR XML&lt;/code&gt; 없이 사용된 위치를 보고합니다.
&lt;p&gt;&lt;code&gt;ORDER BY&lt;/code&gt; 사용에 관한 더 자세한 내용은 &lt;a
    href="https://docs.microsoft.com/en-us/sql/t-sql/queries/select-order-by-clause-transact-sql"&gt;docs.microsoft.com에서 SELECT - ORDER BY 절(Transact-SQL)&lt;/a&gt;를 참고하세요.&lt;/p&gt;
&lt;p&gt;예(Microsoft SQL 서버):&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;CREATE TABLE foo (a INT NOT NULL, b  INT NOT NULL);

SELECT *
FROM (SELECT a, b
FROM foo A
WHERE a &amp;lt; 89
ORDER BY b) ALIAS;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;하위 쿼리에서 ORDER BY는 오류로 강조 표시됩니다. TOP, OFFSET, FOR XML를 하위 쿼리에 추가할 수 있습니다.
  아니면 &lt;b&gt;요소 삭제&lt;/b&gt; 빠른 수정을 사용하여 ORDER BY 섹션을 삭제하세요.&lt;/p&gt;
&lt;p&gt;빠른 수정을 적용한 후:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;SELECT *
FROM (SELECT a, b
FROM foo A
WHERE a &amp;lt; 89) ALIAS;
&lt;/code&gt;&lt;/pre&gt;
&lt;!-- tooltip end --&gt;&lt;p&gt;&lt;small&gt;Inspection ID: MsOrderByInspection&lt;/small&gt;&lt;/p&gt;&lt;/body&gt;
&lt;/html&gt;</inspection></group><group name="GitLab CI/CD" path=""><inspection shortName="UndefinedJob" defaultSeverity="ERROR" displayName="정의되지 않은 잡" enabled="true" language="yaml" pluginId="org.jetbrains.plugins.gitlab" pluginVersion="252.26199.162-IU" isGlobalTool="false">&lt;html&gt;
&lt;body&gt;
&lt;p&gt;
  GitLab CI/CD 구성 파일 내에서 해결되지 않은 잡 참조를 탐지합니다.
&lt;/p&gt;
&lt;p&gt;
  잡 참조에 관한 자세한 정보는 &lt;a href="https://docs.gitlab.com/ee/ci/jobs/index.html"&gt;GitLab 문서&lt;/a&gt;를 참조하세요.
&lt;/p&gt;
&lt;!-- tooltip end --&gt;&lt;p&gt;&lt;small&gt;Inspection ID: UndefinedJob&lt;/small&gt;&lt;/p&gt;&lt;/body&gt;
&lt;/html&gt;</inspection><inspection shortName="UndefinedStage" defaultSeverity="ERROR" displayName="정의되지 않은 단계" enabled="true" language="yaml" pluginId="org.jetbrains.plugins.gitlab" pluginVersion="252.26199.162-IU" isGlobalTool="false">&lt;html&gt;
&lt;body&gt;
&lt;p&gt;
  GitLab CI/CD 구성 파일 내에서 해결되지 않은 스테이지 참조를 탐지합니다.
&lt;/p&gt;
&lt;p&gt;
  스테이지 참조에 관한 자세한 정보는 &lt;a href="https://docs.gitlab.com/ee/ci/yaml/index.html#stages"&gt;GitLab 문서&lt;/a&gt;를 참조하세요.
&lt;/p&gt;
&lt;!-- tooltip end --&gt;&lt;p&gt;&lt;small&gt;Inspection ID: UndefinedStage&lt;/small&gt;&lt;/p&gt;&lt;/body&gt;
&lt;/html&gt;</inspection><inspection shortName="DuplicatedJobUsage" defaultSeverity="ERROR" displayName="중복된 잡 사용 위치" enabled="true" language="yaml" pluginId="org.jetbrains.plugins.gitlab" pluginVersion="252.26199.162-IU" isGlobalTool="false">&lt;html&gt;
&lt;body&gt;
&lt;p&gt;
  GitLab CI/CD 구성 파일 내에서 중복되는 잡 사용 위치를 탐지합니다.
&lt;/p&gt;
&lt;p&gt;
  잡 참조에 관한 자세한 정보는 &lt;a href="https://docs.gitlab.com/ee/ci/jobs/index.html"&gt;GitLab 문서&lt;/a&gt;를 참조하세요.
&lt;/p&gt;
&lt;!-- tooltip end --&gt;&lt;p&gt;&lt;small&gt;Inspection ID: DuplicatedJobUsage&lt;/small&gt;&lt;/p&gt;&lt;/body&gt;
&lt;/html&gt;</inspection></group><group name="MongoJS" path=""><inspection shortName="MongoJSDeprecationInspection" defaultSeverity="WARNING" displayName="곧 사용할 수 없게 될 요소" enabled="true" language="MongoJS" pluginId="com.intellij.database" pluginVersion="252.26199.162" isGlobalTool="false">&lt;html&gt;
&lt;body&gt;
MongoDB 및 JavaScript 코드 내 지원 중지된 메서드가 사용된 경우를 보고합니다.
&lt;p&gt;빠른 수정에서는 지원 중지된 메서드를 권장 대체 메서드로 바꿉니다.&lt;/p&gt;
&lt;p&gt;예:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;db.my_collection.insert()&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;빠른 수정을 적용한 후:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;db.my_collection.insertOne()&lt;/code&gt;&lt;/pre&gt;
&lt;!-- tooltip end --&gt;&lt;p&gt;&lt;small&gt;Inspection ID: MongoJSDeprecationInspection&lt;/small&gt;&lt;/p&gt;&lt;/body&gt;
&lt;/html&gt;</inspection><inspection shortName="MongoJSSideEffectsInspection" defaultSeverity="WARNING" displayName="부수 효과가 있는 구문" enabled="true" language="MongoJS" pluginId="com.intellij.database" pluginVersion="252.26199.162" isGlobalTool="false">&lt;html&gt;
&lt;body&gt;
데이터 소스가 읽기 전용 모드인 동안 부작용을 초래할 수 있는 구문을 보고합니다.
&lt;p&gt;읽기 전용 모드 활성화에 관한 더 자세한 내용은 &lt;a href="https://www.jetbrains.com/help/datagrip/configuring-database-connections.html#enable-read-only-mode-for-a-connection"&gt;IDE 문서 내 연결 읽기 전용 모드 활성화&lt;/a&gt;를 참고하세요.&lt;/p&gt;
&lt;p&gt;&lt;b&gt;읽기 전용 모드 비활성화&lt;/b&gt; 빠른 수정은 각각의 데이터 소스의 읽기 전용 모드를 끕니다.&lt;/p&gt;
&lt;p&gt;예:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;
db.my_collection.insertOne()
&lt;/code&gt;&lt;/pre&gt;
&lt;!-- tooltip end --&gt;&lt;p&gt;&lt;small&gt;Inspection ID: MongoJSSideEffectsInspection&lt;/small&gt;&lt;/p&gt;&lt;/body&gt;
&lt;/html&gt;</inspection><inspection shortName="MongoJSExtDeprecationInspection" defaultSeverity="WARNING" displayName="곧 사용할 수 없게 될 요소" enabled="true" language="MongoJSExt" pluginId="com.intellij.database" pluginVersion="252.26199.162" isGlobalTool="false">&lt;html&gt;
&lt;body&gt;
MongoDB 및 JavaScript 코드 내 지원 중지된 메서드가 사용된 경우를 보고합니다.
&lt;p&gt;빠른 수정에서는 지원 중지된 메서드를 권장 대체 메서드로 바꿉니다.&lt;/p&gt;
&lt;p&gt;예:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;
  db.my_collection.insert()
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;빠른 수정을 적용한 후:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;
  db.my_collection.insertOne()
&lt;/code&gt;&lt;/pre&gt;
&lt;!-- tooltip end --&gt;&lt;p&gt;&lt;small&gt;Inspection ID: MongoJSExtDeprecationInspection&lt;/small&gt;&lt;/p&gt;&lt;/body&gt;
&lt;/html&gt;</inspection><inspection shortName="MongoJSExtSideEffectsInspection" defaultSeverity="WARNING" displayName="부수 효과가 있는 구문" enabled="true" language="MongoJSExt" pluginId="com.intellij.database" pluginVersion="252.26199.162" isGlobalTool="false">&lt;html&gt;
&lt;body&gt;
데이터 소스가 읽기 전용 모드인 동안 부작용을 초래할 수 있는 구문을 보고합니다.
&lt;p&gt;빠른 수정은 각각의 데이터 소스의 읽기 전용 모드를 끕니다.&lt;/p&gt;
&lt;p&gt;예:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;
db.my_collection.insertOne()
&lt;/code&gt;&lt;/pre&gt;
&lt;!-- tooltip end --&gt;&lt;p&gt;&lt;small&gt;Inspection ID: MongoJSExtSideEffectsInspection&lt;/small&gt;&lt;/p&gt;&lt;/body&gt;
&lt;/html&gt;</inspection><inspection shortName="MongoJSResolveInspection" defaultSeverity="WARNING" displayName="확인 문제" enabled="true" language="MongoJS" pluginId="com.intellij.database" pluginVersion="252.26199.162" isGlobalTool="false">&lt;html&gt;
&lt;body&gt;
MongoDB 및 JavaScript 코드에서 해결되지 않은 참조를 보고합니다.
&lt;p&gt;예:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;db
use foo
  -- 존재하지 않는 컬렉션 참조
db.non_existing_collection
db['non_existing_collection']
db['non_existing_collection'].find().hasNext()&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;code&gt;non_existing_collection&lt;/code&gt; 컬렉션은 데이터베이스에 존재하지 않으므로 보고됩니다.&lt;/p&gt;
&lt;!-- tooltip end --&gt;&lt;p&gt;&lt;small&gt;Inspection ID: MongoJSResolveInspection&lt;/small&gt;&lt;/p&gt;&lt;/body&gt;
&lt;/html&gt;</inspection><inspection shortName="MongoJSExtResolveInspection" defaultSeverity="WARNING" displayName="확인 문제" enabled="true" language="MongoJSExt" pluginId="com.intellij.database" pluginVersion="252.26199.162" isGlobalTool="false">&lt;html&gt;
&lt;body&gt;
MongoDB 및 JavaScript 코드에서 해결되지 않은 참조를 보고합니다.
&lt;!-- tooltip end --&gt;&lt;p&gt;&lt;small&gt;Inspection ID: MongoJSExtResolveInspection&lt;/small&gt;&lt;/p&gt;&lt;/body&gt;
&lt;/html&gt;</inspection></group><group name="대입 이슈" path="JavaScript 및 TypeScript"><inspection shortName="AssignmentResultUsedJS" defaultSeverity="WARNING" displayName="대입 결과 사용" enabled="false" language="JavaScript" pluginId="JavaScript" pluginVersion="252.26199.162" isGlobalTool="false">&lt;html&gt;
&lt;body&gt;
대입의 결과가 상위 표현식에서 사용된 대입 표현식을 보고합니다. 그러한 대입은 보통 코딩 오류를 나타냅니다
(예: &lt;code&gt;==&lt;/code&gt; 대신 &lt;code&gt;=&lt;/code&gt;).
게다가 대입 평가가 예기치 못한 방식으로 외부 표현식에 영향을 미칠 수 있기 때문에 연산 순서로 인해 혼란이 발생할 수 있습니다.
&lt;p&gt;소괄호 내 표현식은 무시됩니다.&lt;/p&gt;
&lt;!-- tooltip end --&gt;&lt;p&gt;&lt;small&gt;Inspection ID: AssignmentResultUsedJS&lt;/small&gt;&lt;/p&gt;&lt;/body&gt;
&lt;/html&gt;</inspection><inspection shortName="AssignmentToFunctionParameterJS" defaultSeverity="WARNING" displayName="함수 매개변수에 대입" enabled="false" language="JavaScript" pluginId="JavaScript" pluginVersion="252.26199.162" isGlobalTool="false">&lt;html&gt;
&lt;body&gt;
증분 연산과 감소 연산을 포함한 함수 매개변수로의 대입을 보고합니다.
의도된 경우도 있으나 이 구문은 혼란을 일으킬 가능성이 매우 크며 보통 오류의 결과입니다.
&lt;!-- tooltip end --&gt;&lt;p&gt;&lt;small&gt;Inspection ID: AssignmentToFunctionParameterJS&lt;/small&gt;&lt;/p&gt;&lt;/body&gt;
&lt;/html&gt;</inspection><inspection shortName="JSAssignmentUsedAsCondition" defaultSeverity="WARNING" displayName="대입이 조건으로 사용되었습니다" enabled="true" language="JavaScript" pluginId="JavaScript" pluginVersion="252.26199.162" isGlobalTool="false">&lt;!-- Copied from community/plugins/InspectionGadgets/src/inspectionDescriptions/AssignmentUsedAsCondition.html --&gt;
&lt;html&gt;
&lt;body&gt;
&lt;code&gt;if&lt;/code&gt;, &lt;code&gt;while&lt;/code&gt;, &lt;code&gt;for&lt;/code&gt; 또는 &lt;code&gt;do&lt;/code&gt; 문의 조건으로 사용되는 대입을 보고합니다. 의도된 경우도 있으나 이러한 사용은 혼란을 일으키며, 보통 오타입니다(예:&lt;code&gt;==&lt;/code&gt; 대신 &lt;code&gt;=&lt;/code&gt; 사용).
&lt;!-- tooltip end --&gt;
&lt;p&gt;

&lt;p&gt;&lt;small&gt;Inspection ID: JSAssignmentUsedAsCondition&lt;/small&gt;&lt;/p&gt;&lt;/body&gt;
&lt;/html&gt;</inspection><inspection shortName="AssignmentToForLoopParameterJS" defaultSeverity="WARNING" displayName="'for' 루프 매개변수에 대입" enabled="false" language="JavaScript" pluginId="JavaScript" pluginVersion="252.26199.162" isGlobalTool="false">&lt;html&gt;
&lt;body&gt;
&lt;code&gt;for&lt;/code&gt; 루프 매개변수로 선언된 변수에 대입한 경우를 보고합니다.
의도된 경우도 있으나 이 구문은 혼란을 일으킬 가능성이 매우 크며 보통 오류의 결과입니다.
&lt;!-- tooltip end --&gt;&lt;p&gt;&lt;small&gt;Inspection ID: AssignmentToForLoopParameterJS&lt;/small&gt;&lt;/p&gt;&lt;/body&gt;
&lt;/html&gt;</inspection><inspection shortName="ReplaceAssignmentWithOperatorAssignmentJS" defaultSeverity="WARNING" displayName="대입을 연산자 대입으로 바꿀 수 있습니다" enabled="false" language="JavaScript" pluginId="JavaScript" pluginVersion="252.26199.162" isGlobalTool="false">&lt;!-- Copied from community/plugins/InspectionGadgets/src/inspectionDescriptions/ReplaceAssignmentWithOperatorAssignment.html --&gt;
&lt;html&gt;
&lt;body&gt;
연산자 대입으로 코드를 짧고 분명하게 만들 수 있는 대입 연산을 보고합니다.
&lt;p&gt;
  예:
&lt;pre&gt;
&lt;code&gt;  x = x + 3;&lt;/code&gt;
  &lt;code&gt;x = x / 3;&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;빠른 수정이 적용된 후 결과는 다음과 같습니다.
&lt;pre&gt;
  &lt;code&gt;x += 3;&lt;/code&gt;
  &lt;code&gt;x /= 3;&lt;/code&gt;
&lt;/pre&gt;
&lt;!-- tooltip end --&gt;&lt;p&gt;&lt;small&gt;Inspection ID: ReplaceAssignmentWithOperatorAssignmentJS&lt;/small&gt;&lt;/p&gt;&lt;/body&gt;
&lt;/html&gt;</inspection><inspection shortName="NestedAssignmentJS" defaultSeverity="WARNING" displayName="중첩된 대입" enabled="false" language="JavaScript" pluginId="JavaScript" pluginVersion="252.26199.162" isGlobalTool="false">&lt;!-- Copied from community/plugins/InspectionGadgets/src/inspectionDescriptions/NestedAssignment.html --&gt;
&lt;html&gt;
&lt;body&gt;
다른 표현식 내부에 중첩된 대입 표현식을 보고합니다(예: &lt;code&gt;a = b = 1&lt;/code&gt;).
그러한 표현식은 혼란을 일으킬 수 있으며 지정된 구문은 정확히 한 가지 일을 해야 한다는 일반적인 디자인 규칙을 위반합니다.
&lt;!-- tooltip end --&gt;&lt;p&gt;&lt;small&gt;Inspection ID: NestedAssignmentJS&lt;/small&gt;&lt;/p&gt;&lt;/body&gt;
&lt;/html&gt;</inspection><inspection shortName="SillyAssignmentJS" defaultSeverity="WARNING" displayName="변수가 자신에게 할당됨" enabled="true" language="JavaScript" pluginId="JavaScript" pluginVersion="252.26199.162" isGlobalTool="false">&lt;html&gt;
&lt;body&gt;
&lt;code&gt;x = x&lt;/code&gt; 형식의 대입을 보고합니다. 
&lt;!-- tooltip end --&gt;&lt;p&gt;&lt;small&gt;Inspection ID: SillyAssignmentJS&lt;/small&gt;&lt;/p&gt;&lt;/body&gt;
&lt;/html&gt;</inspection></group><group name="HTML" path=""><inspection shortName="CheckImageSize" defaultSeverity="WARNING" displayName="일치하지 않는 이미지 크기" enabled="true" language="XML" pluginId="HtmlTools" pluginVersion="252.26199.162" isGlobalTool="false">&lt;html&gt;
&lt;body&gt;
참조 이미지의 실제 너비와 높이와 다른 &lt;code&gt;img&lt;/code&gt; 태그의 &lt;code&gt;width&lt;/code&gt; 및 &lt;code&gt;height&lt;/code&gt; 속성 값을 보고합니다.
&lt;!-- tooltip end --&gt;&lt;p&gt;&lt;small&gt;Inspection ID: CheckImageSize&lt;/small&gt;&lt;/p&gt;&lt;/body&gt;
&lt;/html&gt;</inspection><inspection shortName="CheckEmptyScriptTag" defaultSeverity="WARNING" displayName="빈 태그" enabled="true" language="XML" pluginId="com.intellij" pluginVersion="252.26199.162" isGlobalTool="false">&lt;html&gt;
&lt;body&gt;
일부 브라우저에서 작동하지 않는 빈 태그를 보고합니다.
&lt;p&gt;&lt;b&gt;예:&lt;/b&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;
  &amp;lt;html&gt;
    &amp;lt;script/&gt;
  &amp;lt;/html&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;빠른 수정을 적용한 후:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;
  &amp;lt;html&gt;
    &amp;lt;script&gt;&amp;lt;/script&gt;
  &amp;lt;/html&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;!-- tooltip end --&gt;&lt;p&gt;&lt;small&gt;Inspection ID: CheckEmptyScriptTag&lt;/small&gt;&lt;/p&gt;&lt;/body&gt;
&lt;/html&gt;</inspection><inspection shortName="CheckValidXmlInScriptTagBody" defaultSeverity="ERROR" displayName="형식이 잘못된 'script' 태그 내용" enabled="true" language="XML" pluginId="com.intellij" pluginVersion="252.26199.162" isGlobalTool="false">&lt;html&gt;
&lt;body&gt;
유효하지 않은 XML인 &lt;code&gt;script&lt;/code&gt; 태그의 내용을 보고합니다.&lt;br&gt;
&lt;p&gt;&lt;b&gt;예:&lt;/b&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;
  &amp;lt;script type="text/javascript"&gt;
    console.log('&amp;lt;');
  &amp;lt;/script&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;빠른 수정을 적용한 후:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;
  &amp;lt;script type="text/javascript"&gt;
    console.log('&amp;amp;lt;');
  &amp;lt;/script&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;!-- tooltip end --&gt;&lt;p&gt;&lt;small&gt;Inspection ID: CheckValidXmlInScriptTagBody&lt;/small&gt;&lt;/p&gt;&lt;/body&gt;
&lt;/html&gt;</inspection><inspection shortName="HtmlDeprecatedTag" defaultSeverity="WARNING" displayName="곧 사용할 수 없게 될 태그" enabled="true" language="XML" pluginId="HtmlTools" pluginVersion="252.26199.162" isGlobalTool="false">&lt;html&gt;
&lt;body&gt;
더 이상 사용되지 않는 HTML5 태그를 보고합니다. 더 이상 사용되지 않는 태그를 CSS 또는 다른 태그로 바꿀 것을 제안합니다.
&lt;!-- tooltip end --&gt;&lt;p&gt;&lt;small&gt;Inspection ID: HtmlDeprecatedTag&lt;/small&gt;&lt;/p&gt;&lt;/body&gt;
&lt;/html&gt;</inspection><inspection shortName="HtmlUnknownTarget" defaultSeverity="WARNING" displayName="링크 내 해결되지 않은 파일" enabled="true" language="XML" pluginId="com.intellij" pluginVersion="252.26199.162" isGlobalTool="false">&lt;html&gt;
&lt;body&gt;
링크 내 해결되지 않은 파일을 보고합니다.
&lt;!-- tooltip end --&gt;&lt;p&gt;&lt;small&gt;Inspection ID: HtmlUnknownTarget&lt;/small&gt;&lt;/p&gt;&lt;/body&gt;
&lt;/html&gt;</inspection><inspection shortName="HtmlExtraClosingTag" defaultSeverity="WARNING" displayName="불필요한 닫는 태그" enabled="true" language="HTML" pluginId="com.intellij" pluginVersion="252.26199.162" isGlobalTool="false">&lt;html&gt;
&lt;body&gt;
빈 요소의 불필요한 닫는 태그를 보고합니다(예: &lt;code&gt;img&lt;/code&gt; 또는 &lt;code&gt;br&lt;/code&gt;).
&lt;p&gt;&lt;b&gt;예:&lt;/b&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;
  &amp;lt;html&gt;
    &amp;lt;body&gt;
      &amp;lt;br&gt;&amp;lt;/br&gt;
    &amp;lt;/body&gt;
  &amp;lt;/html&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;빠른 수정을 적용한 후:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;
  &amp;lt;html&gt;
    &amp;lt;body&gt;
      &amp;lt;br&gt;
    &amp;lt;/body&gt;
  &amp;lt;/html&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;!-- tooltip end --&gt;&lt;p&gt;&lt;small&gt;Inspection ID: HtmlExtraClosingTag&lt;/small&gt;&lt;/p&gt;&lt;/body&gt;
&lt;/html&gt;</inspection><inspection shortName="HtmlUnknownAnchorTarget" defaultSeverity="WARNING" displayName="링크 내 해결되지 않은 코드 조각" enabled="true" language="XML" pluginId="com.intellij" pluginVersion="252.26199.162" isGlobalTool="false">&lt;html&gt;
&lt;body&gt;
&lt;code&gt;#&lt;/code&gt; 기호 뒤의 해결되지 않은 URL의 마지막 부분을 보고합니다.
&lt;!-- tooltip end --&gt;&lt;p&gt;&lt;small&gt;Inspection ID: HtmlUnknownAnchorTarget&lt;/small&gt;&lt;/p&gt;&lt;/body&gt;
&lt;/html&gt;</inspection><inspection shortName="HtmlUnknownTag" defaultSeverity="WARNING" displayName="알 수 없는 태그" enabled="true" language="HTML" pluginId="com.intellij" pluginVersion="252.26199.162" isGlobalTool="false">&lt;html&gt;
&lt;body&gt;
알 수 없는 HTML 태그를 보고합니다. 보고하지 않아야 할 태그를 구성할 것을 제안합니다.
&lt;!-- tooltip end --&gt;&lt;p&gt;&lt;small&gt;Inspection ID: HtmlUnknownTag&lt;/small&gt;&lt;/p&gt;&lt;/body&gt;
&lt;/html&gt;</inspection><inspection shortName="HtmlUnknownBooleanAttribute" defaultSeverity="WARNING" displayName="잘못된 부울 속성" enabled="true" language="HTML" pluginId="com.intellij" pluginVersion="252.26199.162" isGlobalTool="false">&lt;html&gt;
&lt;body&gt;
값이 없는 bool이 아닌 HTML 속성을 보고합니다. 보고하지 않아야 할 속성을 구성할 것을 제안합니다.
&lt;!-- tooltip end --&gt;&lt;p&gt;&lt;small&gt;Inspection ID: HtmlUnknownBooleanAttribute&lt;/small&gt;&lt;/p&gt;&lt;/body&gt;
&lt;/html&gt;</inspection><inspection shortName="RequiredAttributes" defaultSeverity="WARNING" displayName="필수 속성 누락" enabled="true" language="XML" pluginId="com.intellij" pluginVersion="252.26199.162" isGlobalTool="false">&lt;html&gt;
&lt;body&gt;
XML/HTML 태그 내 누락된 필수 속성을 보고합니다. 보고하지 않아야 할 속성을 구성할 것을 제안합니다.
&lt;!-- tooltip end --&gt;&lt;p&gt;&lt;small&gt;Inspection ID: RequiredAttributes&lt;/small&gt;&lt;/p&gt;&lt;/body&gt;
&lt;/html&gt;</inspection><inspection shortName="HtmlNonExistentInternetResource" defaultSeverity="WARNING" displayName="해결되지 않은 웹 링크" enabled="false" language="XML" pluginId="HtmlTools" pluginVersion="252.26199.162" isGlobalTool="false">&lt;html&gt;
&lt;body&gt;
해결되지 않은 웹 링크를 보고합니다. 백그라운드에서 네트워크 요청을 실행해 작동합니다.
&lt;!-- tooltip end --&gt;&lt;p&gt;&lt;small&gt;Inspection ID: HtmlNonExistentInternetResource&lt;/small&gt;&lt;/p&gt;&lt;/body&gt;
&lt;/html&gt;</inspection><inspection shortName="HtmlPresentationalElement" defaultSeverity="INFORMATION" displayName="프레젠테이션 태그" enabled="false" language="XML" pluginId="HtmlTools" pluginVersion="252.26199.162" isGlobalTool="false">&lt;html&gt;
&lt;body&gt;
프레젠테이션 HTML 태그를 보고합니다. 프레젠테이션 태그를 CSS 또는 다른 태그로 바꿀 것을 제안합니다.
&lt;!-- tooltip end --&gt;&lt;p&gt;&lt;small&gt;Inspection ID: HtmlPresentationalElement&lt;/small&gt;&lt;/p&gt;&lt;/body&gt;
&lt;/html&gt;</inspection><inspection shortName="HtmlUnknownAttribute" defaultSeverity="WARNING" displayName="알 수 없는 속성" enabled="true" language="HTML" pluginId="com.intellij" pluginVersion="252.26199.162" isGlobalTool="false">&lt;html&gt;
&lt;body&gt;
알 수 없는 HTML 속성을 보고합니다. 보고하지 않아야 할 속성을 구성할 것을 제안합니다.
&lt;!-- tooltip end --&gt;&lt;p&gt;&lt;small&gt;Inspection ID: HtmlUnknownAttribute&lt;/small&gt;&lt;/p&gt;&lt;/body&gt;
&lt;/html&gt;</inspection><inspection shortName="HtmlMissingClosingTag" defaultSeverity="INFORMATION" displayName="닫는 태그 누락" enabled="true" language="HTML" pluginId="com.intellij" pluginVersion="252.26199.162" isGlobalTool="false">&lt;html&gt;
&lt;body&gt;
닫는 태그가 없는 HTML 요소를 보고합니다.
일부 코드 스타일은 HTML 요소에 닫는 태그가 선택 사항인 곳에도 닫는 태그가 있어야 합니다.
&lt;p&gt;&lt;b&gt;예:&lt;/b&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;
  &amp;lt;html&gt;
    &amp;lt;body&gt;
      &amp;lt;p&gt;Behold!
    &amp;lt;/body&gt;
  &amp;lt;/html&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;빠른 수정을 적용한 후:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;
  &amp;lt;html&gt;
    &amp;lt;body&gt;
      &amp;lt;p&gt;Behold!&amp;lt;/p&gt;
    &amp;lt;/body&gt;
  &amp;lt;/html&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;!-- tooltip end --&gt;&lt;p&gt;&lt;small&gt;Inspection ID: HtmlMissingClosingTag&lt;/small&gt;&lt;/p&gt;&lt;/body&gt;
&lt;/html&gt;</inspection><inspection shortName="HtmlDeprecatedAttribute" defaultSeverity="WARNING" displayName="곧 사용할 수 없게 될 속성" enabled="true" language="XML" pluginId="HtmlTools" pluginVersion="252.26199.162" isGlobalTool="false">&lt;html&gt;
&lt;body&gt;
더 이상 사용되지 않는 HTML5 속성을 보고합니다.
&lt;!-- tooltip end --&gt;&lt;p&gt;&lt;small&gt;Inspection ID: HtmlDeprecatedAttribute&lt;/small&gt;&lt;/p&gt;&lt;/body&gt;
&lt;/html&gt;</inspection><inspection shortName="HtmlWrongAttributeValue" defaultSeverity="WARNING" displayName="잘못된 속성 값" enabled="true" language="HtmlCompatible" pluginId="com.intellij" pluginVersion="252.26199.162" isGlobalTool="false">&lt;html&gt;
&lt;body&gt;
잘못된 HTML 속성값을 보고합니다.
&lt;!-- tooltip end --&gt;&lt;p&gt;&lt;small&gt;Inspection ID: HtmlWrongAttributeValue&lt;/small&gt;&lt;/p&gt;&lt;/body&gt;
&lt;/html&gt;</inspection></group><group name="버전 관리" path=""><inspection shortName="IgnoreFileDuplicateEntry" defaultSeverity="WARNING" displayName="파일 중복 무시" enabled="true" language="IgnoreLang" pluginId="com.intellij" pluginVersion="252.26199.162" isGlobalTool="false">&lt;html&gt;
&lt;body&gt;
무시 파일(예: .gitignore, .hgignore)의 중복 항목을 보고합니다.
이러한 파일의 중복 항목은 불필요하므로 제거할 수 있습니다.

&lt;p&gt;예:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;
    # 출력 디렉터리
    /out/
    /target/
    /out/
&lt;/code&gt;&lt;/pre&gt;
&lt;!-- tooltip end --&gt;&lt;p&gt;&lt;small&gt;Inspection ID: IgnoreFileDuplicateEntry&lt;/small&gt;&lt;/p&gt;&lt;/body&gt;
&lt;/html&gt;</inspection></group><group name="try 문 문제" path="JavaScript 및 TypeScript"><inspection shortName="EmptyFinallyBlockJS" defaultSeverity="WARNING" displayName="빈 'finally' 블록" enabled="false" language="JavaScript" pluginId="JavaScript" pluginVersion="252.26199.162" isGlobalTool="false">&lt;html&gt;
&lt;body&gt;
일반적으로 오류를 나타내는 빈 &lt;code&gt;finally&lt;/code&gt; 블록을 보고합니다.
&lt;!-- tooltip end --&gt;&lt;p&gt;&lt;small&gt;Inspection ID: EmptyFinallyBlockJS&lt;/small&gt;&lt;/p&gt;&lt;/body&gt;
&lt;/html&gt;</inspection><inspection shortName="UnusedCatchParameterJS" defaultSeverity="WARNING" displayName="사용되지 않는 'catch' 매개변수" enabled="false" language="JavaScript" pluginId="JavaScript" pluginVersion="252.26199.162" isGlobalTool="false">&lt;html&gt;
&lt;body&gt;
대응하는 블록에서 사용되지 않는 &lt;code&gt;catch&lt;/code&gt; 파라미터를 보고합니다.  &lt;code&gt;ignore&lt;/code&gt; 또는 &lt;code&gt;ignored&lt;/code&gt;로 이름이 지정된 &lt;code&gt;catch&lt;/code&gt; 파라미터는 무시됩니다.
&lt;!-- tooltip end --&gt;
&lt;p&gt;
    주석이 있는 &lt;code&gt;catch&lt;/code&gt; 블록에 대해 이 검사를 비활성화하려면 아래 체크박스를 사용하십시오.
&lt;/p&gt;
&lt;p&gt;&lt;small&gt;Inspection ID: UnusedCatchParameterJS&lt;/small&gt;&lt;/p&gt;&lt;/body&gt;
&lt;/html&gt;</inspection><inspection shortName="ThrowFromFinallyBlockJS" defaultSeverity="WARNING" displayName="'finally' 블록 내 'throw'" enabled="true" language="JavaScript" pluginId="JavaScript" pluginVersion="252.26199.162" isGlobalTool="false">&lt;html&gt;
&lt;body&gt;
&lt;code&gt;finally&lt;/code&gt; 블록 내부의 &lt;code&gt;throw&lt;/code&gt; 문을 보고합니다. 그러한 &lt;code&gt;throw&lt;/code&gt; 문은 던져진 예외를 가리고 디버그를 복잡하게 만들 수 있습니다.
&lt;!-- tooltip end --&gt;&lt;p&gt;&lt;small&gt;Inspection ID: ThrowFromFinallyBlockJS&lt;/small&gt;&lt;/p&gt;&lt;/body&gt;
&lt;/html&gt;</inspection><inspection shortName="EmptyCatchBlockJS" defaultSeverity="WARNING" displayName="빈 'catch' 블록" enabled="false" language="JavaScript" pluginId="JavaScript" pluginVersion="252.26199.162" isGlobalTool="false">&lt;html&gt;
&lt;body&gt;
빈 &lt;code&gt;catch&lt;/code&gt; 블록을 보고합니다. 이는 오류가 처리되지 않고 단순히 무시됨을 나타냅니다.
&lt;br/&gt;&lt;br/&gt;
&lt;code&gt;catch&lt;/code&gt; 블록 내 모든 주석은 해당 검사를 끕니다.
&lt;!-- tooltip end --&gt;&lt;p&gt;&lt;small&gt;Inspection ID: EmptyCatchBlockJS&lt;/small&gt;&lt;/p&gt;&lt;/body&gt;
&lt;/html&gt;</inspection><inspection shortName="ContinueOrBreakFromFinallyBlockJS" defaultSeverity="WARNING" displayName="'finally' 블록 내 'continue' 또는 'break'" enabled="true" language="JavaScript" pluginId="JavaScript" pluginVersion="252.26199.162" isGlobalTool="false">&lt;html&gt;
&lt;body&gt;
&lt;code&gt;finally&lt;/code&gt; 블록 내부의 &lt;code&gt;break&lt;/code&gt; 또는 &lt;code&gt;continue&lt;/code&gt; 구문을 보고합니다. 그러한 구문은 혼란을 일으킬 가능성이 매우 크며 예외를 가리고 디버그를 복잡하게 만들 수 있습니다.
&lt;!-- tooltip end --&gt;&lt;p&gt;&lt;small&gt;Inspection ID: ContinueOrBreakFromFinallyBlockJS&lt;/small&gt;&lt;/p&gt;&lt;/body&gt;
&lt;/html&gt;</inspection><inspection shortName="ExceptionCaughtLocallyJS" defaultSeverity="WARNING" displayName="로컬 제어 흐름에 사용되는 예외" enabled="true" language="JavaScript" pluginId="JavaScript" pluginVersion="252.26199.162" isGlobalTool="false">&lt;html&gt;
&lt;body&gt;
예외가 항상 자신을 포함하는 &lt;code&gt;try&lt;/code&gt; 문에 의해 포착되는 &lt;code&gt;throw&lt;/code&gt; 문을 보고합니다. 로컬 제어 흐름을 변경하기 위해 &lt;code&gt;goto&lt;/code&gt;처럼 &lt;code&gt;throw&lt;/code&gt; 문을 사용하는 것은 혼란을 일으킬 수 있습니다.
&lt;!-- tooltip end --&gt;&lt;p&gt;&lt;small&gt;Inspection ID: ExceptionCaughtLocallyJS&lt;/small&gt;&lt;/p&gt;&lt;/body&gt;
&lt;/html&gt;</inspection><inspection shortName="ReturnFromFinallyBlockJS" defaultSeverity="WARNING" displayName="'finally' 블록 내 'return'" enabled="true" language="JavaScript" pluginId="JavaScript" pluginVersion="252.26199.162" isGlobalTool="false">&lt;html&gt;
&lt;body&gt;
&lt;code&gt;finally&lt;/code&gt; 블록 내부의 &lt;code&gt;return&lt;/code&gt; 문을 보고합니다. 그러한 &lt;code&gt;return&lt;/code&gt; 문은 던져진 예외를 가리고 디버그를 복잡하게 만들 수 있습니다.
&lt;!-- tooltip end --&gt;&lt;p&gt;&lt;small&gt;Inspection ID: ReturnFromFinallyBlockJS&lt;/small&gt;&lt;/p&gt;&lt;/body&gt;
&lt;/html&gt;</inspection><inspection shortName="EmptyTryBlockJS" defaultSeverity="WARNING" displayName="빈 'try' 블록" enabled="false" language="JavaScript" pluginId="JavaScript" pluginVersion="252.26199.162" isGlobalTool="false">&lt;html&gt;
&lt;body&gt;
보통 오류를 나타내는 빈 &lt;code&gt;try&lt;/code&gt; 블록을 보고합니다.
&lt;!-- tooltip end --&gt;&lt;p&gt;&lt;small&gt;Inspection ID: EmptyTryBlockJS&lt;/small&gt;&lt;/p&gt;&lt;/body&gt;
&lt;/html&gt;</inspection></group><group name="import 문 및 종속 요소" path="JavaScript 및 TypeScript"><inspection shortName="ES6UnusedImports" defaultSeverity="WARNING" displayName="사용되지 않는 import 문" enabled="true" language="JavaScript" pluginId="JavaScript" pluginVersion="252.26199.162" isGlobalTool="false">&lt;html&gt;
&lt;body&gt;
불필요한 &lt;code&gt;import&lt;/code&gt; 문을 보고합니다.
이는 보통 가져온 심볼이 소스 파일에서 사용되지 않은 경우입니다.
부작용을 없애려면 일반 import가 아니라 bare import &lt;code&gt;import 'packageName'&lt;/code&gt;를 사용하는 방안을 검토하십시오.
&lt;!-- tooltip end --&gt;&lt;p&gt;&lt;small&gt;Inspection ID: ES6UnusedImports&lt;/small&gt;&lt;/p&gt;&lt;/body&gt;
&lt;/html&gt;</inspection><inspection shortName="JSXNamespaceValidation" defaultSeverity="INFORMATION" displayName="JSX 네임스페이스 누락" enabled="true" language="JavaScript" pluginId="JavaScript" pluginVersion="252.26199.162" isGlobalTool="false">&lt;html&gt;
&lt;body&gt;
네임스페이스를 가져오지 않고 JSX 구문을 사용한 경우를 보고합니다.
파일 범위에 네임스페이스가 있으면 코드 컴파일링이 올바르게 실행됩니다.
&lt;!-- tooltip end --&gt;&lt;p&gt;&lt;small&gt;Inspection ID: JSXNamespaceValidation&lt;/small&gt;&lt;/p&gt;&lt;/body&gt;
&lt;/html&gt;</inspection><inspection shortName="UpdateDependencyToLatestVersion" defaultSeverity="INFORMATION" displayName="package.json 종속성을 최신 버전으로 업데이트" enabled="true" language="JSON" pluginId="JavaScript" pluginVersion="252.26199.162" isGlobalTool="false">&lt;html&gt;
&lt;body&gt;
지정된 버전을 무시하고 package.json 종속성을 최신 버전으로 업그레이드할 것을 제안합니다.
&lt;!-- tooltip end --&gt;&lt;p&gt;&lt;small&gt;Inspection ID: UpdateDependencyToLatestVersion&lt;/small&gt;&lt;/p&gt;&lt;/body&gt;
&lt;/html&gt;</inspection><inspection shortName="PackageJsonMismatchedDependency" defaultSeverity="WARNING" displayName="package.json에서 일치하지 않는 종속 요소" enabled="true" language="JSON" pluginId="JavaScript" pluginVersion="252.26199.162" isGlobalTool="false">&lt;html&gt;
&lt;body&gt;
설치되어 있지 않거나 지정된 &lt;a href="https://docs.npmjs.com/about-semantic-versioning"&gt;버전 범위&lt;/a&gt;와 일치하지 않는 package.json의 종속성을 보고합니다.
&lt;!-- tooltip end --&gt;&lt;p&gt;&lt;small&gt;Inspection ID: PackageJsonMismatchedDependency&lt;/small&gt;&lt;/p&gt;&lt;/body&gt;
&lt;/html&gt;</inspection><inspection shortName="JSUrlImportUsage" defaultSeverity="INFORMATION" displayName="URL 가져오기가 사용되었습니다" enabled="true" language="JavaScript" pluginId="JavaScript" pluginVersion="252.26199.162" isGlobalTool="false">&lt;html&gt;
&lt;body&gt;
JavaScript 언어로 사용된 URL 가져오기를 확인합니다.
지정된 원격 URL에 대한 모듈 다운로드를 제안합니다.
그러한 연결은 IDE가 적절한 코드 완성과 탐색을 제공하는 데 도움이 됩니다.
&lt;br/&gt;
&lt;br/&gt;
가져오기 지정자의 URL은 JavaScript 언어의 ECMAScript 모듈에 대해서만 지원됩니다.
&lt;!-- tooltip end --&gt;&lt;p&gt;&lt;small&gt;Inspection ID: JSUrlImportUsage&lt;/small&gt;&lt;/p&gt;&lt;/body&gt;
&lt;/html&gt;</inspection><inspection shortName="NpmUsedModulesInstalled" defaultSeverity="WEAK WARNING" displayName="모듈 종속 요소 누락" enabled="true" language="JavaScript" pluginId="JavaScript" pluginVersion="252.26199.162" isGlobalTool="false">&lt;html&gt;
&lt;body&gt;
설치되어 있지 않거나 package.json 종속성에 나열되어 있지 않은 &lt;code&gt;require()&lt;/code&gt; 호출의 모듈 또는 &lt;code&gt;import&lt;/code&gt; 구문을 보고합니다.
&lt;p&gt;모듈을 설치하고/거나 package.json에 포함할 것을 제안합니다.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;require()&lt;/code&gt; 호출은 &lt;em&gt;Node.js Core&lt;/em&gt; JavaScript 라이브러리의 범위 내의 파일에서만 동작합니다.&lt;/p&gt;
&lt;!-- tooltip end --&gt;&lt;p&gt;&lt;small&gt;Inspection ID: NpmUsedModulesInstalled&lt;/small&gt;&lt;/p&gt;&lt;/body&gt;
&lt;/html&gt;</inspection></group><group name="코드 품질 도구" path="CSS"><inspection shortName="Stylelint" defaultSeverity="ERROR" displayName="Stylelint" enabled="false" language="CSS" pluginId="com.intellij.stylelint" pluginVersion="252.26199.162" isGlobalTool="false">&lt;html&gt;
&lt;body&gt;
&lt;a href="http://stylelint.io"&gt;Stylelint&lt;/a&gt; linter에 의해 탐지된 차이를 보고합니다.
&lt;!-- tooltip end --&gt;
&lt;br/&gt;&lt;br/&gt;
강조 표시는 각각의 개별 규칙에 대한 &lt;a href="https://stylelint.io/user-guide/configure"&gt;Stylelint 구성 파일&lt;/a&gt;에 지정된 규칙 심각도를 기반으로 합니다.
&lt;p&gt;&lt;small&gt;Inspection ID: Stylelint&lt;/small&gt;&lt;/p&gt;&lt;/body&gt;
&lt;/html&gt;</inspection></group><group name="일반" path="JavaScript 및 TypeScript"><inspection shortName="JSMismatchedCollectionQueryUpdate" defaultSeverity="WARNING" displayName="일치하지 않는 쿼리 및 컬렉션 업데이트" enabled="true" language="JavaScript" pluginId="JavaScript" pluginVersion="252.26199.162" isGlobalTool="false">&lt;html&gt;
&lt;body&gt;
콘텐츠가 쿼리된 다음 업데이트되지 않거나 업데이트된 다음 쿼리되지 않는 필드 또는 변수의 컬렉션을 보고합니다. 그러한 일치하지 않는 쿼리와 업데이트는 의미가 없으며
불필요한 코드(dead code) 또는 오타 오류 중 하나를 나타낼 수 있습니다.
&lt;p&gt;
쿼리 메서드는 무엇인가를 반환하는지 또는 콜백이 메서드로 반환되는지를 기준으로 자동으로 탐지됩니다.
아래 테이블을 사용하여 업데이트 메서드인 메서드를 지정하세요.
&lt;!-- tooltip end --&gt;&lt;p&gt;&lt;small&gt;Inspection ID: JSMismatchedCollectionQueryUpdate&lt;/small&gt;&lt;/p&gt;&lt;/body&gt;
&lt;/html&gt;</inspection><inspection shortName="JSCheckFunctionSignatures" defaultSeverity="WEAK WARNING" displayName="시그니처 불일치" enabled="true" language="JavaScript" pluginId="JavaScript" pluginVersion="252.26199.162" isGlobalTool="false">&lt;html&gt;
&lt;body&gt;
인수의 타입과 개수 등이 참조된 함수의 시그니처와 일치하지 않는 JavaScript 호출 표현식을 보고합니다.
또한 매개변수 및 반환 값 타입과 관련하여 오버로드 함수가 오버로드된 함수와 일치하지 않는 경우를 보고합니다.

&lt;p&gt;TypeScript 코드는 무시됩니다.&lt;/p&gt;
&lt;!-- tooltip end --&gt;&lt;p&gt;&lt;small&gt;Inspection ID: JSCheckFunctionSignatures&lt;/small&gt;&lt;/p&gt;&lt;/body&gt;
&lt;/html&gt;</inspection><inspection shortName="ES6ShorthandObjectProperty" defaultSeverity="INFORMATION" displayName="프로퍼티를 축약하여 바꿀수 있습니다" enabled="true" language="JavaScript" pluginId="JavaScript" pluginVersion="252.26199.162" isGlobalTool="false">&lt;html&gt;
&lt;body&gt;
ES6 속기 스타일로 변환할 수 있는 객체 프로퍼티를 보고하고 변환하기 위한 빠른 수정을 제공합니다.
&lt;!-- tooltip end --&gt;
&lt;p&gt;예:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;
var obj = {foo:foo}
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;빠른 수정이 적용된 후 코드는 다음과 같습니다:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;
var obj = {foo}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;small&gt;Inspection ID: ES6ShorthandObjectProperty&lt;/small&gt;&lt;/p&gt;&lt;/body&gt;
&lt;/html&gt;</inspection><inspection shortName="JSUnnecessarySemicolon" defaultSeverity="WARNING" displayName="불필요한 세미콜론" enabled="true" language="JavaScript" pluginId="JavaScript" pluginVersion="252.26199.162" isGlobalTool="false">&lt;html&gt;
&lt;body&gt;
불필요한 세미콜론을 보고합니다.
&lt;!-- tooltip end --&gt;&lt;p&gt;&lt;small&gt;Inspection ID: JSUnnecessarySemicolon&lt;/small&gt;&lt;/p&gt;&lt;/body&gt;
&lt;/html&gt;</inspection><inspection shortName="JSReferencingMutableVariableFromClosure" defaultSeverity="WARNING" displayName="클로저에서 가변 변수 참조" enabled="true" language="JavaScript" pluginId="JavaScript" pluginVersion="252.26199.162" isGlobalTool="false">&lt;html&gt;
&lt;body&gt;
함수에서 외부 가변 변수로의 접근을 보고합니다. 
&lt;p&gt;예:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;
  for (var i = 1; i &amp;lt;= 3; i++) {
    setTimeout(function() {
        console.log(i); // 나쁨
    }, 0);
  }
&lt;/code&gt;&lt;/pre&gt;
&lt;!-- tooltip end --&gt;&lt;p&gt;&lt;small&gt;Inspection ID: JSReferencingMutableVariableFromClosure&lt;/small&gt;&lt;/p&gt;&lt;/body&gt;
&lt;/html&gt;</inspection><inspection shortName="JSLastCommaInArrayLiteral" defaultSeverity="WARNING" displayName="배열 문자열 내 불필요한 마지막 쉼표" enabled="true" language="JavaScript" pluginId="JavaScript" pluginVersion="252.26199.162" isGlobalTool="false">&lt;html&gt;
&lt;body&gt;
배열 리터럴 내 후행 쉼표의 사용 위치를 보고합니다.

&lt;p&gt;경고는 JavaScript 언어 버전이 ECMAScript 5.1로 설정된 경우에만 보고됩니다.&lt;/p&gt;

&lt;p&gt;배열 내 후행 쉼표는 사양에 의해 허용되지만 일부 브라우저에서는 후행 쉼표가 사용되는 경우 오류가 발생할 수 있습니다.&lt;/p&gt;

&lt;p&gt;&lt;b&gt;코드 스타일&lt;/b&gt; | &lt;b&gt;JavaScript&lt;/b&gt; 또는 &lt;b&gt;TypeScript&lt;/b&gt; | &lt;b&gt;문장 부호&lt;/b&gt;에서 후행 쉼표에 대한 서식 옵션을 구성할 수 있습니다. &lt;/p&gt;
&lt;!-- tooltip end --&gt;&lt;p&gt;&lt;small&gt;Inspection ID: JSLastCommaInArrayLiteral&lt;/small&gt;&lt;/p&gt;&lt;/body&gt;
&lt;/html&gt;</inspection><inspection shortName="JSLastCommaInObjectLiteral" defaultSeverity="WARNING" displayName="객체 리터럴에서 마지막 쉼표가 불필요합니다" enabled="true" language="JavaScript" pluginId="JavaScript" pluginVersion="252.26199.162" isGlobalTool="false">&lt;html&gt;
&lt;body&gt;
객체 리터럴 내 후행 쉼표의 사용 위치를 보고합니다.

&lt;p&gt;경고는 JavaScript 언어 버전이 ECMAScript 5.1로 설정된 경우에만 보고됩니다.&lt;/p&gt;

&lt;p&gt;객체 리터럴 내 후행 쉼표는 사양에 의해 허용되지만 일부 브라우저는 후행 쉼표가 사용된 경우 오류를 던질 수 있습니다.&lt;/p&gt;

&lt;p&gt;&lt;b&gt;코드 스타일&lt;/b&gt; | &lt;b&gt;JavaScript&lt;/b&gt; 또는 &lt;b&gt;TypeScript&lt;/b&gt; | &lt;b&gt;문장 부호&lt;/b&gt;에서 후행 쉼표에 대한 서식 옵션을 구성할 수 있습니다.&lt;/p&gt;
&lt;!-- tooltip end --&gt;&lt;p&gt;&lt;small&gt;Inspection ID: JSLastCommaInObjectLiteral&lt;/small&gt;&lt;/p&gt;&lt;/body&gt;
&lt;/html&gt;</inspection><inspection shortName="JSJoinVariableDeclarationAndAssignment" defaultSeverity="INFORMATION" displayName="변수 선언을 변수에 대한 첫 번째 대입과 병합할 수 있습니다" enabled="true" language="JavaScript" pluginId="JavaScript" pluginVersion="252.26199.162" isGlobalTool="false">&lt;html&gt;
&lt;body&gt;
이니셜라이저 없이 선언되었으며 코드의 훨씬 뒤쪽에서 또는 1개의 중첩된 범위에서 사용된 변수를 보고합니다. 변수를 사용 위치와 가까운 곳으로 옮기고 이니셜라이저 표현식과 결합할 것을 제안합니다.
&lt;!-- tooltip end --&gt;&lt;p&gt;&lt;small&gt;Inspection ID: JSJoinVariableDeclarationAndAssignment&lt;/small&gt;&lt;/p&gt;&lt;/body&gt;
&lt;/html&gt;</inspection><inspection shortName="ES6RedundantNestingInTemplateLiteral" defaultSeverity="WEAK WARNING" displayName="템플릿 리터럴 내 중복된 중첩" enabled="true" language="JavaScript" pluginId="JavaScript" pluginVersion="252.26199.162" isGlobalTool="false">&lt;html&gt;
&lt;body&gt;
문자열 또는 템플릿 리터럴의 중첩된 인스턴스를 보고합니다. 중첩된 인스턴스를 상위 템플릿 문자열로 인라인화할 것을 제안합니다.
&lt;!-- tooltip end --&gt;
&lt;p&gt;예: &lt;/p&gt;
&lt;pre&gt;&lt;code&gt;
let a = 'Hello, ${'Brave ${"New"}'} ${"World"}!'
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;빠른 수정이 적용된 후 코드는 다음과 같습니다:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;
let a = 'Hello, Brave New World!'
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;small&gt;Inspection ID: ES6RedundantNestingInTemplateLiteral&lt;/small&gt;&lt;/p&gt;&lt;/body&gt;
&lt;/html&gt;</inspection><inspection shortName="ES6DestructuringVariablesMerge" defaultSeverity="WEAK WARNING" displayName="동일한 키를 가진 구조 분해 프로퍼티" enabled="true" language="JavaScript" pluginId="JavaScript" pluginVersion="252.26199.162" isGlobalTool="false">&lt;html&gt;
&lt;body&gt;
키가 같은 여러 구조 분해 프로퍼티를 보고합니다. 프로퍼티를 병합할 것을 제안합니다.
&lt;!-- tooltip end --&gt;&lt;p&gt;&lt;small&gt;Inspection ID: ES6DestructuringVariablesMerge&lt;/small&gt;&lt;/p&gt;&lt;/body&gt;
&lt;/html&gt;</inspection><inspection shortName="JSXUnresolvedComponent" defaultSeverity="WEAK WARNING" displayName="해결되지 않은 JSX 구성 요소" enabled="true" language="JavaScript" pluginId="JavaScript" pluginVersion="252.26199.162" isGlobalTool="false">&lt;html&gt;
&lt;body&gt;
JSX 구성 요소에 대한 미해결 참조를 보고합니다.
참조 구성 요소가 프로젝트 또는 종속성으로 정의되어 있는 경우 누락된 import 문을 추가하거나 이 이름으로 새 구성 요소를 생성할 것을 권장합니다.
&lt;p&gt;새 구성 요소 템플릿을 '에디터 | 파일 및 템플릿'에서 수정할 수 있습니다.&lt;/p&gt;
&lt;!-- tooltip end --&gt;&lt;p&gt;&lt;small&gt;Inspection ID: JSXUnresolvedComponent&lt;/small&gt;&lt;/p&gt;&lt;/body&gt;
&lt;/html&gt;</inspection><inspection shortName="JSUnfilteredForInLoop" defaultSeverity="WARNING" displayName="필터링되지 않은 for..in 루프" enabled="false" language="JavaScript" pluginId="JavaScript" pluginVersion="252.26199.162" isGlobalTool="false">&lt;html&gt;
&lt;body&gt;
필터링되지 않은 &lt;code&gt;for-in&lt;/code&gt; 루프를 보고합니다.
&lt;br/&gt;&lt;br/&gt;
이 구문을 사용하면 객체의 자체 프로퍼티뿐만 아니라 해당 프로토타입의 프로퍼티까지 처리됩니다.
특정 경우에 이를 예상할 수 없을 수 있습니다(예: 모든 프로퍼티를 복사 또는 변경하는 유틸리티 메서드 내 또는 &lt;code&gt;Object&lt;/code&gt;의 프로토타입이 잘못 변경되는 경우).
예를 들어, 다음 코드는 &lt;b&gt;42&lt;/b&gt; 및 &lt;b&gt;myMethod&lt;/b&gt;를 출력합니다:
&lt;br/&gt;&lt;br/&gt;
&lt;pre&gt;&lt;code&gt;
Object.prototype.myMethod = function myMethod() {};
let a = { foo: 42 };
for (let i in a) {
  console.log(a[i]);
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;루프 전체를 &lt;code&gt;Object.keys()&lt;/code&gt;로 바꾸거나 &lt;code&gt;hasOwnProperty()&lt;/code&gt; 체크를 추가할 것을 권장합니다. 빠른 수정이 적용된 후 코드는 다음과 같습니다:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;
for (let i in a) {
  if (a.hasOwnProperty(i)) {
    console.log(a[i]);
  }
}
&lt;/code&gt;&lt;/pre&gt;
&lt;!-- tooltip end --&gt;&lt;p&gt;&lt;small&gt;Inspection ID: JSUnfilteredForInLoop&lt;/small&gt;&lt;/p&gt;&lt;/body&gt;
&lt;/html&gt;</inspection><inspection shortName="JSPrimitiveTypeWrapperUsage" defaultSeverity="WARNING" displayName="기본 타입 객체 래퍼가 사용되었습니다" enabled="true" language="JavaScript" pluginId="JavaScript" pluginVersion="252.26199.162" isGlobalTool="false">&lt;html&gt;
&lt;body&gt;
원시 타입의 래퍼 또는 원시 타입의 프로퍼티가 변경되는 부적절한 사용 위치를 보고합니다. 원시 타입의 프로퍼티가 변경되는 경우에는 대입된 값이 손실됩니다.
&lt;!-- tooltip end --&gt;&lt;p&gt;&lt;small&gt;Inspection ID: JSPrimitiveTypeWrapperUsage&lt;/small&gt;&lt;/p&gt;&lt;/body&gt;
&lt;/html&gt;</inspection><inspection shortName="JSNonStrictModeUsed" defaultSeverity="WARNING" displayName="비엄격 모드가 사용되었습니다" enabled="false" language="JavaScript" pluginId="JavaScript" pluginVersion="252.26199.162" isGlobalTool="false">&lt;html&gt;
&lt;body&gt;
&lt;code&gt;strict&lt;/code&gt; 모드가 아닌 JavaScript 파일을 보고합니다.
&lt;!-- tooltip end --&gt;&lt;p&gt;&lt;small&gt;Inspection ID: JSNonStrictModeUsed&lt;/small&gt;&lt;/p&gt;&lt;/body&gt;
&lt;/html&gt;</inspection><inspection shortName="JSMethodCanBeStatic" defaultSeverity="INFORMATION" displayName="메서드를 'static'으로 설정할 수 있습니다" enabled="true" language="JavaScript" pluginId="JavaScript" pluginVersion="252.26199.162" isGlobalTool="false">&lt;html&gt;
&lt;body&gt;
안전하게 &lt;code&gt;static&lt;/code&gt;으로 만들 수 있는 클래스 메서드를 보고합니다.
메서드는 그 클래스의 비 static 메서드와 비 static 필드를 참조하지 않으며 하위 클래스에서 재정의되지 않는 경우에 &lt;code&gt;static&lt;/code&gt;이 될 수 있습니다.
&lt;!-- tooltip end --&gt;
&lt;p&gt;
  &lt;code&gt;private&lt;/code&gt; 메서드만을 검사하려면 아래의 첫 번째 체크박스를 사용하십시오.
&lt;p&gt;&lt;small&gt;Inspection ID: JSMethodCanBeStatic&lt;/small&gt;&lt;/p&gt;&lt;/body&gt;
&lt;/html&gt;</inspection><inspection shortName="JSUnresolvedExtXType" defaultSeverity="WARNING" displayName="해결되지 않은 Flow JS xtype" enabled="true" language="JavaScript" pluginId="JavaScript" pluginVersion="252.26199.162" isGlobalTool="false">&lt;html&gt;
&lt;body&gt;
해당 클래스를 포함하지 않는 Ext JS &lt;code&gt;xtype&lt;/code&gt; 참조를 보고합니다.
&lt;!-- tooltip end --&gt;&lt;p&gt;&lt;small&gt;Inspection ID: JSUnresolvedExtXType&lt;/small&gt;&lt;/p&gt;&lt;/body&gt;
&lt;/html&gt;</inspection><inspection shortName="JSDuplicatedDeclaration" defaultSeverity="WARNING" displayName="중복 선언" enabled="true" language="JavaScript" pluginId="JavaScript" pluginVersion="252.26199.162" isGlobalTool="false">&lt;html&gt;
&lt;body&gt;
스코프 내 여러 선언을 보고합니다.
&lt;!-- tooltip end --&gt;&lt;p&gt;&lt;small&gt;Inspection ID: JSDuplicatedDeclaration&lt;/small&gt;&lt;/p&gt;&lt;/body&gt;
&lt;/html&gt;</inspection><inspection shortName="WebpackConfigHighlighting" defaultSeverity="WARNING" displayName="JSON 스키마와 webpack 구성 준수" enabled="true" language="JavaScript" pluginId="intellij.webpack" pluginVersion="252.26199.162" isGlobalTool="false">&lt;html&gt;
&lt;body&gt;
&lt;a href="https://github.com/webpack/webpack/blob/master/schemas/WebpackOptions.json"&gt;webpack 옵션 스키마&lt;/a&gt;와 비교하여 webpack 구성 파일(이름이 'webpack'으로 시작. 예: 'webpack.config.js') 내 옵션의 유효성을 검사합니다.
&lt;br/&gt;&lt;br/&gt;
이 검사를 비활성화하면 구성 객체 내부의 유효성 검사 및 코드 완성 기능이 꺼집니다.
&lt;!-- tooltip end --&gt;&lt;p&gt;&lt;small&gt;Inspection ID: WebpackConfigHighlighting&lt;/small&gt;&lt;/p&gt;&lt;/body&gt;
&lt;/html&gt;</inspection><inspection shortName="JSJQueryEfficiency" defaultSeverity="WARNING" displayName="JQuery 선택자를 최적화할 수 있음" enabled="true" language="JavaScript" pluginId="JavaScript" pluginVersion="252.26199.162" isGlobalTool="false">&lt;html&gt;
&lt;body&gt;
캐시 가능한 중복된 jQuery 선택자 또는 속성 및 의사 선택자의 사용 위치(선택 사항)를 보고합니다.
&lt;!-- tooltip end --&gt;&lt;p&gt;&lt;small&gt;Inspection ID: JSJQueryEfficiency&lt;/small&gt;&lt;/p&gt;&lt;/body&gt;
&lt;/html&gt;</inspection><inspection shortName="JSCommentMatchesSignature" defaultSeverity="WARNING" displayName="일치하지 않는 JSDoc 및 함수 시그니처" enabled="true" language="JavaScript" pluginId="JavaScript" pluginVersion="252.26199.162" isGlobalTool="false">&lt;html&gt;
&lt;body&gt;
JSDoc 주석 안의 매개변수 이름 및 개수와 실제 함수 매개변수 사이의 불일치를 보고합니다.
JSDoc 주석에서 매개변수를 업데이트할 것을 제안합니다.
&lt;!-- tooltip end --&gt;
&lt;p&gt;&lt;b&gt;예:&lt;/b&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;
/**
 * @param height Height in pixels
 */
function sq(height, width) {} // 가로 길이가 문서화되어 있지 않습니다
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;빠른 수정을 적용한 후:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;
/**
 * @param height Height in pixels
 * @param width
 */
function sq(height, width) {}
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;small&gt;Inspection ID: JSCommentMatchesSignature&lt;/small&gt;&lt;/p&gt;&lt;/body&gt;
&lt;/html&gt;</inspection><inspection shortName="JSAnnotator" defaultSeverity="ERROR" displayName="ECMAScript 사양을 따르지 않습니다" enabled="true" language="JavaScript" pluginId="JavaScript" pluginVersion="252.26199.162" isGlobalTool="false">&lt;html&gt;
&lt;body&gt;
유효하지 않은 키워드 사용, 호환되지 않는 숫자 서식 사용, 또는 getter/setter에 대한 여러 파라미터 사용 등 기본적인 구문 이슈 및 언어 사양과의 불일치를 보고합니다.
&lt;br&gt;
일반적으로 그러한 오류는 항상 보고되어야 하며 비활성화되어선 안 됩니다.
하지만 JavaScript의 동적인 성질에 의한 이슈, 아직 지원되지 않는 언어 기능 사용, IDE의 체커 내 버그와 같은 일부 경우에는 이러한 아주 기본적인 오류 보고를 비활성화하는 것이 편리할 수 있습니다.
&lt;!-- tooltip end --&gt;&lt;p&gt;&lt;small&gt;Inspection ID: JSAnnotator&lt;/small&gt;&lt;/p&gt;&lt;/body&gt;
&lt;/html&gt;</inspection><inspection shortName="JSUnresolvedReference" defaultSeverity="WEAK WARNING" displayName="미해결 참조" enabled="true" language="JavaScript" pluginId="JavaScript" pluginVersion="252.26199.162" isGlobalTool="false">&lt;html&gt;
&lt;body&gt;
JavaScript 코드의 미해결 참조를 보고합니다.
&lt;!-- tooltip end --&gt;&lt;p&gt;&lt;small&gt;Inspection ID: JSUnresolvedReference&lt;/small&gt;&lt;/p&gt;&lt;/body&gt;
&lt;/html&gt;</inspection><inspection shortName="JSValidateTypes" defaultSeverity="WEAK WARNING" displayName="타입 불일치" enabled="true" language="JavaScript" pluginId="JavaScript" pluginVersion="252.26199.162" isGlobalTool="false">&lt;html&gt;
&lt;body&gt;
다음의 잘못된 타입을 보고합니다: 
&lt;ul&gt;
  &lt;li&gt;함수 호출 내 매개변수&lt;/li&gt;
  &lt;li&gt;반환 값&lt;/li&gt;
  &lt;li&gt;할당된 표현식&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;TypeScript 코드는 무시됩니다.&lt;/p&gt;
&lt;!-- tooltip end --&gt;&lt;p&gt;&lt;small&gt;Inspection ID: JSValidateTypes&lt;/small&gt;&lt;/p&gt;&lt;/body&gt;
&lt;/html&gt;</inspection><inspection shortName="ES6ClassMemberInitializationOrder" defaultSeverity="WARNING" displayName="정적 이니셜라이저에서 할당되지 않은 프로퍼티가 사용될 가능성이 있습니다" enabled="true" language="ECMAScript 6" pluginId="JavaScript" pluginVersion="252.26199.162" isGlobalTool="false">&lt;html&gt;
&lt;body&gt;
아직 초기화되지 않았을 수 있는 끌어올려지지 않은 다른 클래스 멤버를 참조하는 클래스 멤버 이니셜라이저를 보고합니다.
&lt;br/&gt;&lt;br/&gt;
필드의 클래스 멤버 초기화는 결과적으로 실행되기 때문에 나중에 선언된 다른 필드를 참조할 수 없습니다.
&lt;!-- tooltip end --&gt;&lt;p&gt;&lt;small&gt;Inspection ID: ES6ClassMemberInitializationOrder&lt;/small&gt;&lt;/p&gt;&lt;/body&gt;
&lt;/html&gt;</inspection><inspection shortName="JSDeprecatedSymbols" defaultSeverity="WEAK WARNING" displayName="지원 중단되는 심볼이 사용됨" enabled="true" language="JavaScript" pluginId="JavaScript" pluginVersion="252.26199.162" isGlobalTool="false">&lt;html&gt;
&lt;body&gt;
곧 사용할 수 없게 될 함수 변수의 사용 위치를 보고합니다.
&lt;!-- tooltip end --&gt;&lt;p&gt;&lt;small&gt;Inspection ID: JSDeprecatedSymbols&lt;/small&gt;&lt;/p&gt;&lt;/body&gt;
&lt;/html&gt;</inspection><inspection shortName="JSAccessibilityCheck" defaultSeverity="WARNING" displayName="액세스할 수 없는 @private 및 @protected 멤버가 참조됨" enabled="true" language="JavaScript" pluginId="JavaScript" pluginVersion="252.26199.162" isGlobalTool="false">&lt;html&gt;
&lt;body&gt;
&lt;code&gt;@private&lt;/code&gt;또는 &lt;code&gt;@protected&lt;/code&gt; 태그로 표시되어 있으나 이러한 태그가 의미하는 가시성 규칙에 부합하지 않는 JavaScript 멤버 참조를 보고합니다.
&lt;!-- tooltip end --&gt;&lt;p&gt;&lt;small&gt;Inspection ID: JSAccessibilityCheck&lt;/small&gt;&lt;/p&gt;&lt;/body&gt;
&lt;/html&gt;</inspection><inspection shortName="JSUndeclaredVariable" defaultSeverity="WEAK WARNING" displayName="암시적으로 선언된 전역 JavaScript 변수" enabled="true" language="JavaScript" pluginId="JavaScript" pluginVersion="252.26199.162" isGlobalTool="false">&lt;html&gt;
&lt;body&gt;
전역 변수의 묵시적 선언을 보고합니다.
&lt;p&gt;예:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;
  var aaa = 1; // 좋은
  bbb = 2; // 나쁨, bbb가 어딘가에서 'var'로 선언되지 않은 경우
&lt;/code&gt;&lt;/pre&gt;
&lt;!-- tooltip end --&gt;&lt;p&gt;&lt;small&gt;Inspection ID: JSUndeclaredVariable&lt;/small&gt;&lt;/p&gt;&lt;/body&gt;
&lt;/html&gt;</inspection><inspection shortName="JSClosureCompilerSyntax" defaultSeverity="WARNING" displayName="JSDoc 태그의 잘못된 사용" enabled="true" language="JavaScript" pluginId="JavaScript" pluginVersion="252.26199.162" isGlobalTool="false">&lt;html&gt;
&lt;body&gt;
&lt;code&gt;@abstract&lt;/code&gt;,&lt;code&gt;@interface&lt;/code&gt;, &lt;code&gt;@implements&lt;/code&gt; 의 올바른 사용을 포함해 &lt;em&gt;Google Closure Compiler&lt;/em&gt;어노테이션이 암시하는 경고를 보고합니다.
&lt;!-- tooltip end --&gt;&lt;p&gt;&lt;small&gt;Inspection ID: JSClosureCompilerSyntax&lt;/small&gt;&lt;/p&gt;&lt;/body&gt;
&lt;/html&gt;</inspection><inspection shortName="JSValidateJSDoc" defaultSeverity="WARNING" displayName="JSDoc의 구문 오류 및 해결되지 않은 참조" enabled="true" language="JavaScript" pluginId="JavaScript" pluginVersion="252.26199.162" isGlobalTool="false">&lt;html&gt;
&lt;body&gt;
문서 주석 내 구문 불일치를 보고합니다.
&lt;!-- tooltip end --&gt;&lt;p&gt;&lt;small&gt;Inspection ID: JSValidateJSDoc&lt;/small&gt;&lt;/p&gt;&lt;/body&gt;
&lt;/html&gt;</inspection><inspection shortName="JSFileReferences" defaultSeverity="WARNING" displayName="해결되지 않은 파일 참조" enabled="true" language="JavaScript" pluginId="JavaScript" pluginVersion="252.26199.162" isGlobalTool="false">&lt;html&gt;
&lt;body&gt;
CommonJS 및 AMD 모듈 참조 등 JavaScript 파일 내 해결되지 않은 파일 참조를 보고합니다.
&lt;!-- tooltip end --&gt;&lt;p&gt;&lt;small&gt;Inspection ID: JSFileReferences&lt;/small&gt;&lt;/p&gt;&lt;/body&gt;
&lt;/html&gt;</inspection><inspection shortName="JSUnresolvedLibraryURL" defaultSeverity="WARNING" displayName="HTTP 링크용으로 로컬에 저장된 라이브러리 누락" enabled="true" language="HTML" pluginId="JavaScript" pluginVersion="252.26199.162" isGlobalTool="false">&lt;html&gt;
&lt;body&gt;
로컬에 저장되어 있는 어떤 파일과도 연결되어 있지 않은 외부 JavaScript 라이브러리의 URL을 보고합니다. 라이브러리를 다운로드할 것을 제안합니다.
그러한 연결은 IDE가 적절한 코드 완성과 탐색을 제공하는 데 도움이 됩니다. 
&lt;!-- tooltip end --&gt;&lt;p&gt;&lt;small&gt;Inspection ID: JSUnresolvedLibraryURL&lt;/small&gt;&lt;/p&gt;&lt;/body&gt;
&lt;/html&gt;</inspection><inspection shortName="ES6PreferShortImport" defaultSeverity="WARNING" displayName="가져오기를 단축할 수 있습니다" enabled="true" language="JavaScript" pluginId="JavaScript" pluginVersion="252.26199.162" isGlobalTool="false">&lt;html&gt;
&lt;body&gt;
&lt;code&gt;from&lt;/code&gt; 부분을 단축할 수 있는 ES6 import 문을 보고합니다. 상위 디렉터리를 가져오기를 제안합니다.
&lt;!-- tooltip end --&gt;&lt;p&gt;&lt;small&gt;Inspection ID: ES6PreferShortImport&lt;/small&gt;&lt;/p&gt;&lt;/body&gt;
&lt;/html&gt;</inspection><inspection shortName="JSXSyntaxUsed" defaultSeverity="ERROR" displayName="JSX 구문이 사용됨" enabled="false" language="JavaScript" pluginId="JavaScript" pluginVersion="252.26199.162" isGlobalTool="false">&lt;html&gt;
&lt;body&gt;
JavaScript 코드 내 JSX 태그의 사용을 보고합니다.
&lt;!-- tooltip end --&gt;&lt;p&gt;&lt;small&gt;Inspection ID: JSXSyntaxUsed&lt;/small&gt;&lt;/p&gt;&lt;/body&gt;
&lt;/html&gt;</inspection></group><group name="SQL" path=""><inspection shortName="SqlCheckUsingColumnsInspection" defaultSeverity="WARNING" displayName="using 절의 열 검사" enabled="true" language="SQL" pluginId="com.intellij.database" pluginVersion="252.26199.162" isGlobalTool="false">&lt;html&gt;
&lt;body&gt;
두 테이블 모두에 존재하지 않는 USING 절 내 열을 보고합니다.
&lt;p&gt;예시(MySQL):&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;CREATE TABLE t1 (i INT, j INT);
CREATE TABLE t2 (k INT, l INT);
SELECT * FROM t1 JOIN t2 USING (j);&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;USING 절 안의 열 이름은 두 테이블 모두에 있어야 하며 SELECT 쿼리는 주어진 열 이름을 사용해 이 테이블을 자동으로 결합합니다. &lt;code&gt;t2&lt;/code&gt; 안에 &lt;code&gt;j&lt;/code&gt; 열이 없으므로 ON을 사용해 쿼리를 다시 작성할 수 있습니다. ON 절을 사용하면 두 테이블에서 열 이름이 일치하지 않는 경우 테이블을 결합할 수 있습니다.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;SELECT * FROM t1 JOIN t2 ON t1.j = t2.l;&lt;/code&gt;&lt;/pre&gt;
&lt;!-- tooltip end --&gt;&lt;p&gt;&lt;small&gt;Inspection ID: SqlCheckUsingColumnsInspection&lt;/small&gt;&lt;/p&gt;&lt;/body&gt;
&lt;/html&gt;</inspection><inspection shortName="SqlRedundantCodeInCoalesceInspection" defaultSeverity="WARNING" displayName="COALESCE 호출 내 불필요한 코드" enabled="true" language="SQL" pluginId="com.intellij.database" pluginVersion="252.26199.162" isGlobalTool="false">&lt;html&gt;
&lt;body&gt;
COALESCE 함수에서 NULL로 평가되지 않는 첫 번째 표현식을 제외한 모든 인수를 보고합니다.
&lt;p&gt;예시(MySQL):&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;SELECT COALESCE(NULL, NULL, NULL, 42, NULL, 'string') as a;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;첫 번째 NOT NULL 인수는 &lt;code&gt;42&lt;/code&gt;이며 다른 인수는 회색으로 표시됩니다.&lt;/p&gt;
&lt;!-- tooltip end --&gt;&lt;p&gt;&lt;small&gt;Inspection ID: SqlRedundantCodeInCoalesceInspection&lt;/small&gt;&lt;/p&gt;&lt;/body&gt;
&lt;/html&gt;</inspection><inspection shortName="SqlCaseVsCoalesceInspection" defaultSeverity="WARNING" displayName="COALESCE 함수 대신 CASE 사용 및 그 반대" enabled="true" language="SQL" pluginId="com.intellij.database" pluginVersion="252.26199.162" isGlobalTool="false">&lt;html&gt;
&lt;body&gt;
CASE 및 COALESCE 호출을 서로 교체할 수 있는 경우를 보고합니다. 이 검사는 &lt;b&gt;'COALESCE' 호출로 바꾸기&lt;/b&gt; 인텐션 액션 및 그 반대인 &lt;b&gt;CASE 식으로 바꾸기&lt;/b&gt; 인텐션 액션을 포함합니다.
&lt;p&gt;예시(MySQL):&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;SELECT
  -- 이 CASE는 COALESCE으로 바꿀 수 있음
	CASE
		WHEN C1 IS NOT NULL THEN C1
		ELSE 0
		END
FROM dual;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;이 예에서, CASE 식은 동일한 결과를 출력하는 &lt;code&gt;SELECT COALESCE(C1, 0)&lt;/code&gt;로 바꿀 수 있습니다.&lt;/p&gt;
&lt;p&gt;CASE 식을 사용하고 싶은 경우는, 검사 페이지에서 &lt;b&gt;COALESCE 함수보다 CASE 식 선호&lt;/b&gt; 옵션을 선택하세요.&lt;/p&gt;
&lt;!-- tooltip end --&gt;&lt;p&gt;&lt;small&gt;Inspection ID: SqlCaseVsCoalesceInspection&lt;/small&gt;&lt;/p&gt;&lt;/body&gt;
&lt;/html&gt;</inspection><inspection shortName="SqlDeprecateTypeInspection" defaultSeverity="WARNING" displayName="더 이상 사용되지 않는 타입" enabled="true" language="SQL" pluginId="com.intellij.database" pluginVersion="252.26199.162" isGlobalTool="false">&lt;html&gt;
&lt;body&gt;
이후 버전의 DBMS에서 사용할 수 없게 될 타입의 사용 위치를 보고합니다.
&lt;p&gt;보고된 타입:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;Oracle: LONG(&lt;a href="https://docs.oracle.com/cd/A91202_01/901_doc/server.901/a90120/ch4_dep.htm#6690" target="_blank"&gt;docs.oracle.com에서 지원이 중단되어 곧 사용할 수 없게 될 기능&lt;/a&gt;을 참고하세요).
  &lt;/li&gt;
  &lt;li&gt;Microsoft SQL Server: TEXT, NTEXT, IMAGE(&lt;a
      href="https://docs.microsoft.com/en-us/sql/database-engine/deprecated-database-engine-features-in-sql-server-2016?view=sql-server-ver15"
      target="_blank"&gt;docs.microsoft.com에서 SQL Server 2016에서 사용되지 않는 데이터베이스 엔진 기능&lt;/a&gt;을 참고하세요).
  &lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;예시(Oracle):&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;CREATE TABLE ot.foo(
a NUMBER GENERATED BY DEFAULT AS IDENTITY,
b LONG NOT NULL
);&lt;/code&gt;&lt;/pre&gt;
&lt;!-- tooltip end --&gt;&lt;p&gt;&lt;small&gt;Inspection ID: SqlDeprecateTypeInspection&lt;/small&gt;&lt;/p&gt;&lt;/body&gt;
&lt;/html&gt;</inspection><inspection shortName="SqlJoinCountInspection" defaultSeverity="WARNING" displayName="과도한 JOIN 수" enabled="false" language="SQL" pluginId="com.intellij.database" pluginVersion="252.26199.162" isGlobalTool="false">&lt;html&gt;
&lt;body&gt;
JOINS가 과도하게 많은 쿼리를 보고합니다.
&lt;p&gt;JOIN을 과도하게 사용하는 것은 성능을 고려하여 권장되지 않습니다.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;SELECT * FROM a inner join b using(id) inner join c using (id) inner join d using (id) inner join e using (id)&lt;/code&gt;&lt;/pre&gt;
&lt;!-- tooltip end --&gt;&lt;p&gt;&lt;small&gt;Inspection ID: SqlJoinCountInspection&lt;/small&gt;&lt;/p&gt;&lt;/body&gt;
&lt;/html&gt;</inspection><inspection shortName="SqlIdentifierInspection" defaultSeverity="WARNING" displayName="식별자는 따옴표로 묶어야 합니다" enabled="true" language="SQL" pluginId="com.intellij.database" pluginVersion="252.26199.162" isGlobalTool="false">&lt;html&gt;
&lt;body&gt;
SQL 예약 키워드를 쿼리 안에서 식별자 이름으로 사용하는 경우를 보고합니다.
&lt;p&gt;예시(Microsoft SQL 서버):&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;CREATE TABLE select (identity INT IDENTITY NOT NULL, order INT NOT NULL);&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;테이블 및 열 이름으로 &lt;code&gt;select&lt;/code&gt;, &lt;code&gt;identity&lt;/code&gt;, &lt;code&gt;order&lt;/code&gt;를 사용합니다.
  하지만 이러한 이름 역시 Microsoft SQL Server의 예약 키워드입니다.
  따라서 이러한 식별자를 객체 이름으로 사용하려면 따옴표로 묶어야 합니다. 식별자를 따옴표로 묶기 위해 &lt;b&gt;식별자에 따옴표 추가&lt;/b&gt; 빠른 수정을 사용할 수 있습니다.&lt;/p&gt;
&lt;p&gt;빠른 수정을 적용한 후:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;CREATE TABLE [select] ([identity] INT IDENTITY NOT NULL, [order] INT NOT NULL);&lt;/code&gt;&lt;/pre&gt;
&lt;!-- tooltip end --&gt;&lt;p&gt;&lt;small&gt;Inspection ID: SqlIdentifierInspection&lt;/small&gt;&lt;/p&gt;&lt;/body&gt;
&lt;/html&gt;</inspection><inspection shortName="SqlSingleSessionModeInspection" defaultSeverity="WARNING" displayName="단일 세션 모드를 사용하지 않고 임시 테이블 생성" enabled="true" language="SQL" pluginId="com.intellij.database" pluginVersion="252.26199.162" isGlobalTool="false">&lt;html&gt;
&lt;body&gt;
단일 세션 모드가 아닐 때 임시 테이블이 생성되면 보고합니다.
&lt;p&gt;예시(PostgreSQL):&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;CREATE TEMPORARY TABLE foo(a INT, b INT);
&lt;/code&gt;&lt;/pre&gt;
&lt;!-- tooltip end --&gt;&lt;p&gt;&lt;small&gt;Inspection ID: SqlSingleSessionModeInspection&lt;/small&gt;&lt;/p&gt;&lt;/body&gt;
&lt;/html&gt;</inspection><inspection shortName="SqlDialectInspection" defaultSeverity="WARNING" displayName="SQL 파생 언어 탐지" enabled="true" language="SQL" pluginId="com.intellij.database" pluginVersion="252.26199.162" isGlobalTool="false">&lt;html&gt;
&lt;body&gt;
파생 언어가 SQL 파일에 할당되어 있지 않은 경우를 보고합니다.
&lt;p&gt;예를 들어, 파생 언어를 연결하지 않고 새 SQL 파일을 열면 가장 적절한 파생 언어를 권장하는 알림이 나타납니다. &lt;b&gt;&amp;lt;파생 언어&amp;gt;사용&lt;/b&gt;을 클릭하여 권장된 파생 언어를 사용하세요. 아니면 &lt;b&gt;파생 언어를 다음으로 변경...&lt;/b&gt; 링크를 클릭하여 다른 파생 언어를 선택하세요.
&lt;/p&gt;
&lt;!-- tooltip end --&gt;&lt;p&gt;&lt;small&gt;Inspection ID: SqlDialectInspection&lt;/small&gt;&lt;/p&gt;&lt;/body&gt;
&lt;/html&gt;</inspection><inspection shortName="SqlUnusedSubqueryItemInspection" defaultSeverity="WARNING" displayName="사용하지 않는 하위 쿼리 항목" enabled="true" language="SQL" pluginId="com.intellij.database" pluginVersion="252.26199.162" isGlobalTool="false">&lt;html&gt;
&lt;body&gt;
외부 쿼리 식에서 참조되지 않은 열, 별칭 등 하위 쿼리 항목 등을 보고합니다.
&lt;p&gt;예시(PostgreSQL):&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;CREATE TABLE for_subquery(id INT);
SELECT a, q FROM (SELECT 1 AS a, 10 AS b, 2 + 3 AS q, id
      FROM for_subquery) x;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;하위 쿼리에서 &lt;code&gt;a&lt;/code&gt; 및 &lt;code&gt;q&lt;/code&gt;를 참조합니다. 하지만 &lt;code&gt;b&lt;/code&gt; 별칭 및 &lt;code&gt;id&lt;/code&gt; 열은 외부 SELECT 문에서 참조되지 않습니다. 그러므로 &lt;code&gt;b&lt;/code&gt; 및 &lt;code&gt;id&lt;/code&gt;가 회색으로 표시됩니다.&lt;/p&gt;
&lt;!-- tooltip end --&gt;&lt;p&gt;&lt;small&gt;Inspection ID: SqlUnusedSubqueryItemInspection&lt;/small&gt;&lt;/p&gt;&lt;/body&gt;
&lt;/html&gt;</inspection><inspection shortName="SqlSignatureInspection" defaultSeverity="WARNING" displayName="함수 시그니처" enabled="true" language="SQL" pluginId="com.intellij.database" pluginVersion="252.26199.162" isGlobalTool="false">&lt;html&gt;
&lt;body&gt;
기본 제공 함수에 대한 대표적인 이슈를 보고합니다.
&lt;p&gt;이 검사는 잘못된 인수 개수, 유효하지 않은 키워드, 잘못된 데이터 타입 등의 이슈를 보고합니다.&lt;/p&gt;
&lt;p&gt;예시(MySQL):&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;CREATE TABLE foo (a INT, b INT, c INT)

SELECT IFNULL() FROM foo; -- 오류
SELECT IFNULL(a) FROM foo; -- 오류
SELECT IFNULL(a, b) FROM foo; -- 문제 없음
SELECT IFNULL(a, b, c) FROM foo; -- 오류&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;MySQL에서 &lt;code&gt;IFNULL()&lt;/code&gt; 함수는 엄격히 두 개의 인수를 수락합니다. 그러므로 &lt;code&gt;SELECT IFNULL(a, b) FROM foo;&lt;/code&gt;
쿼리만 올바릅니다.&lt;/p&gt;
&lt;!-- tooltip end --&gt;&lt;p&gt;&lt;small&gt;Inspection ID: SqlSignatureInspection&lt;/small&gt;&lt;/p&gt;&lt;/body&gt;
&lt;/html&gt;</inspection><inspection shortName="SqlUnusedCteInspection" defaultSeverity="WARNING" displayName="사용되지 않는 공통 테이블 식" enabled="true" language="SQL" pluginId="com.intellij.database" pluginVersion="252.26199.162" isGlobalTool="false">&lt;html&gt;
&lt;body&gt;
쿼리 내 사용되지 않은 공통 테이블 표현식(CTE)을 보고합니다.
&lt;p&gt;예시(PostgreSQL):&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;CREATE TABLE foo(a INT);

WITH a AS (SELECT 1 AS x FROM foo)
SELECT 1 + 2 FROM foo;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;WITH를 사용하여 &lt;code&gt;a&lt;/code&gt;라는 이름이 임시로 지정된 결과 집합을 생성합니다. 이 결과 집합은 공통 테이블식(CTE)이라고도 불립니다. 하지만 나중에 코드에서 이 CTE를 사용하지 않습니다. 사용되지 않은 CTE는 회색으로 표시됩니다.&lt;/p&gt;
&lt;!-- tooltip end --&gt;&lt;p&gt;&lt;small&gt;Inspection ID: SqlUnusedCteInspection&lt;/small&gt;&lt;/p&gt;&lt;/body&gt;
&lt;/html&gt;</inspection><inspection shortName="SqlNoDataSourceInspection" defaultSeverity="WARNING" displayName="구성된 데이터 소스가 없습니다" enabled="true" language="SQL" pluginId="com.intellij.database" pluginVersion="252.26199.162" isGlobalTool="false">&lt;html&gt;
&lt;body&gt;
&lt;b&gt;Database&lt;/b&gt; 도구 창(&lt;b&gt;뷰 | 도구 창 | 데이터베이스&lt;/b&gt;) 내 데이터 소스의 부재를 보고합니다.
&lt;!-- tooltip end --&gt;&lt;p&gt;&lt;small&gt;Inspection ID: SqlNoDataSourceInspection&lt;/small&gt;&lt;/p&gt;&lt;/body&gt;
&lt;/html&gt;</inspection><inspection shortName="SqlDerivedTableAliasInspection" defaultSeverity="WARNING" displayName="각 파생 테이블에는 별칭이 있어야 합니다" enabled="true" language="SQL" pluginId="com.intellij.database" pluginVersion="252.26199.162" isGlobalTool="false">&lt;html&gt;
&lt;body&gt;
별칭이 없는 파생 테이블을 보고합니다.
&lt;p&gt;예시(MySQL):&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;CREATE TABLE table1 (id INT, name VARCHAR(20), cats FLOAT);
CREATE TABLE table2 (id INT, age INTEGER);

SELECT id AS ID, name, cats, age
FROM (SELECT table1.id, name, cats, age
FROM table1
JOIN table2 ON table1.id = table2.id);&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;a href="https://dev.mysql.com/doc/refman/8.0/en/derived-tables.html"&gt;dev.mysql.com의 파생 테이블&lt;/a&gt;에 따르면 별칭은 필수입니다. &lt;b&gt;별칭 삽입&lt;/b&gt; 빠른 수정을 사용하여 별칭을 추가할 수 있습니다.&lt;/p&gt;
&lt;p&gt;빠른 수정을 적용한 후:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;SELECT id AS ID, name, cats, age
FROM (SELECT table1.id, name, cats, age
FROM table1
JOIN table2 ON table1.id = table2.id);&lt;/code&gt;&lt;/pre&gt;
&lt;!-- tooltip end --&gt;&lt;p&gt;&lt;small&gt;Inspection ID: SqlDerivedTableAliasInspection&lt;/small&gt;&lt;/p&gt;&lt;/body&gt;
&lt;/html&gt;</inspection><inspection shortName="SqlUnicodeStringLiteralInspection" defaultSeverity="WARNING" displayName="SQL 내 유니코드 사용" enabled="true" language="SQL" pluginId="com.intellij.database" pluginVersion="252.26199.162" isGlobalTool="false">&lt;html&gt;
&lt;body&gt;
&lt;code&gt;N&lt;/code&gt; 접두사 없이 내셔널 문자를 사용하는 문자열 리터럴을 보고합니다.
&lt;p&gt;N 접두사가 없으면 문자열은 데이터베이스의 디폴트 코드 페이지로 변환됩니다. 이 디폴트 코드 페이지는 특정 문자를 인식하지 못할 수 있습니다. 더 자세한 내용은 &lt;a href="https://docs.microsoft.com/en-us/sql/t-sql/data-types/nchar-and-nvarchar-transact-sql" target="_blank"&gt;docs.microsoft.com에서 nchar 및 nvarchar(Transact-SQL)&lt;/a&gt;를 참고하세요.&lt;/p&gt;
&lt;p&gt;예시(Microsoft SQL 서버):&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;SELECT 'abcde' AS a;
SELECT N'abcde' AS b;
SELECT 'абвгд' AS c;
SELECT N'абвгд' AS d;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;code&gt;SELECT 'абвгд' AS c;&lt;/code&gt;에는 &lt;code&gt;N&lt;/code&gt; 접두사가 없기 때문에 &lt;code&gt;'абвгд'&lt;/code&gt; 부분이 강조 표시됩니다.&lt;/p&gt;
&lt;!-- tooltip end --&gt;&lt;p&gt;&lt;small&gt;Inspection ID: SqlUnicodeStringLiteralInspection&lt;/small&gt;&lt;/p&gt;&lt;/body&gt;
&lt;/html&gt;</inspection><inspection shortName="SqlTriggerTransitionInspection" defaultSeverity="WARNING" displayName="트리거 내 의심스러운 코드" enabled="true" language="SQL" pluginId="com.intellij.database" pluginVersion="252.26199.162" isGlobalTool="false">&lt;html&gt;
&lt;body&gt;
트리거 내 전이 테이블 변수의 잘못된 사용 위치를 보고합니다.
&lt;p&gt;예(HSQLDB):&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;CREATE TABLE foo(a INT);

CREATE TRIGGER trg
 AFTER DELETE ON foo
BEGIN
   SELECT * FROM NEW;
END;

CREATE TRIGGER trig AFTER INSERT ON foo
   REFERENCING OLD ROW AS newrow
   FOR EACH ROW WHEN (a &gt; 1)
   INSERT INTO foo VALUES (1)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;HSQLDB에서 DELETE 트리거는 OLD 상태로만 사용될 수 있는 반면 INSERT 트리거는 NEW 상태만 가질 수 있습니다. 따라서 이전 예에서 &lt;code&gt;SELECT * FROM NEW;&lt;/code&gt;의 NEW는 &lt;code&gt;REFERENCING OLD ROW AS newrow&lt;/code&gt;의 OLD와 함께 강조 표시됩니다.&lt;/p&gt;
&lt;!-- tooltip end --&gt;&lt;p&gt;&lt;small&gt;Inspection ID: SqlTriggerTransitionInspection&lt;/small&gt;&lt;/p&gt;&lt;/body&gt;
&lt;/html&gt;</inspection><inspection shortName="SqlDtInspection" defaultSeverity="WARNING" displayName="형식이 잘못된 날짜/시간 리터럴" enabled="true" language="SQLDateTime" pluginId="com.intellij.database" pluginVersion="252.26199.162" isGlobalTool="false">&lt;html&gt;
&lt;body&gt;
날짜 및 시간 리터럴의 오류를 보고합니다. 이 검사는 MySQL, Oracle, Db2, H2에서 사용할 수 있습니다.
&lt;p&gt;예시(MySQL):&lt;/p&gt;
&lt;pre&gt;&lt;code lang="sql"&gt;SELECT TIME '10 -12:13:14' FROM dual;
SELECT TIME ' 12 : 13 : 14 ' FROM dual;
SELECT TIME '12 13 14' FROM dual;
SELECT TIME '12-13-14' FROM dual;
SELECT TIME '12.13.14' FROM dual;
SELECT TIME '12:13:' FROM dual;
SELECT TIME '12:13' FROM dual;
SELECT TIME '12:' FROM dual;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;이 예시에서 날짜는 날짜 및 시간 리터럴에 관한 MySQL 표준을 무시합니다. 따라서 이는 강조 표시됩니다.
  날짜 및 시간 리터럴에 관한 더 자세한 내용은 &lt;a
    href="https://dev.mysql.com/doc/refman/8.0/en/date-and-time-literals.html"&gt;dev.mysql.com에서 날짜 및 시간 리터럴&lt;/a&gt;을 참고하세요.&lt;/p&gt;
&lt;p&gt;다음 날짜 및 시간 리터럴은 MySQL에서 유효합니다.&lt;/p&gt;
&lt;pre&gt;&lt;code lang="sql"&gt;SELECT TIME '12:13:14' FROM dual;
SELECT TIME '12:13:14.555' FROM dual;
SELECT TIME '12:13:14.' FROM dual;
SELECT TIME '-12:13:14' FROM dual;
SELECT TIME '10 12:13:14' FROM dual;
SELECT TIME '-10 12:13:14' FROM dual;&lt;/code&gt;&lt;/pre&gt;
&lt;!-- tooltip end --&gt;&lt;p&gt;&lt;small&gt;Inspection ID: SqlDtInspection&lt;/small&gt;&lt;/p&gt;&lt;/body&gt;
&lt;/html&gt;</inspection><inspection shortName="SqlUnreachableCodeInspection" defaultSeverity="WARNING" displayName="도달할 수 없는 코드" enabled="true" language="SQL" pluginId="com.intellij.database" pluginVersion="252.26199.162" isGlobalTool="false">&lt;html&gt;
&lt;body&gt;
SQL 루틴 내 도달할 수 없는 구문을 보고합니다.
&lt;p&gt;예시(Microsoft SQL 서버):&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;CREATE FUNCTION foo() RETURNS INT AS
BEGIN
    THROW;
    RETURN 1;
END;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Microsoft SQL Server에서 &lt;code&gt;THROW&lt;/code&gt; 구문은 예외를 발생시키며 실행을 TRY...CATCH 구문의 CATCH 블록으로 보냅니다. 그러므로 &lt;code&gt;RETURN 1;&lt;/code&gt; 부분은 절대 실행되지 않습니다.&lt;/p&gt;
&lt;!-- tooltip end --&gt;&lt;p&gt;&lt;small&gt;Inspection ID: SqlUnreachableCodeInspection&lt;/small&gt;&lt;/p&gt;&lt;/body&gt;
&lt;/html&gt;</inspection><inspection shortName="SqlMultipleLimitClausesInspection" defaultSeverity="WARNING" displayName="쿼리 내 여러 행 limiting/offset 절" enabled="true" language="SQL" pluginId="com.intellij.database" pluginVersion="252.26199.162" isGlobalTool="false">&lt;html&gt;
&lt;body&gt;
하나의 쿼리 안에서 행 수를 제한하는 절이 여러 개 사용된 경우를 보고합니다.

&lt;p&gt;예시(Microsoft SQL 서버):&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;create table foo(a int);
select top 1 * from foo order by a offset 10 rows fetch next 20 rows only;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;오직 1개의 레코드가 반환되어야 함을 지정하기 위해 SELECT TOP 절이 사용되었습니다. FETCH 절은 OFFSET 절이 처리된 후 반환할 행의 개수를 지정합니다. 하지만 SELECT TOP 제한 절이 이미 있으므로 FETCH 절은 불필요합니다.
&lt;/p&gt;
&lt;!-- tooltip end --&gt;&lt;p&gt;&lt;small&gt;Inspection ID: SqlMultipleLimitClausesInspection&lt;/small&gt;&lt;/p&gt;&lt;/body&gt;
&lt;/html&gt;</inspection><inspection shortName="SqlRedundantAliasInspection" defaultSeverity="WARNING" displayName="불필요한 별칭 표현식" enabled="true" language="SQL" pluginId="com.intellij.database" pluginVersion="252.26199.162" isGlobalTool="false">&lt;html&gt;
&lt;body&gt;
테이블의 열 이름과 중복되어 불필요할 수 있는 별칭 표현식을 보고합니다.
&lt;p&gt;예시(PostgreSQL):&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;CREATE TABLE foo(a INT, b INT);

SELECT * FROM foo foo(a, b);
SELECT * FROM foo foo(a);
SELECT * FROM foo foo(x);
SELECT * FROM foo foo(x, y);&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;처음 두 별칭은 &lt;code&gt;foo&lt;/code&gt; 테이블의 열 이름과 같은 이름을 사용합니다. 이 두 별칭은 열 이름과 동일하므로 불필요한 것으로 간주됩니다.&lt;/p&gt;
&lt;!-- tooltip end --&gt;&lt;p&gt;&lt;small&gt;Inspection ID: SqlRedundantAliasInspection&lt;/small&gt;&lt;/p&gt;&lt;/body&gt;
&lt;/html&gt;</inspection><inspection shortName="SqlTransactionStatementInTriggerInspection" defaultSeverity="WARNING" displayName="트리거 내 트랜잭션 관리 구문 사용" enabled="true" language="SQL" pluginId="com.intellij.database" pluginVersion="252.26199.162" isGlobalTool="false">&lt;html&gt;
&lt;body&gt;
트리거 본문 내 COMMIT 또는 ROLLBACK과 같은 트랜잭션 관리 구문의 사용 위치를 보고합니다.
&lt;p&gt;트리거 본문 내 COMMIT 또는 ROLLBACK 구문을 사용하면 트리거는 컴파일되지 않습니다.
  트랜잭션 도중에 트리거가 시작되기 때문에 실패가 발생합니다. 트리거가 시작될 때 현재 트랜잭션은 아직 완료되지 않은 상태입니다. COMMIT이 트랜잭션을 종료하면 두 구문(COMMIT 및 ROLLBACK) 모두 예외를 일으킵니다.
  트리거 내에서 실행되는 변경은 트리거를 시작한 소유 트랜잭션에 의해 커밋(또는 롤백)되어야 합니다.&lt;/p&gt;
&lt;p&gt;예시(Oracle):&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;CREATE TABLE employee_audit
(
    id          INT  NOT NULL,
    update_date DATE NOT NULL,
    old_name    VARCHAR2(100),
    new_name    VARCHAR2(100)
);

CREATE TABLE employees
(
    id   INT           NOT NULL,
    name VARCHAR2(100) NOT NULL
);

CREATE OR REPLACE TRIGGER trig_commit
    AFTER UPDATE OF name
    ON employees
    FOR EACH ROW
BEGIN
    INSERT INTO employee_audit VALUES (:old.id, SYSDATE, :old.name, :new.name);
    COMMIT;
END;

CREATE OR REPLACE TRIGGER trig_rollback
    AFTER UPDATE OF name
    ON employees
    FOR EACH ROW
BEGIN
    INSERT INTO employee_audit VALUES (:old.id, SYSDATE, :old.name, :new.name);
    ROLLBACK;
END;&lt;/code&gt;&lt;/pre&gt;
&lt;!-- tooltip end --&gt;&lt;p&gt;&lt;small&gt;Inspection ID: SqlTransactionStatementInTriggerInspection&lt;/small&gt;&lt;/p&gt;&lt;/body&gt;
&lt;/html&gt;</inspection><inspection shortName="SqlCaseVsIfInspection" defaultSeverity="WARNING" displayName="조건 함수 대신 CASE 사용 및 그 반대" enabled="true" language="SQL" pluginId="com.intellij.database" pluginVersion="252.26199.162" isGlobalTool="false">&lt;html&gt;
&lt;body&gt;
CASE 및 IF를 서로 교체할 수 있는 경우를 보고합니다.
&lt;p&gt;예시(MySQL):&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;SELECT CASE
WHEN C1 IS NULL THEN 1
ELSE 0
END
FROM dual;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;코드를 간결하게 유지하기 위해 CASE 구조를 IF로 교체할 수 있습니다. &lt;b&gt;'IF' 호출로 바꾸기&lt;/b&gt; 인텐션 액션을 적용하여 실행할 수 있습니다. 예시 코드는 다음과 같습니다:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;SELECT IF(C1 IS NULL, 1, 0)
FROM dual;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;IF를 CASE로 되돌리려면 IF를 클릭하고 &lt;b&gt;CASE 식으로 바꾸기&lt;/b&gt; 인텐션 액션을 적용하세요.&lt;/p&gt;
&lt;!-- tooltip end --&gt;&lt;p&gt;&lt;small&gt;Inspection ID: SqlCaseVsIfInspection&lt;/small&gt;&lt;/p&gt;&lt;/body&gt;
&lt;/html&gt;</inspection><inspection shortName="SqlRedundantLimitInspection" defaultSeverity="WARNING" displayName="쿼리 내 불필요한 행 제한" enabled="true" language="SQL" pluginId="com.intellij.database" pluginVersion="252.26199.162" isGlobalTool="false">&lt;html&gt;
&lt;body&gt;
쿼리 내에서 FETCH나 LIMIT과 같은 행 수를 제한하는 불필요한 절을 보고합니다.
&lt;p&gt;예시(PostgreSQL):&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;CREATE TABLE foo(a INT);

SELECT * FROM foo WHERE EXISTS(SELECT * FROM foo LIMIT 2);
SELECT * FROM foo WHERE EXISTS(SELECT * FROM foo FETCH FIRST 2 ROWS ONLY);&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;이 경고를 해결하려면 제한하는 절에 OFFSET을 추가할 수 있습니다. OFFSET이 없는 경우 LIMIT은 EXISTS의 연산 결과에 영향을 주지 않기 때문에 불필요합니다. OFFSET이 있는 경우 첫 번째 &lt;code&gt;N&lt;/code&gt; 행을 건너뛰므로 출력에 영향을 미칩니다.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;SELECT * FROM foo WHERE EXISTS(SELECT * FROM foo OFFSET 1 ROW LIMIT 2);
SELECT * FROM foo WHERE EXISTS(SELECT * FROM foo OFFSET 1 ROW FETCH FIRST 2 ROWS ONLY);&lt;/code&gt;&lt;/pre&gt;
&lt;!-- tooltip end --&gt;&lt;p&gt;&lt;small&gt;Inspection ID: SqlRedundantLimitInspection&lt;/small&gt;&lt;/p&gt;&lt;/body&gt;
&lt;/html&gt;</inspection><inspection shortName="SqlShadowingAliasInspection" defaultSeverity="WARNING" displayName="별칭에 의해 가려진 열" enabled="true" language="SQL" pluginId="com.intellij.database" pluginVersion="252.26199.162" isGlobalTool="false">&lt;html&gt;
&lt;body&gt;
FROM 절의 열 이름과 일치하는 이름을 사용하는 SELECT 별칭을 보고합니다.
&lt;p&gt;예시(MySQL):&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;CREATE TABLE foo (a INT, b INT, c INT);
SELECT a b, c FROM foo;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;code&gt;a&lt;/code&gt; 열은 &lt;code&gt;b&lt;/code&gt; 별칭을 사용하지만 &lt;code&gt;b&lt;/code&gt; 이름은 &lt;code&gt;foo&lt;/code&gt; 테이블의 열에서도 사용됩니다.&lt;/p&gt;
&lt;!-- tooltip end --&gt;&lt;p&gt;&lt;small&gt;Inspection ID: SqlShadowingAliasInspection&lt;/small&gt;&lt;/p&gt;&lt;/body&gt;
&lt;/html&gt;</inspection><inspection shortName="SqlMissingReturnInspection" defaultSeverity="ERROR" displayName="return 문 누락" enabled="true" language="SQL" pluginId="com.intellij.database" pluginVersion="252.26199.162" isGlobalTool="false">&lt;html&gt;
&lt;body&gt;
RETURN 문이 없는 함수를 보고합니다.

&lt;p&gt;예시(Oracle):&lt;/p&gt;

&lt;pre&gt;
&lt;code&gt;CREATE FUNCTION foo RETURN int AS
BEGIN
END;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;code&gt;foo&lt;/code&gt; 함수는 정수 값을 반환해야 하지만 함수 본문은 아무 것도 반환하지 않습니다. 이 오류를 수정하려면 RETURN 문을 추가하세요(예: &lt;code&gt;return 1;&lt;/code&gt;).&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;CREATE FUNCTION foo RETURN int AS
BEGIN
 RETURN 1;
END;&lt;/code&gt;&lt;/pre&gt;
&lt;!-- tooltip end --&gt;&lt;p&gt;&lt;small&gt;Inspection ID: SqlMissingReturnInspection&lt;/small&gt;&lt;/p&gt;&lt;/body&gt;
&lt;/html&gt;</inspection><inspection shortName="SqlCallNotationInspection" defaultSeverity="ERROR" displayName="이름 지정된 인수 및 위치 인수 사용" enabled="true" language="SQL" pluginId="com.intellij.database" pluginVersion="252.26199.162" isGlobalTool="false">&lt;html&gt;
&lt;body&gt;
위치 인수가 명명된 인수 뒤에 오는 호출을 보고합니다. PostgreSQL, Oracle, Db2에서 작동합니다.
&lt;p&gt;예(PostgreSQL 내):&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;CREATE FUNCTION foo(a int, b int, c int) RETURNS int
    LANGUAGE plpgsql AS
$$
BEGIN
    RETURN a + b + c;
END
$$;
SELECT foo(a =&gt; 1, b =&gt; 2, c =&gt; 3);
  -- '3'이 명명된 인수 뒤에 옴
SELECT foo(1, b =&gt; 2, 3);
  -- '1' 및 '3'이 명명된 인수 뒤에 옴 
SELECT foo(b =&gt; 2, 1, 3);&lt;/code&gt;&lt;/pre&gt;
&lt;!-- tooltip end --&gt;&lt;p&gt;&lt;small&gt;Inspection ID: SqlCallNotationInspection&lt;/small&gt;&lt;/p&gt;&lt;/body&gt;
&lt;/html&gt;</inspection><inspection shortName="SqlRedundantElseNullInspection" defaultSeverity="WARNING" displayName="불필요한 ELSE NULL 절" enabled="true" language="SQL" pluginId="com.intellij.database" pluginVersion="252.26199.162" isGlobalTool="false">&lt;html&gt;
&lt;body&gt;
불필요한 ELSE NULL 절을 보고합니다.
&lt;p&gt;예시(MySQL):&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;SELECT CASE WHEN 2 &gt; 1 THEN 'OK' ELSE NULL END AS alias FROM foo;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;code&gt;ELSE NULL&lt;/code&gt; 부분은 실행되지 않으므로 생략됩니다.&lt;/p&gt;
&lt;!-- tooltip end --&gt;&lt;p&gt;&lt;small&gt;Inspection ID: SqlRedundantElseNullInspection&lt;/small&gt;&lt;/p&gt;&lt;/body&gt;
&lt;/html&gt;</inspection><inspection shortName="SqlMissingColumnAliasesInspection" defaultSeverity="WARNING" displayName="열 별칭 누락" enabled="false" language="SQL" pluginId="com.intellij.database" pluginVersion="252.26199.162" isGlobalTool="false">&lt;html&gt;
&lt;body&gt;
출력 표현식(예: SELECT 구문 내)에 명시적 별칭이 없는 쿼리를 보고합니다.
&lt;p&gt;예시(PostgreSQL):&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;CREATE TABLE foo(a INT, b INT);

SELECT 1, a + 1 AS A2, MAX(b) AS M
FROM foo;&lt;/code&gt;&lt;/pre&gt;
&lt;!-- tooltip end --&gt;&lt;p&gt;&lt;small&gt;Inspection ID: SqlMissingColumnAliasesInspection&lt;/small&gt;&lt;/p&gt;&lt;/body&gt;
&lt;/html&gt;</inspection><inspection shortName="SqlAutoIncrementDuplicateInspection" defaultSeverity="WARNING" displayName="자동 증분 중복" enabled="true" language="SQL" pluginId="com.intellij.database" pluginVersion="252.26199.162" isGlobalTool="false">&lt;html&gt;
&lt;body&gt;
값이 자동으로 증가하는 두 열을 포함하는 테이블을 보고합니다. MySQL, Microsoft SQL Server 및 Db2 파생 언어에서 테이블은 값 자동 증가 옵션이 추가된 필드를 하나만 가질 수 있으며 이 필드는 키여야 합니다.
&lt;p&gt;예시(MySQL):&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;CREATE TABLE my_table
(
    id INT AUTO_INCREMENT,
    c2 INT AUTO_INCREMENT,
);&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;code&gt;c1&lt;/code&gt;에 이 제약이 이미 추가되어 있으므로 &lt;code&gt;c2&lt;/code&gt;에 대한 AUTO_INCREMENT 제약이 강조 표시됩니다. 이 경고를 해결하려면 &lt;code&gt;id&lt;/code&gt;를 기본 키로 설정하고 &lt;code&gt;c2&lt;/code&gt;에 대한 AUTO_INCREMENT를 삭제하세요.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;CREATE TABLE my_table
(
    id INT AUTO_INCREMENT PRIMARY KEY,
    c2 INT,
);&lt;/code&gt;&lt;/pre&gt;
&lt;!-- tooltip end --&gt;&lt;p&gt;&lt;small&gt;Inspection ID: SqlAutoIncrementDuplicateInspection&lt;/small&gt;&lt;/p&gt;&lt;/body&gt;
&lt;/html&gt;
</inspection><inspection shortName="SqlSideEffectsInspection" defaultSeverity="WARNING" displayName="부수 효과가 있는 구문" enabled="true" language="SQL" pluginId="com.intellij.database" pluginVersion="252.26199.162" isGlobalTool="false">&lt;html&gt;
&lt;body&gt;
읽기 전용 연결 중에 데이터베이스를 변경할 수 있는 구문을 보고합니다. &lt;p&gt;연결에 대한 읽기 전용 모드를 활성화하려면 &lt;b&gt;데이터베이스&lt;/b&gt; 도구 창(&lt;b&gt;뷰 | 도구 창 | 데이터베이스&lt;/b&gt;)에서 데이터 소스를 오른쪽 클릭하고 &lt;b&gt;프로퍼티&lt;/b&gt;를 선택하세요.
  &lt;b&gt;드라이버 및 데이터 소스 및 드라이버&lt;/b&gt; 대화상자에서 &lt;b&gt;옵션&lt;/b&gt; 탭을 클릭하고 &lt;b&gt;읽기 전용&lt;/b&gt; 체크박스를 선택하세요.&lt;/p&gt;
&lt;p&gt;예시(MySQL):&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;CREATE TABLE foo(a INT);
INSERT INTO foo VALUES (1);&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;code&gt;CREATE TABLE&lt;/code&gt; 및 &lt;code&gt;INSERT INTO&lt;/code&gt; 구문은 데이타베이스의 내용을 변경하기 때문에, 읽기 전용 연결 모드에서는 강조 표시됩니다.&lt;/p&gt;
&lt;!-- tooltip end --&gt;&lt;p&gt;&lt;small&gt;Inspection ID: SqlSideEffectsInspection&lt;/small&gt;&lt;/p&gt;&lt;/body&gt;
&lt;/html&gt;</inspection><inspection shortName="SqlInsertNullIntoNotNullInspection" defaultSeverity="WARNING" displayName="NOT NULL 열에 NULL 삽입 " enabled="true" language="SQL" pluginId="com.intellij.database" pluginVersion="252.26199.162" isGlobalTool="false">&lt;html&gt;
&lt;body&gt;
NOT NULL 값 이외에는 받지 않는 열에 NULL 값을 삽입하는 경우를 보고합니다.
&lt;p&gt;예시(Microsoft SQL 서버):&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;CREATE TABLE br2 (
id INT NOT NULL,
col1 NVARCHAR (20) NOT NULL,
col2 NVARCHAR (20) NOT NULL,
);
--
INSERT INTO br2 (id, col1, col2)
VALUES (1, NULL, NULL);&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;code&gt;col1&lt;/code&gt; 및 &lt;code&gt;col2&lt;/code&gt;는 NOT NULL로 정의되어 있기 때문에 이 열에는 NULL 값을 삽입할 수 없습니다. 스크립트를 그대로 실행하면 오류가 발생합니다. 이 코드를 수정하려면 VALUES 부분의 NULL을 어떤 값으로 바꾸세요(예: &lt;code&gt;42&lt;/code&gt; 및 &lt;code&gt;'bird'&lt;/code&gt;).&lt;/p&gt;
&lt;pre&gt;INSERT INTO br2 (id, col1, col2)
VALUES (1, 42, 'bird');&lt;/pre&gt;
&lt;!-- tooltip end --&gt;&lt;p&gt;&lt;small&gt;Inspection ID: SqlInsertNullIntoNotNullInspection&lt;/small&gt;&lt;/p&gt;&lt;/body&gt;
&lt;/html&gt;</inspection><inspection shortName="SqlShouldBeInGroupByInspection" defaultSeverity="WARNING" displayName="열은 절 GROUP BY 절에 포함되어야 합니다" enabled="true" language="SQL" pluginId="com.intellij.database" pluginVersion="252.26199.162" isGlobalTool="false">&lt;html&gt;
&lt;body&gt;
GROUP BY 절에서 또는 집계 함수 호출 내에서 사용되지 않는 열을 보고합니다.
&lt;p&gt;예시(Microsoft SQL 서버):&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;CREATE TABLE t1 (a INT, b INT);
SELECT a, b FROM t1 GROUP BY a;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;SELECT 쿼리를 실행하면 Microsoft SQL Server는 &lt;code&gt;b&lt;/code&gt; 열이 GROUP BY에서 사용되거나 집계 함수 내에서 사용될 것으로 기대하기 때문에 오류가 발생합니다. 다음 두 예시는 오류를 수정합니다.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;SELECT a, b FROM t1 GROUP BY a, b;
SELECT a, max(b) max_b FROM t1 GROUP BY a;&lt;/code&gt;&lt;/pre&gt;
&lt;!-- tooltip end --&gt;&lt;p&gt;&lt;small&gt;Inspection ID: SqlShouldBeInGroupByInspection&lt;/small&gt;&lt;/p&gt;&lt;/body&gt;
&lt;/html&gt;</inspection><inspection shortName="SqlDropIndexedColumnInspection" defaultSeverity="WARNING" displayName="색인은 열에 종속됨" enabled="true" language="SQL" pluginId="com.intellij.database" pluginVersion="252.26199.162" isGlobalTool="false">&lt;html&gt;
&lt;body&gt;
색인화된 테이블에서 열을 삭제하려고 하는 경우를 보고합니다. 이 검사는 Microsoft SQL Server 및 Sybase ASE에서 사용할 수 있습니다.
&lt;p&gt;예시(Microsoft SQL 서버):&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;CREATE TABLE test_index
(
col  INT NOT NULL,
col2 INT NOT NULL,
col3 INT NOT NULL UNIQUE,
col4 VARCHAR(200)
);

CREATE UNIQUE INDEX aaaa ON test_index (col, col2);

ALTER TABLE test_index
DROP COLUMN col;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;code&gt;col&lt;/code&gt; 열은 색인화된 테이블에 있기 때문에 삭제할 수 없습니다. 열을 삭제하려면 &lt;code&gt;aaaa&lt;/code&gt; 색인을 먼저 삭제해야 합니다(예: DROP INDEX aaaa).&lt;/p&gt;
&lt;!-- tooltip end --&gt;&lt;p&gt;&lt;small&gt;Inspection ID: SqlDropIndexedColumnInspection&lt;/small&gt;&lt;/p&gt;&lt;/body&gt;
&lt;/html&gt;
</inspection><inspection shortName="SqlMisleadingReferenceInspection" defaultSeverity="WARNING" displayName="오해의 여지가 있는 참조" enabled="true" language="SQL" pluginId="com.intellij.database" pluginVersion="252.26199.162" isGlobalTool="false">&lt;html&gt;
&lt;body&gt;
애매한 SQL 코드 참조를 보고합니다.
&lt;p&gt;예를 들어, 이름이 테이블 열과 루틴 매개변수를 둘 다 참조하는 경우를 말합니다. 그러한 코드를 실행하면 반직관적인 해결 로직으로 인해 오류 또는 예기치 않은 결과를 초래할 수 있습니다. 보통 더 좁은(로컬) 스코프를 가진 이름이 우선순위가 더 높습니다.&lt;/p&gt;
    &lt;p&gt;예시(PostgreSQL):&lt;/p&gt;
    &lt;pre&gt;&lt;code&gt;CREATE TABLE foo
(
    id   INT,
    name VARCHAR(5)
);
CREATE FUNCTION func(name VARCHAR(5)) RETURNS INT AS
$$
DECLARE
    b INT;
BEGIN
      -- 'name'은 열 이름 및 매개변수로 사용되므로 모호함
    SELECT COUNT(*) INTO b FROM foo t WHERE t.name = name;
    RETURN b;
END;
$$ LANGUAGE plpgsql;&lt;/code&gt;&lt;/pre&gt;
  &lt;p&gt;PostgreSQL에서는 &lt;code&gt;#variable_conflict&lt;/code&gt; 지시문을 사용하여 올바른 참조를 명시적으로 지정할 수 있습니다. 예를 들어,
&lt;code&gt;#variable_conflict use_column&lt;/code&gt;를 사용해 열의 이름을 참조하거나 &lt;code&gt;#variable_conflict use_variable&lt;/code&gt;를 사용해 매개변수를 참조하세요.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;CREATE TABLE foo
(
    id   INT,
    name VARCHAR(5)
);
CREATE FUNCTION func(name VARCHAR(5)) RETURNS INT AS
$$
    #variable_conflict use_column
DECLARE
    b INT;
BEGIN
    SELECT COUNT(*) INTO b FROM foo t WHERE t.name = name;
    RETURN b;
END;
$$ LANGUAGE plpgsql;&lt;/code&gt;&lt;/pre&gt;
&lt;!-- tooltip end --&gt;&lt;p&gt;&lt;small&gt;Inspection ID: SqlMisleadingReferenceInspection&lt;/small&gt;&lt;/p&gt;&lt;/body&gt;
&lt;/html&gt;
</inspection><inspection shortName="SqlUnusedVariableInspection" defaultSeverity="WARNING" displayName="사용되지 않는 변수" enabled="true" language="SQL" pluginId="com.intellij.database" pluginVersion="252.26199.162" isGlobalTool="false">&lt;html&gt;
&lt;body&gt;
사용되지 않은 인수, 변수, 또는 매개변수를 보고합니다.
&lt;p&gt;예시(PostgreSQL):&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;CREATE FUNCTION foo(PARAMUSED INT, PARAMUNUSED INT) RETURNS INT AS
$$
BEGIN
    RETURN PARAMUSED;
END
$$ LANGUAGE plpgsql;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;code&gt;PARAMUNUSED&lt;/code&gt; 매개변수는 함수에서 사용되지 않으므로 삭제될 수 있습니다.&lt;/p&gt;
&lt;!-- tooltip end --&gt;&lt;p&gt;&lt;small&gt;Inspection ID: SqlUnusedVariableInspection&lt;/small&gt;&lt;/p&gt;&lt;/body&gt;
&lt;/html&gt;</inspection><inspection shortName="SqlGotoInspection" defaultSeverity="WARNING" displayName="GOTO 문 사용 위치" enabled="false" language="SQL" pluginId="com.intellij.database" pluginVersion="252.26199.162" isGlobalTool="false">&lt;html&gt;
&lt;body&gt;
역방향 GOTO 문 및 루프를 종료하기 위해 사용딘 GOTO 문의 사용 위치를 보고합니다.
&lt;p&gt;GOTO 문의 광범위한 사용은 일반적으로 권장되지 않습니다. 자세한 내용은 &lt;a href="https://www.ibm.com/docs/no/db2/11.5?topic=procedures-goto-statement-in-sql"&gt;ibm.com에서 SQL 프로시저의 GOTO 문&lt;/a&gt;을 참고하세요.&lt;/p&gt;

&lt;p&gt;GOTO를 사용해 이전 구문으로 돌아가는 대신 루프를 사용해 보세요.&lt;/p&gt;
&lt;p&gt;GOTO를 사용하여 WHILE 루프를 종료하는 대신 다른 흐름 제어 구문(예:RETURN 또는 BREAK)을 사용해 보세요.&lt;/p&gt;
&lt;p&gt;예시(Oracle):&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;CREATE PROCEDURE test(n INT) AS
DECLARE
    x INT;
BEGIN
    x := 0;
    GOTO a;
    &amp;lt;&amp;lt;a&amp;gt;&amp;gt; x := 1;
    IF (n = 0) THEN
        GOTO a;
    END IF;
    WHILE TRUE
        LOOP
            GOTO b;
        END LOOP;
    &amp;lt;&amp;lt;b&amp;gt;&amp;gt; x := 3;
END;&lt;/code&gt;&lt;/pre&gt;
&lt;!-- tooltip end --&gt;&lt;p&gt;&lt;small&gt;Inspection ID: SqlGotoInspection&lt;/small&gt;&lt;/p&gt;&lt;/body&gt;
&lt;/html&gt;</inspection><inspection shortName="SqlDuplicateColumnInspection" defaultSeverity="WARNING" displayName="SELECT 내 열 이름 중복" enabled="true" language="SQL" pluginId="com.intellij.database" pluginVersion="252.26199.162" isGlobalTool="false">&lt;html&gt;
&lt;body&gt;
SELECT 목록 내 중복된 열 별칭 이름을 보고합니다.
&lt;p&gt;예(Sybase ASE):&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;CREATE TABLE t1 (a TEXT, b INT, c INT);

SELECT a AS x, b AS x FROM t1;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;code&gt;x&lt;/code&gt; 별칭 이름이 &lt;code&gt;a&lt;/code&gt; 및 &lt;code&gt;b&lt;/code&gt; 열에서 사용되었습니다. Sybase ASE에서는 여러 열에 대해 같은 별칭 이름을 사용할 수 없기 때문에 이러한 대입은 오류로 강조 표시됩니다.&lt;/p&gt;
&lt;!-- tooltip end --&gt;&lt;p&gt;&lt;small&gt;Inspection ID: SqlDuplicateColumnInspection&lt;/small&gt;&lt;/p&gt;&lt;/body&gt;
&lt;/html&gt;</inspection><inspection shortName="SqlConstantExpressionInspection" defaultSeverity="WARNING" displayName="상수 표현식" enabled="true" language="SQL" pluginId="com.intellij.database" pluginVersion="252.26199.162" isGlobalTool="false">&lt;html&gt;
&lt;body&gt;
항상 true, false 또는 null인 조건 및 표현식을 보고합니다.
&lt;p&gt;예시(MySQL):&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;CREATE TABLE t1 (a TEXT, b INT, c BOOLEAN);
SELECT a FROM t1 WHERE 'Cat' = 'Cat';
SELECT a FROM t1 WHERE 'Cat' = null;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;code&gt;'Cat' = 'Cat'&lt;/code&gt;은 항상 true이므로 보고됩니다.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;'Cat' = null&lt;/code&gt;은 항상 null이므로 보고됩니다.&lt;/p&gt;
&lt;!-- tooltip end --&gt;&lt;p&gt;&lt;small&gt;Inspection ID: SqlConstantExpressionInspection&lt;/small&gt;&lt;/p&gt;&lt;/body&gt;
&lt;/html&gt;</inspection><inspection shortName="SqlStringLengthExceededInspection" defaultSeverity="WARNING" displayName="묵시적 문자열 버림" enabled="true" language="SQL" pluginId="com.intellij.database" pluginVersion="252.26199.162" isGlobalTool="false">&lt;html&gt;
&lt;body&gt;
정의된 문자 길이를 초과하는 변수를 보고합니다.
&lt;p&gt;예시(Microsoft SQL 서버):&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;CREATE PROCEDURE test() AS
BEGIN
DECLARE myVarOk VARCHAR(5) = 'abcde';
DECLARE myVarExceeded VARCHAR(5) = 'abcde12345';

SET myVarOk = 'xyz';
SET myVarExceeded = '123456789';
END;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;code&gt;myVarExceeded&lt;/code&gt; 변수는 &lt;code&gt;VARCHAR(5)&lt;/code&gt;로 정의되어 있으나 할당된 두 값(&lt;code&gt;'abcde12345'&lt;/code&gt; 및 &lt;code&gt;'123456789'&lt;/code&gt;)은 이 제한을 초과합니다. 할당된 값을 자르거나 정의된 길이를 늘릴 수 있습니다.
  길이를 늘리려면 &lt;b&gt;타입 길이 증가&lt;/b&gt; 빠른 수정을 사용하세요.
&lt;/p&gt;
&lt;p&gt;빠른 수정을 적용한 후:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;CREATE PROCEDURE test() AS
BEGIN
DECLARE myVarOk VARCHAR(5) = 'abcde';
DECLARE myVarExceeded VARCHAR(10) = 'abcde12345';

SET myVarOk = 'xyz';
SET myVarExceeded = '123456789';
END;&lt;/code&gt;&lt;/pre&gt;
&lt;!-- tooltip end --&gt;&lt;p&gt;&lt;small&gt;Inspection ID: SqlStringLengthExceededInspection&lt;/small&gt;&lt;/p&gt;&lt;/body&gt;
&lt;/html&gt;</inspection><inspection shortName="SqlAggregatesInspection" defaultSeverity="WARNING" displayName="집계 관련 문제" enabled="true" language="SQL" pluginId="com.intellij.database" pluginVersion="252.26199.162" isGlobalTool="false">&lt;html&gt;
&lt;body&gt;
SQL 집계 함수의 유효하지 않은 사용 위치를 보고합니다.
&lt;p&gt;다음 상황이 포함됩니다:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;p&gt;HAVING 및 ORDER BY 절에서 사용되었으나 GROUP BY에서 누락된 열.&lt;/p&gt;
    &lt;pre&gt;&lt;code&gt;CREATE TABLE foo(id INT PRIMARY KEY, a INT, b INT);
SELECT a, MAX(b) FROM foo GROUP BY a HAVING b &gt; 0;
SELECT * FROM foo GROUP BY a ORDER BY b;&lt;/code&gt;&lt;/pre&gt;
    &lt;p&gt;그룹화가 기본 키를 기준으로 이루어진 경우에는 이 규칙이 적용되지 않습니다.&lt;/p&gt;
    &lt;pre&gt;&lt;code&gt;SELECT * FROM foo GROUP BY id ORDER BY b;&lt;/code&gt;&lt;/pre&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;p&gt;잘못된 컨텍스트에 사용된 집계 함수. 일반적으로 다음 컨텍스트에서 집계 함수를 사용할 수 있습니다: SELECT, HAVING 및 ORDER BY 섹션, 다른 파생 언어 전용 케이스 내 표현식 목록. 다음 쿼리를 실행하면 오류가 표시됩니다.&lt;/p&gt;
    &lt;pre&gt;&lt;code&gt;SELECT a FROM foo WHERE MAX(b) &gt; 0;
SELECT a FROM foo GROUP BY MAX(a);&lt;/code&gt;&lt;/pre&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;p&gt;중첩된 집계 함수 호출.&lt;/p&gt;
    &lt;pre&gt;&lt;code&gt;SELECT MAX(SUM(a)) FROM foo GROUP BY a;&lt;/code&gt;&lt;/pre&gt;
    &lt;p&gt;이 규칙은 분석 함수에 적용되지 않습니다. 다음 쿼리는 유효하며 올바릅니다.&lt;/p&gt;
    &lt;pre&gt;&lt;code&gt;SELECT MAX(SUM(a) OVER ()) FROM foo;&lt;/code&gt;&lt;/pre&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;p&gt;집계 함수가 없이 HAVING을 사용한 경우입니다. 이 경우, WHERE 섹션을 사용해 코드를 다시 작성해 보세요.&lt;/p&gt;
    &lt;pre&gt;&lt;code&gt;SELECT a, MAX(b) FROM foo GROUP BY a HAVING a &gt; 0;&lt;/code&gt;&lt;/pre&gt;
  &lt;/li&gt;
&lt;/ul&gt;
&lt;!-- tooltip end --&gt;&lt;p&gt;&lt;small&gt;Inspection ID: SqlAggregatesInspection&lt;/small&gt;&lt;/p&gt;&lt;/body&gt;
&lt;/html&gt;</inspection><inspection shortName="SqlIllegalCursorStateInspection" defaultSeverity="WARNING" displayName="잘못된 커서 상태" enabled="true" language="SQL" pluginId="com.intellij.database" pluginVersion="252.26199.162" isGlobalTool="false">&lt;html&gt;
&lt;body&gt;
SQL 루틴 내 잘못된 커서 상태를 보고합니다.
&lt;ul&gt;
  &lt;li&gt;루틴에 CLOSE 또는 FETCH 구문이 있지만 커서가 닫혀 있을 수 있습니다.&lt;/li&gt;
  &lt;li&gt;루틴에 OPEN 구문이 있지만 커서가 열려 있을 수 있습니다.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;예시(Microsoft SQL 서버):&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;CREATE TABLE t(col INT);

CREATE PROCEDURE foo() AS
BEGIN
DECLARE my_cursor CURSOR FOR SELECT * FROM t;
DECLARE a INT;
FETCH my_cursor INTO a;
CLOSE my_cursor;
END;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;a href="https://docs.microsoft.com/en-us/sql/t-sql/language-elements/close-transact-sql"&gt;docs.microsoft.com의 CLOSE(Transact-SQL)&lt;/a&gt;에 따르면, CLOSE는 열린 커서에 발생되어야 하며, 선언되어 있기만 하거나 이미 닫혀 있는 커서에는 허용되지 않습니다. 그러므로 경고를 해결하려면 커서를 열어야 합니다.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;CREATE PROCEDURE foo() AS
BEGIN
DECLARE my_cursor CURSOR FOR SELECT * FROM t;
DECLARE a INT;
OPEN my_cursor;
FETCH my_cursor INTO a;
CLOSE my_cursor;
END;&lt;/code&gt;&lt;/pre&gt;
&lt;!-- tooltip end --&gt;&lt;p&gt;&lt;small&gt;Inspection ID: SqlIllegalCursorStateInspection&lt;/small&gt;&lt;/p&gt;&lt;/body&gt;
&lt;/html&gt;</inspection><inspection shortName="SqlJoinWithoutOnInspection" defaultSeverity="WARNING" displayName="'delete' 문의 안전하지 않은 'join' 절" enabled="true" language="SQL" pluginId="com.intellij.database" pluginVersion="252.26199.162" isGlobalTool="false">&lt;html&gt;
&lt;body&gt;
데이터베이스 전체를 변경할 수 있는 구문에 대한 누락된 조건 검사를 보고합니다.
&lt;p&gt;예를 들어, DELETE 구문 내에서 ON 또는 WHERE이 없이 JOIN 절이 사용된 경우를 말합니다. JOIN 조건 검사가 없으면 
DELETE는 전체 테이블의 내용을 삭제합니다.&lt;/p&gt;
&lt;p&gt;예시(MySQL):&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;CREATE TABLE foo (a INT,b INT,c INT);
CREATE TABLE bar (a INT,b INT,c INT);

DELETE table1 FROM foo table1  INNER JOIN bar table2;&lt;/code&gt;&lt;/pre&gt;
&lt;!-- tooltip end --&gt;&lt;p&gt;&lt;small&gt;Inspection ID: SqlJoinWithoutOnInspection&lt;/small&gt;&lt;/p&gt;&lt;/body&gt;
&lt;/html&gt;
</inspection><inspection shortName="SqlInsertValuesInspection" defaultSeverity="WARNING" displayName="VALUES 절 카디널리티" enabled="true" language="SQL" pluginId="com.intellij.database" pluginVersion="252.26199.162" isGlobalTool="false">&lt;html&gt;
&lt;body&gt;
VALUES 내 매개변수 개수가 대상 테이블의 열 개수와 일치하지 않는 경우를 보고합니다.
&lt;p&gt;예시(MySQL):&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;CREATE TABLE foo(a INT, b INT, c INT);

INSERT INTO foo VALUES (1,2,3,4)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;code&gt;foo&lt;/code&gt; 테이블에는 세 개의 열이 있으나 INSERT INTO 문에서 네 개의 열을 전달합니다.&lt;/p&gt;
&lt;!-- tooltip end --&gt;&lt;p&gt;&lt;small&gt;Inspection ID: SqlInsertValuesInspection&lt;/small&gt;&lt;/p&gt;&lt;/body&gt;
&lt;/html&gt;</inspection><inspection shortName="SqlStorageInspection" defaultSeverity="WARNING" displayName="SQL 소스 수정 탐지" enabled="true" language="SQL" pluginId="com.intellij.database" pluginVersion="252.26199.162" isGlobalTool="false">&lt;html&gt;
&lt;body&gt;
데이터베이스 객체의 소스 코드가 변경된 경우를 보고합니다.
  &lt;p&gt;이 검사는 데이터베이스 또는 객체 내부 검사를 수행할 경우 촉발됩니다. 내부 검사는 객체의 소스 코드를 열거나 구문을 실행하거나 코드 리팩토링을 수행할 경우 실행됩니다.
  객체를 오른쪽 클릭하고 &lt;b&gt;새로고침&lt;/b&gt;을 선택하여 내부 검사를 실행할 수도 있습니다.&lt;/p&gt;

&lt;p&gt;이 검사는 다음 경우를 포함합니다:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;객체 소스 코드가 데이터베이스에서 변경되었으나 에디터 내 코드가 업데이트되지 않은 경우. PostgreSQL, Microsoft SQL Server, Oracle, Sybase ASE에서 작동합니다.&lt;/li&gt;
  &lt;li&gt;객체 소스 코드를 변경하고 데이터베이스를 내부 검사했으나 소스 코드가 이미 다른 사람에 의해 변경된 경우.&lt;/li&gt;
  &lt;li&gt;데이터베이스 내부 검사기가 IDE에서 업데이트되었으며 이전 내부 검사기 버전에서 누락된 새 객체 프로퍼티를 다운로드해야 하는 경우.&lt;/li&gt;
&lt;/ul&gt;

&lt;!-- tooltip end --&gt;&lt;p&gt;&lt;small&gt;Inspection ID: SqlStorageInspection&lt;/small&gt;&lt;/p&gt;&lt;/body&gt;
&lt;/html&gt;</inspection><inspection shortName="SqlResolveInspection" defaultSeverity="ERROR" displayName="해결되지 않는 참조" enabled="true" language="SQL" pluginId="com.intellij.database" pluginVersion="252.26199.162" isGlobalTool="false">&lt;html&gt;
&lt;body&gt;
해결되지 않은 SQL 참조를 보고합니다.
&lt;p&gt;예시(MySQL):&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;CREATE TABLE users(id INT, name VARCHAR(40));
CREATE TABLE admins(id INT, col1 INT);

SELECT users.id, admins.id FROM admins WHERE admins.id &gt; 1;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;FROM 절에 &lt;code&gt;users&lt;/code&gt; 테이블이 누락되어 있기 때문에 &lt;code&gt;users.id&lt;/code&gt; 열을 해결할 수 없습니다.&lt;/p&gt;
&lt;!-- tooltip end --&gt;&lt;p&gt;&lt;small&gt;Inspection ID: SqlResolveInspection&lt;/small&gt;&lt;/p&gt;&lt;/body&gt;
&lt;/html&gt;</inspection><inspection shortName="SqlNamedArgumentsInspection" defaultSeverity="WARNING" displayName="이름이 지정된 인수를 사용해야 함" enabled="false" language="SQL" pluginId="com.intellij.database" pluginVersion="252.26199.162" isGlobalTool="false">&lt;html&gt;
&lt;body&gt;
루틴 호출 시 이름 없이 사용되는 인수를 보고합니다. 디폴트로 이 검사는 비활성화되어 있습니다.
&lt;p&gt;명명된 매개변수와 명명되지 않은 매개변수의 차이에 관한 더 자세한 내용은 &lt;a
    href="https://docs.microsoft.com/en-us/sql/odbc/reference/develop-app/binding-parameters-by-name-named-parameters"&gt;docs.microsoft.com에서 이름으로 매개변수 바인딩(명명된 매개변수)&lt;/a&gt;를 참고하세요.&lt;/p&gt;
&lt;p&gt;예시(Microsoft SQL 서버):&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;CREATE FUNCTION foo(n INT, m INT) RETURNS INT AS
BEGIN
    RETURN n + m;
END;

CREATE PROCEDURE test AS
BEGIN
    foo n = 1, m = 2;

--- 다음 호출에 매개변수 이름이 누락되어 강조 표시됨
    foo 1, 2;
END;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;code&gt;foo 1, 2;&lt;/code&gt; 호출 내 매개변수 &lt;code&gt;1, 2&lt;/code&gt;는 이름이 없으므로 강조 표시됩니다.&lt;/p&gt;
&lt;!-- tooltip end --&gt;&lt;p&gt;&lt;small&gt;Inspection ID: SqlNamedArgumentsInspection&lt;/small&gt;&lt;/p&gt;&lt;/body&gt;
&lt;/html&gt;</inspection><inspection shortName="SqlInsertIntoGeneratedColumnInspection" defaultSeverity="WARNING" displayName="생성된 열로 삽입" enabled="true" language="SQL" pluginId="com.intellij.database" pluginVersion="252.26199.162" isGlobalTool="false">&lt;html&gt;
&lt;body&gt;
생선된 열에 값을 할당하는 INSERT 문을 보고합니다. 생성된 열은 읽을 수 있지만 해당 열의 값은 직접 쓸 수는 없습니다.
&lt;p&gt;예시(PostgreSQL):&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;CREATE TABLE foo
(
   col1 INT,
   col2 INT GENERATED ALWAYS AS (col1 + 1) STORED
);
INSERT INTO foo(col1, col2) VALUES (1, 2);&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;&lt;code&gt;2&lt;/code&gt;를 생성된 열인 &lt;code&gt;col2&lt;/code&gt; 열에 삽입할 수 없습니다.
  이 스크립트가 작동하려면 &lt;code&gt;2&lt;/code&gt;를 DEFAULT로 변경해야 합니다.&lt;/p&gt;
&lt;code&gt;INSERT INTO foo(col1, col2) VALUES (1, DEFAULT);&lt;/code&gt;
&lt;!-- tooltip end --&gt;&lt;p&gt;&lt;small&gt;Inspection ID: SqlInsertIntoGeneratedColumnInspection&lt;/small&gt;&lt;/p&gt;&lt;/body&gt;
&lt;/html&gt;</inspection><inspection shortName="SqlWithoutWhereInspection" defaultSeverity="WARNING" displayName="where 절 없는 구문 삭제 또는 업데이트" enabled="true" language="SQL" pluginId="com.intellij.database" pluginVersion="252.26199.162" isGlobalTool="false">&lt;html&gt;
&lt;body&gt;
WHERE 절이 없는 DELETE 또는 UPDATE 구문을 보고합니다.
  &lt;p&gt;WHERE 절이 없으면 DELETE는 테이블의 모든 데이터를 삭제하며 UPDATE는 모든 테이블 행의 값을 덮어씁니다.&lt;/p&gt;
&lt;p&gt;예시(MySQL):&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;CREATE TABLE t1 (a TEXT, b INT, c BOOLEAN);
update t1 set  a = 'Smith';
delete from t1;&lt;/code&gt;&lt;/pre&gt;
&lt;!-- tooltip end --&gt;&lt;p&gt;&lt;small&gt;Inspection ID: SqlWithoutWhereInspection&lt;/small&gt;&lt;/p&gt;&lt;/body&gt;
&lt;/html&gt;
</inspection><inspection shortName="SqlAmbiguousColumnInspection" defaultSeverity="WARNING" displayName="모호한 참조" enabled="true" language="SQL" pluginId="com.intellij.database" pluginVersion="252.26199.162" isGlobalTool="false">&lt;html&gt;
&lt;body&gt;
이름은 동일하나 다른 테이블에 속한 열을 보고합니다.
&lt;p&gt;예시(MySQL):&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;CREATE TABLE foo(id INT PRIMARY KEY);
CREATE TABLE bar(id INT PRIMARY KEY);

SELECT foo.id, bar.id FROM foo, bar WHERE id &gt; 0;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;code&gt;id&lt;/code&gt; 열이 &lt;code&gt;foo&lt;/code&gt; 테이블과 &lt;code&gt;bar&lt;/code&gt; 테이블에 나타납니다. 열 이름을 정규화하여 쿼리를 올바르게 고쳐야 합니다.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;SELECT foo.id, bar.id FROM foo, bar WHERE foo.id &gt; 0;&lt;/code&gt;&lt;/pre&gt;
&lt;!-- tooltip end --&gt;&lt;p&gt;&lt;small&gt;Inspection ID: SqlAmbiguousColumnInspection&lt;/small&gt;&lt;/p&gt;&lt;/body&gt;
&lt;/html&gt;</inspection><inspection shortName="SqlRedundantOrderingDirectionInspection" defaultSeverity="WARNING" displayName="불필요한 정렬 방향" enabled="true" language="SQL" pluginId="com.intellij.database" pluginVersion="252.26199.162" isGlobalTool="false">&lt;html&gt;
&lt;body&gt;
ORDER BY 절에서 ASC 및 DESC 등의 정렬 순서 지시가 불필요한 경우를 보고합니다.
&lt;p&gt;예시(MySQL):&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;CREATE TABLE foo(a INT, b INT, c INT);
SELECT * FROM foo ORDER BY a ASC, b DESC, c ASC;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;ORDER BY 키워드는 디폴트로 레코드를 오름차순으로 나열합니다. 그러므로 &lt;code&gt;a&lt;/code&gt; 및 &lt;code&gt;c&lt;/code&gt; 열의 &lt;code&gt;ASC&lt;/code&gt; 키워드는 불필요합니다.&lt;/p&gt;
&lt;!-- tooltip end --&gt;&lt;p&gt;&lt;small&gt;Inspection ID: SqlRedundantOrderingDirectionInspection&lt;/small&gt;&lt;/p&gt;&lt;/body&gt;
&lt;/html&gt;</inspection><inspection shortName="SqlTypeInspection" defaultSeverity="WARNING" displayName="타입 호환성" enabled="true" language="SQL" pluginId="com.intellij.database" pluginVersion="252.26199.162" isGlobalTool="false">&lt;html&gt;
&lt;body&gt;
타입 관련 오류를 보고합니다.
&lt;!-- tooltip end --&gt;&lt;p&gt;&lt;small&gt;Inspection ID: SqlTypeInspection&lt;/small&gt;&lt;/p&gt;&lt;/body&gt;
&lt;/html&gt;</inspection><inspection shortName="SqlCurrentSchemaInspection" defaultSeverity="WARNING" displayName="현재 콘솔 스키마의 내부 검사 여부" enabled="true" language="SQL" pluginId="com.intellij.database" pluginVersion="252.26199.162" isGlobalTool="false">&lt;html&gt;
&lt;body&gt;
현재 세션 내 내부 검사되지 않은 스키마 및 데이터베이스를 보고합니다.
&lt;p&gt;예를 들어, 이 경고는 내부 검사 되지 않은 스키마에서 테이블을 생성하려고 할 때 발생할 수 있습니다.&lt;/p&gt;
&lt;p&gt;내부 검사는 데이터 소스를 검사하는 방법입니다. 내부 검사를 수행하면 테이블, 열, 함수, 그 외 요소와 속성을 탐지하기 위해 데이터 소스의 구조 정보가 검사됩니다.&lt;/p&gt;
&lt;!-- tooltip end --&gt;&lt;p&gt;&lt;small&gt;Inspection ID: SqlCurrentSchemaInspection&lt;/small&gt;&lt;/p&gt;&lt;/body&gt;
&lt;/html&gt;</inspection><inspection shortName="SqlAddNotNullColumnInspection" defaultSeverity="WARNING" displayName="디폴트 값 없이 not null 열 추가" enabled="true" language="SQL" pluginId="com.intellij.database" pluginVersion="252.26199.162" isGlobalTool="false">&lt;html&gt;
&lt;body&gt;
DEFAULT 값 없이 NOT NULL 열을 생성하려는 시도를 보고합니다.
&lt;p&gt;예시(Microsoft SQL 서버):&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;CREATE TABLE foo (a INT, b  INT)

ALTER TABLE foo ADD c INT NOT NULL;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;디폴트로 열은 NULL 값을 가집니다. 이 예에서는 열이 NULL 값을 수락하지 않도록 강제하는 NOT NULL 제약을 사용합니다.
  NULL 값 사용을 금지할 경우, 새 레코드 생성 시 SQL이 사용할 수 있는 DEFAULT 값을 설정해야 합니다.
&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;ALTER TABLE foo ADD c INT NOT NULL DEFAULT 42;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;b&gt;디폴트 값 추가&lt;/b&gt; 빠른 수정을 사용하여 DEFAULT 값을 빠르게 추가할 수 있습니다.&lt;/p&gt;
&lt;!-- tooltip end --&gt;&lt;p&gt;&lt;small&gt;Inspection ID: SqlAddNotNullColumnInspection&lt;/small&gt;&lt;/p&gt;&lt;/body&gt;
&lt;/html&gt;</inspection></group><group name="Oracle" path=""><inspection shortName="OraOverloadInspection" defaultSeverity="WARNING" displayName="오버로드 오류" enabled="true" language="Oracle" pluginId="com.intellij.database" pluginVersion="252.26199.162" isGlobalTool="false">&lt;html&gt;
&lt;body&gt;
Oracle 내 서브프로그램의 유효하지 않은 오버로드를 보고합니다.
&lt;p&gt;예시(Oracle):&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;DECLARE
    SUBTYPE fff IS BINARY_INTEGER;
    SUBTYPE ggg IS NATURAL;
    PROCEDURE foo (a IN ggg) IS BEGIN NULL; END;
    PROCEDURE foo (a IN fff) IS BEGIN NULL; END;
BEGIN
    NULL;
END;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;매개변수의 서브타입만 다른 서브프로그램은 오버로드할 수 없습니다. 예를 들어, 하나는 BINARY INTEGER 매개변수를 수락하고 다른 하나는 NATURAL 매개변수를 수락하는 두 프로시저를 오버로드할 수 없습니다. 프로시저 오버로드 제약에 관한 더 자세한 내용은 &lt;a href="https://docs.oracle.com/cd/B19306_01/appdev.102/b14261/subprograms.htm"&gt;docs.oracle.com에서 오버로드 제약&lt;/a&gt;을 참고하세요.&lt;/p&gt;
&lt;!-- tooltip end --&gt;&lt;p&gt;&lt;small&gt;Inspection ID: OraOverloadInspection&lt;/small&gt;&lt;/p&gt;&lt;/body&gt;
&lt;/html&gt;</inspection><inspection shortName="OraMissingBodyInspection" defaultSeverity="WARNING" displayName="패키지/객체 타입 사양의 본문 누락" enabled="true" language="Oracle" pluginId="com.intellij.database" pluginVersion="252.26199.162" isGlobalTool="false">&lt;html&gt;
&lt;body&gt;
본문 선언이 누락된 패키지 및 객체 타입 사양을 보고합니다.
&lt;p&gt;루틴 및 커서가 포함된 패키지 사양을 선언하는 패키지 사양 및 객체 타입은 루틴 및 커서가 구현된 본문을 선언해야 합니다. 본문이 없으면 프로그램 코드에서 루틴 또는 커서가 호출될 때 런타임 오류가 발생합니다.&lt;/p&gt;
&lt;p&gt;예시(Oracle):&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;CREATE OR REPLACE PACKAGE ppp IS
    FUNCTION foo(a INT) RETURN INT;
END;&lt;/code&gt;&lt;/pre&gt;
&lt;!-- tooltip end --&gt;&lt;p&gt;&lt;small&gt;Inspection ID: OraMissingBodyInspection&lt;/small&gt;&lt;/p&gt;&lt;/body&gt;
&lt;/html&gt;</inspection><inspection shortName="OraUnmatchedForwardDeclarationInspection" defaultSeverity="ERROR" displayName="정의 없는 정방향 선언" enabled="true" language="Oracle" pluginId="com.intellij.database" pluginVersion="252.26199.162" isGlobalTool="false">&lt;html&gt;
&lt;body&gt;
코드에 구현이 누락된 프로시저 및 함수의 선언을 보고합니다.
&lt;p&gt;Oracle에서는 본문 없이 프로시저 또는 함수를 선언하고 나중에 구현을 작성할 수 있습니다. 이 검사는 구현이 없이 선언된 프로시저 및 함수의 이름을 보고합니다.&lt;/p&gt;
&lt;p&gt;예시(Oracle):&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;DECLARE PROCEDURE foo(a int, b varchar2);
BEGIN
    NULL;
END;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;code&gt;foo&lt;/code&gt; 프로시저가 선언되어 있으나 구현이 누락되었습니다. 구현을 추가하여 오류를 제거할 수 있습니다.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;DECLARE PROCEDURE foo(a int, b varchar2);
  PROCEDURE foo(a int, b varchar2) IS
BEGIN
    NULL;
END;
BEGIN
    NULL;
END;&lt;/code&gt;&lt;/pre&gt;
&lt;!-- tooltip end --&gt;&lt;p&gt;&lt;small&gt;Inspection ID: OraUnmatchedForwardDeclarationInspection&lt;/small&gt;&lt;/p&gt;&lt;/body&gt;
&lt;/html&gt;</inspection></group><group name="Less" path=""><inspection shortName="LessUnresolvedMixin" defaultSeverity="WARNING" displayName="해결되지 않은 mixin" enabled="true" language="LESS" pluginId="org.jetbrains.plugins.less" pluginVersion="252.26199.162" isGlobalTool="false">&lt;html&gt;
&lt;body&gt;
해결되지 않은 &lt;a href="http://lesscss.org/features/#mixins-feature"&gt;Less mixin&lt;/a&gt; 참조를 보고합니다.
&lt;p&gt;&lt;b&gt;예:&lt;/b&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;
* {
  .unknown-mixin();
}
&lt;/code&gt;&lt;/pre&gt;
&lt;!-- tooltip end --&gt;
&lt;p&gt;&lt;small&gt;Inspection ID: LessUnresolvedMixin&lt;/small&gt;&lt;/p&gt;&lt;/body&gt;
&lt;/html&gt;</inspection><inspection shortName="LessResolvedByNameOnly" defaultSeverity="WEAK WARNING" displayName="import 문 누락" enabled="true" language="LESS" pluginId="org.jetbrains.plugins.less" pluginVersion="252.26199.162" isGlobalTool="false">&lt;html&gt;
&lt;body&gt;
다른 파일에 선언되어 있으나 현재 파일에 명시적으로 &lt;a href="http://lesscss.org/features/#import-atrules-feature"&gt;가져오지&lt;/a&gt; 않은 변수 또는 mixin 참조를 보고합니다.
&lt;p&gt;&lt;b&gt;예:&lt;/b&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;
* {
  margin: @var-in-other-file;
}
&lt;/code&gt;&lt;/pre&gt;
&lt;!-- tooltip end --&gt;
&lt;p&gt;&lt;small&gt;Inspection ID: LessResolvedByNameOnly&lt;/small&gt;&lt;/p&gt;&lt;/body&gt;
&lt;/html&gt;</inspection><inspection shortName="LessUnresolvedVariable" defaultSeverity="WARNING" displayName="해결되지 않은 변수" enabled="true" language="LESS" pluginId="org.jetbrains.plugins.less" pluginVersion="252.26199.162" isGlobalTool="false">&lt;html&gt;
&lt;body&gt;
해결되지 않은 &lt;a href="http://lesscss.org/features/#variables-feature"&gt;Less 변수&lt;/a&gt; 참조를 보고합니다.
&lt;!-- tooltip end --&gt;
&lt;p&gt;&lt;b&gt;예:&lt;/b&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;
* {
  margin: @unknown-var;
}
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;small&gt;Inspection ID: LessUnresolvedVariable&lt;/small&gt;&lt;/p&gt;&lt;/body&gt;
&lt;/html&gt;</inspection></group><group name="비트 연산 이슈" path="JavaScript 및 TypeScript"><inspection shortName="IncompatibleMaskJS" defaultSeverity="WARNING" displayName="호환되지 않는 비트 마스크 연산" enabled="true" language="JavaScript" pluginId="JavaScript" pluginVersion="252.26199.162" isGlobalTool="false">&lt;!-- Copied from community/plugins/InspectionGadgets/src/inspectionDescriptions/IncompatibleMask.html --&gt;
&lt;html&gt;
&lt;body&gt;
반드시 &lt;code&gt;true&lt;/code&gt; 또는 &lt;code&gt;false&lt;/code&gt;로 평가되는 비트 마스크 식을 보고합니다.
&lt;code&gt;constant1&lt;/code&gt; 및 &lt;code&gt;constant2&lt;/code&gt;가 호환되지 않은 
비트마스크 상수인 경우 표현식 양식은 &lt;code&gt;(var &amp; constant1) == constant2&lt;/code&gt; 
또는 &lt;code&gt;(var | constant1) == constant2&lt;/code&gt;입니다.
&lt;p&gt;예:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;
// 호환되지 않는 마스크: 마스크의 마지막 바이트가 0이므로,
// 0x1200 등은 가능하나 0x1234는 불가능합니다
if ((mask &amp; 0xFF00) == 0x1234) {...}
&lt;/code&gt;&lt;/pre&gt;
&lt;!-- tooltip end --&gt;
&lt;p&gt;&lt;small&gt;Inspection ID: IncompatibleMaskJS&lt;/small&gt;&lt;/p&gt;&lt;/body&gt;
&lt;/html&gt;</inspection><inspection shortName="JSBitwiseOperatorUsage" defaultSeverity="WARNING" displayName="비트 연산 사용 위치" enabled="true" language="JavaScript" pluginId="JavaScript" pluginVersion="252.26199.162" isGlobalTool="false">&lt;html&gt;
&lt;body&gt;
Bitwise AND("&lt;code&gt;&amp;&lt;/code&gt;") 또는 OR("&lt;code&gt;|&lt;/code&gt;") 연산자의 의심스러운 사용 위치를 보고합니다.
보통 오타이며 bool 연산 AND("&lt;code&gt;&amp;&amp;&lt;/code&gt;") 및 OR("&lt;code&gt;||&lt;/code&gt;")을 적용한 결과가 기대됩니다.
&lt;!-- tooltip end --&gt;&lt;p&gt;&lt;small&gt;Inspection ID: JSBitwiseOperatorUsage&lt;/small&gt;&lt;/p&gt;&lt;/body&gt;
&lt;/html&gt;</inspection><inspection shortName="PointlessBitwiseExpressionJS" defaultSeverity="WARNING" displayName="Bitwise 표현식을 단순화할 수 있음" enabled="false" language="JavaScript" pluginId="JavaScript" pluginVersion="252.26199.162" isGlobalTool="false">&lt;!-- Copied from community/plugins/InspectionGadgets/src/inspectionDescriptions/PointlessBitwiseExpression.html --&gt;
&lt;html&gt;
&lt;body&gt;
0을 사용한 &lt;code&gt;and&lt;/code&gt;, &lt;code&gt;or&lt;/code&gt;, 또는 시프트 연산을 포함하는 표현식을 보고합니다. 그러한 표현식은 완전히 완료되지 않은 자동 리팩토링으로 인해 발생할 수 있습니다.
&lt;!-- tooltip end --&gt;&lt;p&gt;&lt;small&gt;Inspection ID: PointlessBitwiseExpressionJS&lt;/small&gt;&lt;/p&gt;&lt;/body&gt;
&lt;/html&gt;</inspection><inspection shortName="ShiftOutOfRangeJS" defaultSeverity="WARNING" displayName="잘못된 상수에 의한 시프트 연산이 있을 수 있음" enabled="true" language="JavaScript" pluginId="JavaScript" pluginVersion="252.26199.162" isGlobalTool="false">&lt;!-- Copied from community/plugins/InspectionGadgets/src/inspectionDescriptions/ShiftOutOfRange.html --&gt;
&lt;html&gt;
&lt;body&gt;
&lt;code&gt;0..31&lt;/code&gt; 범위 외의 정수 시프트 연산, 음의 값 또는 과도하게 큰 값에 의해 시프트 연산 등 두 번째 피연산자가 합리적인 범위 외의 정수인 시프트 연산을 보고합니다.
&lt;!-- tooltip end --&gt;&lt;p&gt;&lt;small&gt;Inspection ID: ShiftOutOfRangeJS&lt;/small&gt;&lt;/p&gt;&lt;/body&gt;
&lt;/html&gt;</inspection></group><group name="이름 생성 규칙" path="JavaScript 및 TypeScript"><inspection shortName="LocalVariableNamingConventionJS" defaultSeverity="WARNING" displayName="지역 변수 이름 지정 규칙" enabled="false" language="JavaScript" pluginId="JavaScript" pluginVersion="252.26199.162" isGlobalTool="false">&lt;html&gt;
&lt;body&gt;
이름이 너무 짧거나 너무 길거나 지정된 정규 표현식 패턴을 따르지 않는 지역 변수를 보고합니다.
&lt;!-- tooltip end --&gt;
&lt;p&gt;
  아래 제공된 필드를 사용하여 최소 길이, 최대 길이 및 지역 변수 이름으로 기대되는 정규 표현식을 지정하세요. 표준 &lt;code&gt;java.util.regex&lt;/code&gt; 서식의 정규 표현식을 사용하세요.
&lt;p&gt;&lt;small&gt;Inspection ID: LocalVariableNamingConventionJS&lt;/small&gt;&lt;/p&gt;&lt;/body&gt;
&lt;/html&gt;</inspection><inspection shortName="JSNonASCIINames" defaultSeverity="WARNING" displayName="비 ASCII 심볼이 있는 식별자" enabled="true" language="JavaScript" pluginId="JavaScript" pluginVersion="252.26199.162" isGlobalTool="false">&lt;html&gt;
&lt;body&gt;
이름에 사용된 ASCII가 아닌 기호를 보고합니다.&lt;br/&gt;&lt;br/&gt;
'Allow only ASCII names'(ASCII 이름만 허용) 옵션을 선택하면, ASCII가 아닌 기호를 포함하는 모든 이름이 보고됩니다.&lt;br/&gt;
그렇지 않으면 ASCII 기호와 ASCII가 아닌 기호를 포함하는 모든 이름을 보고합니다.
&lt;!-- tooltip end --&gt;&lt;p&gt;&lt;small&gt;Inspection ID: JSNonASCIINames&lt;/small&gt;&lt;/p&gt;&lt;/body&gt;
&lt;/html&gt;</inspection><inspection shortName="ParameterNamingConventionJS" defaultSeverity="WARNING" displayName="함수 매개변수 이름 지정 규칙" enabled="false" language="JavaScript" pluginId="JavaScript" pluginVersion="252.26199.162" isGlobalTool="false">&lt;html&gt;
&lt;body&gt;
이름이 너무 짧거나 너무 길어나 지정된 정규 표현식 패턴을 따르지 않는 함수 매개변수를 보고합니다.
&lt;!-- tooltip end --&gt;
&lt;p&gt;
  아래 제공된 필드를 사용하여 지역 변수 이름으로 기대되는 최소 길이, 최대 길이 및 정규 표현식을 지정하십시오. 표준 &lt;code&gt;java.util.regex&lt;/code&gt; 서식의 정규 표현식을 사용하세요.
&lt;p&gt;&lt;small&gt;Inspection ID: ParameterNamingConventionJS&lt;/small&gt;&lt;/p&gt;&lt;/body&gt;
&lt;/html&gt;</inspection><inspection shortName="FunctionNamingConventionJS" defaultSeverity="WARNING" displayName="함수 이름 지정 규칙" enabled="false" language="JavaScript" pluginId="JavaScript" pluginVersion="252.26199.162" isGlobalTool="false">&lt;html&gt;
&lt;body&gt;
이름이 너무 짧거나 너무 길어나 지정된 정규 표현식 패턴을 따르지 않는 함수를 보고합니다.
&lt;!-- tooltip end --&gt;
&lt;p&gt;
 아래 제공된 필드를 사용하여 함수 이름을 위한
최소 길이, 최대 길이 및 정규 표현식을 지정하십시오. 정규 표현식에 표준 &lt;code&gt;java.util.regex&lt;/code&gt; 서식을 사용하십시오.
&lt;p&gt;&lt;small&gt;Inspection ID: FunctionNamingConventionJS&lt;/small&gt;&lt;/p&gt;&lt;/body&gt;
&lt;/html&gt;</inspection><inspection shortName="JSClassNamingConvention" defaultSeverity="WARNING" displayName="클래스 이름 지정 규칙" enabled="false" language="JavaScript" pluginId="JavaScript" pluginVersion="252.26199.162" isGlobalTool="false">&lt;html&gt;
&lt;body&gt;
이름이 너무 짧거나 너무 길거나 지정된 정규 표현 패턴을 따르지 않는 JSDoc &lt;code&gt;@constructor&lt;/code&gt; 또는 &lt;code&gt;@class&lt;/code&gt; 태그로 어노테이션이 추가된 클래스 또는 함수를 보고합니다.
&lt;!-- tooltip end --&gt;
&lt;p&gt;
  아래 제공된 필드를 사용하여 클래스 이름으로 기대되는 최소 길이, 최대 길이 및 정규 표현식을 지정하십시오. 정규 표현식에 표준 &lt;code&gt;java.util.regex&lt;/code&gt; 서식을 사용하십시오.
&lt;p&gt;&lt;small&gt;Inspection ID: JSClassNamingConvention&lt;/small&gt;&lt;/p&gt;&lt;/body&gt;
&lt;/html&gt;</inspection></group><group name="YAML" path=""><inspection shortName="YAMLSchemaDeprecation" defaultSeverity="WEAK WARNING" displayName="지원 중단되는 YAML 키" enabled="true" language="yaml" pluginId="org.jetbrains.plugins.yaml" pluginVersion="252.26199.169" isGlobalTool="false">&lt;html&gt;
&lt;body&gt;
YAML 파일에서 지원이 중단된 키를 보고합니다.
&lt;p&gt;해당하는 YAML 파일과 연관된 JSON 스키마가 있을 경우에만 지원 중단이 검사됩니다.&lt;/p&gt;
&lt;p&gt;지원 중단 메커니즘은 아직 JSON 스키마 사양에 정의되어 있지 않으며 이 검사는 비표준 &lt;code&gt;deprecationMessage&lt;/code&gt; 확장을 사용합니다.&lt;/p&gt;
&lt;p&gt;&lt;b&gt;스키마 지원 중단 예시:&lt;/b&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;
  {
    "properties": {
      "SomeDeprecatedProperty": {
        "deprecationMessage": "Baz",
        "description": "Foo bar"
      }
    }
  }
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;b&gt;다음은 해당하는 경고의 예시입니다.&lt;/b&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;
  SomeDeprecatedProperty: some value
&lt;/code&gt;&lt;/pre&gt;
&lt;!-- tooltip end --&gt;&lt;p&gt;&lt;small&gt;Inspection ID: YAMLSchemaDeprecation&lt;/small&gt;&lt;/p&gt;&lt;/body&gt;
&lt;/html&gt;</inspection><inspection shortName="YAMLDuplicatedKeys" defaultSeverity="ERROR" displayName="중복 YAML 키" enabled="true" language="yaml" pluginId="org.jetbrains.plugins.yaml" pluginVersion="252.26199.169" isGlobalTool="false">&lt;html&gt;
&lt;body&gt;
YAML 파일의 중복 키를 보고합니다.
&lt;p&gt;&lt;b&gt;예:&lt;/b&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;
  same_key: some value
  same_key: another value
&lt;/code&gt;&lt;/pre&gt;
&lt;!-- tooltip end --&gt;&lt;p&gt;&lt;small&gt;Inspection ID: YAMLDuplicatedKeys&lt;/small&gt;&lt;/p&gt;&lt;/body&gt;
&lt;/html&gt;</inspection><inspection shortName="YAMLUnusedAnchor" defaultSeverity="WARNING" displayName="사용되지 않는 앵커" enabled="true" language="yaml" pluginId="org.jetbrains.plugins.yaml" pluginVersion="252.26199.169" isGlobalTool="false">&lt;html&gt;
&lt;body&gt;
사용되지 않는 앵커를 보고합니다.
&lt;p&gt;&lt;b&gt;예:&lt;/b&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;
  some_key: &amp;some_anchor
    key1: value1
&lt;/code&gt;&lt;/pre&gt;
&lt;!-- tooltip end --&gt;&lt;p&gt;&lt;small&gt;Inspection ID: YAMLUnusedAnchor&lt;/small&gt;&lt;/p&gt;&lt;/body&gt;
&lt;/html&gt;</inspection><inspection shortName="YAMLIncompatibleTypes" defaultSeverity="WARNING" displayName="의심스러운 타입 불일치" enabled="true" language="yaml" pluginId="org.jetbrains.plugins.yaml" pluginVersion="252.26199.169" isGlobalTool="false">&lt;html&gt;
&lt;body&gt;
YAML 파일 내의 스칼라 값 타입과 비슷한 위치에 있는 값의 타입이 일치하지 않으면 보고합니다.

&lt;p&gt;&lt;b&gt;예:&lt;/b&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;
myElements:
  - value1
  - value2
  - false # &amp;lt;- 다른 값은 문자열이지만 이 값은 부울 값이므로 보고됩니다
&lt;/code&gt;&lt;/pre&gt;
&lt;!-- tooltip end --&gt;&lt;p&gt;&lt;small&gt;Inspection ID: YAMLIncompatibleTypes&lt;/small&gt;&lt;/p&gt;&lt;/body&gt;
&lt;/html&gt;</inspection><inspection shortName="YAMLUnresolvedAlias" defaultSeverity="ERROR" displayName="해결되지 않은 별칭" enabled="true" language="yaml" pluginId="org.jetbrains.plugins.yaml" pluginVersion="252.26199.169" isGlobalTool="false">&lt;html&gt;
&lt;body&gt;
YAML 파일의 해결되지 않은 별칭을 보고합니다.
&lt;p&gt;&lt;b&gt;예:&lt;/b&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;
  some_key: *unknown_alias
&lt;/code&gt;&lt;/pre&gt;
&lt;!-- tooltip end --&gt;&lt;p&gt;&lt;small&gt;Inspection ID: YAMLUnresolvedAlias&lt;/small&gt;&lt;/p&gt;&lt;/body&gt;
&lt;/html&gt;</inspection><inspection shortName="YAMLSchemaValidation" defaultSeverity="WARNING" displayName="JSON 스키마로 검사" enabled="true" language="yaml" pluginId="org.jetbrains.plugins.yaml" pluginVersion="252.26199.169" isGlobalTool="false">&lt;html&gt;
&lt;body&gt;
스키마가 지정된 경우 YAML 파일 및 JSON 스키마 간 불일치를 보고합니다.
&lt;p&gt;&lt;b&gt;스키마 예시:&lt;/b&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;
  {
    "properties": {
      "SomeNumberProperty": {
        "type": "number"
      }
    }
  }
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;b&gt;다음은 해당하는 경고의 예시입니다.&lt;/b&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;
  SomeNumberProperty: hello world
&lt;/code&gt;&lt;/pre&gt;
&lt;!-- tooltip end --&gt;&lt;p&gt;&lt;small&gt;Inspection ID: YAMLSchemaValidation&lt;/small&gt;&lt;/p&gt;&lt;/body&gt;
&lt;/html&gt;</inspection><inspection shortName="YAMLRecursiveAlias" defaultSeverity="ERROR" displayName="재귀적 별칭" enabled="true" language="yaml" pluginId="org.jetbrains.plugins.yaml" pluginVersion="252.26199.169" isGlobalTool="false">&lt;html&gt;
&lt;body&gt;
YAML 별칭의 재귀를 보고합니다.
&lt;p&gt;별칭은 재귀적일 수 없으며 해당하는 앵커로 참조된 데이터 내부에서 사용되어야 합니다.&lt;/p&gt;
&lt;p&gt;&lt;b&gt;예:&lt;/b&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;
  some_key: &amp;some_anchor
    sub_key1: value1
    sub_key2: *some_anchor
&lt;/code&gt;&lt;/pre&gt;
&lt;!-- tooltip end --&gt;&lt;p&gt;&lt;small&gt;Inspection ID: YAMLRecursiveAlias&lt;/small&gt;&lt;/p&gt;&lt;/body&gt;
&lt;/html&gt;</inspection></group><group name="보안" path="JavaScript and TypeScript"><inspection shortName="NpmVulnerableApiCode" defaultSeverity="WARNING" displayName="취약한 API 사용 위치" enabled="true" language="JavaScript" pluginId="org.jetbrains.security.package-checker" pluginVersion="252.26199.169" isGlobalTool="false">&lt;html&gt;
&lt;body&gt;
&lt;p&gt;가져온 종속성에서 취약한 API가 사용된 경우를 보고합니다.&lt;/p&gt;
&lt;p&gt;보고된 문제를 해결하면 공격자로부터 소프트웨어를 보호할 수 있습니다.&lt;/p&gt;
&lt;p&gt;문제를 해결하려면 취약성이 수정된 버전(사용 가능한 경우)으로 업데이트하거나 취약성이 없는 종속성으로 전환하면 됩니다.&lt;/p&gt;
&lt;!-- tooltip end --&gt;
&lt;p&gt;&lt;small&gt;Inspection ID: NpmVulnerableApiCode&lt;/small&gt;&lt;/p&gt;&lt;/body&gt;
&lt;/html&gt;
</inspection></group><group name="코드 스타일 이슈" path="CSS"><inspection shortName="CssMissingSemicolon" defaultSeverity="WARNING" displayName="세미콜론 누락" enabled="false" language="CSS" pluginId="com.intellij.css" pluginVersion="252.26199.162" isGlobalTool="false">&lt;html&gt;
&lt;body&gt;
선언 끝의 누락된 세미콜론을 보고합니다.
&lt;!-- tooltip end --&gt;&lt;p&gt;&lt;small&gt;Inspection ID: CssMissingSemicolon&lt;/small&gt;&lt;/p&gt;&lt;/body&gt;
&lt;/html&gt;</inspection><inspection shortName="CssRedundantUnit" defaultSeverity="WARNING" displayName="불필요한 측정 단위" enabled="true" language="CSS" pluginId="com.intellij.css" pluginVersion="252.26199.162" isGlobalTool="false">&lt;html&gt;
&lt;body&gt;
사양이 단위를 요구하지 않는 경우 0 값 측정 단위를 보고합니다.
&lt;p&gt;&lt;b&gt;예:&lt;/b&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;너비: 0px&lt;/code&gt;&lt;/pre&gt;
&lt;!-- tooltip end --&gt;
&lt;p&gt;&lt;small&gt;Inspection ID: CssRedundantUnit&lt;/small&gt;&lt;/p&gt;&lt;/body&gt;
&lt;/html&gt;</inspection></group><group name="코드 스타일 이슈" path="JavaScript 및 TypeScript"><inspection shortName="NonBlockStatementBodyJS" defaultSeverity="WARNING" displayName="중괄호가 없는 구문 본문" enabled="false" language="JavaScript" pluginId="JavaScript" pluginVersion="252.26199.162" isGlobalTool="false">&lt;html&gt;
&lt;body&gt;
본문이 블록 구문이 아닌 &lt;code&gt;if&lt;/code&gt;, &lt;code&gt;while&lt;/code&gt;, &lt;code&gt;for&lt;/code&gt;, 또는 &lt;code&gt;with&lt;/code&gt; 구문을 보고합니다.  구문 내 코드 블록 사용은 보통 다운스트림 관리에 더 안전합니다.
&lt;!-- tooltip end --&gt;&lt;p&gt;&lt;small&gt;Inspection ID: NonBlockStatementBodyJS&lt;/small&gt;&lt;/p&gt;&lt;/body&gt;
&lt;/html&gt;</inspection><inspection shortName="NestedFunctionCallJS" defaultSeverity="WARNING" displayName="중첩된 함수 호출" enabled="false" language="JavaScript" pluginId="JavaScript" pluginVersion="252.26199.162" isGlobalTool="false">&lt;html&gt;
&lt;body&gt;
다른 함수 호출에 인수로 사용된 함수 호출을 보고합니다(예: &lt;code&gt;foo(bar())&lt;/code&gt;).
&lt;!-- tooltip end --&gt;&lt;p&gt;&lt;small&gt;Inspection ID: NestedFunctionCallJS&lt;/small&gt;&lt;/p&gt;&lt;/body&gt;
&lt;/html&gt;</inspection><inspection shortName="JSRemoveUnnecessaryParentheses" defaultSeverity="INFORMATION" displayName="불필요한 소괄호" enabled="true" language="JavaScript" pluginId="JavaScript" pluginVersion="252.26199.162" isGlobalTool="false">&lt;html&gt;
&lt;body&gt;
불필요한 소괄호를 보고합니다.
&lt;!-- tooltip end --&gt;
&lt;p&gt;표현식 내:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;var x = ((1) + 2) + 3&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;화살표 함수 인수 목록 내:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;var incrementer = (x) =&gt; x + 1&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;TypeScript 및 Flow 타입 선언 내:&lt;/p&gt;
&lt;pre&gt;&lt;code lang="typescript"&gt;type Card = (Suit &amp; Rank) | (Suit &amp; Number)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;small&gt;Inspection ID: JSRemoveUnnecessaryParentheses&lt;/small&gt;&lt;/p&gt;&lt;/body&gt;
&lt;/html&gt;</inspection><inspection shortName="UnterminatedStatementJS" defaultSeverity="WARNING" displayName="종료되지 않은 구문" enabled="false" language="JavaScript" pluginId="JavaScript" pluginVersion="252.26199.162" isGlobalTool="false">&lt;html&gt;
&lt;body&gt;
세미콜론 또는 새 줄로 끝나지 않는 구문을 보고합니다.
&lt;p&gt;&lt;i&gt;에디터 | 코드 스타일 | JavaScript 또는 TypeScript - 문장 부호&lt;/i&gt;에서 '세미콜론으로 구문 종료' 옵션을 선택하여 새 줄이 사용된 경우라도 세미콜론으로 끝나지 않는 모든 구문을 보고하십시오.
일부 코드 스타일에 따르면 다른 언어와의 일관성을 위해 줄 바꿈보다 세미콜론을 선호합니다.
&lt;/p&gt;
&lt;!-- tooltip end --&gt;&lt;p&gt;&lt;small&gt;Inspection ID: UnterminatedStatementJS&lt;/small&gt;&lt;/p&gt;&lt;/body&gt;
&lt;/html&gt;</inspection><inspection shortName="ChainedFunctionCallJS" defaultSeverity="WARNING" displayName="체인 함수 호출" enabled="false" language="JavaScript" pluginId="JavaScript" pluginVersion="252.26199.162" isGlobalTool="false">&lt;html&gt;
&lt;body&gt;
대상이 다른 함수 호출인 함수 호출을 보고합니다(예: &lt;code&gt;foo().bar()&lt;/code&gt;).
&lt;!-- tooltip end --&gt;&lt;p&gt;&lt;small&gt;Inspection ID: ChainedFunctionCallJS&lt;/small&gt;&lt;/p&gt;&lt;/body&gt;
&lt;/html&gt;</inspection><inspection shortName="JSUndefinedPropertyAssignment" defaultSeverity="WEAK WARNING" displayName="정의되지 않은 프로퍼티 대입" enabled="true" language="JavaScript" pluginId="JavaScript" pluginVersion="252.26199.162" isGlobalTool="false">&lt;html&gt;
&lt;body&gt;
변수의 타입에 정의되지 않는 프로퍼티에 대한 대입을 보고합니다. &lt;p&gt;예: &lt;/p&gt;
&lt;pre&gt;&lt;code&gt;
/**
 * @type {{ property1: string, property2: number }}
 */
let myVariable = create();

myVariable.newProperty = 3; // 나쁨
&lt;/code&gt;&lt;/pre&gt;
&lt;!-- tooltip end --&gt;&lt;p&gt;&lt;small&gt;Inspection ID: JSUndefinedPropertyAssignment&lt;/small&gt;&lt;/p&gt;&lt;/body&gt;
&lt;/html&gt;</inspection><inspection shortName="ConstantOnLHSOfComparisonJS" defaultSeverity="WARNING" displayName="비교 중인 왼쪽의 상수" enabled="false" language="JavaScript" pluginId="JavaScript" pluginVersion="252.26199.162" isGlobalTool="false">&lt;!-- Copied from community/plugins/InspectionGadgets/src/inspectionDescriptions/ConstantOnWrongSideOfComparison.html --&gt;
&lt;html&gt;
&lt;body&gt;
왼쪽에 상수 값이 있는 비교 연산을 보고합니다. 코드 규칙에 따라
상수는 비교의 오른쪽에 위치해야 합니다.
&lt;!-- tooltip end --&gt;&lt;p&gt;&lt;small&gt;Inspection ID: ConstantOnLHSOfComparisonJS&lt;/small&gt;&lt;/p&gt;&lt;/body&gt;
&lt;/html&gt;</inspection><inspection shortName="ChainedEqualityJS" defaultSeverity="WARNING" displayName="체인 상등" enabled="false" language="JavaScript" pluginId="JavaScript" pluginVersion="252.26199.162" isGlobalTool="false">&lt;html&gt;
&lt;body&gt;
체인 상등 비교를 보고합니다(예: &lt;code&gt;a==b==c&lt;/code&gt;).  그러한 비교는 혼란을 일으킵니다.
&lt;!-- tooltip end --&gt;&lt;p&gt;&lt;small&gt;Inspection ID: ChainedEqualityJS&lt;/small&gt;&lt;/p&gt;&lt;/body&gt;
&lt;/html&gt;</inspection><inspection shortName="ConstantOnRHSOfComparisonJS" defaultSeverity="WARNING" displayName="비교 중인 오른쪽의 상수" enabled="false" language="JavaScript" pluginId="JavaScript" pluginVersion="252.26199.162" isGlobalTool="false">&lt;!-- Copied from community/plugins/InspectionGadgets/src/inspectionDescriptions/ConstantOnWrongSideOfComparison.html --&gt;
&lt;html&gt;
&lt;body&gt;
오른쪽에 상수가 있는 비교 연산을 보고합니다. 코드 규칙에 따라 
상수는 비교의 왼쪽에만 위치할 수 있습니다.
&lt;!-- tooltip end --&gt;&lt;p&gt;&lt;small&gt;Inspection ID: ConstantOnRHSOfComparisonJS&lt;/small&gt;&lt;/p&gt;&lt;/body&gt;
&lt;/html&gt;</inspection><inspection shortName="JSArrowFunctionBracesCanBeRemoved" defaultSeverity="INFORMATION" displayName="화살표 함수 본문 주변의 불필요한 중괄호" enabled="true" language="JavaScript" pluginId="JavaScript" pluginVersion="252.26199.162" isGlobalTool="false">&lt;html&gt;
&lt;body&gt;
본문이 중괄호와 정확히 하나의 구문으로 구성되는 화살표 함수를 보고합니다.
중괄호가 없는 간결한 구문으로 변환할 것을 제안합니다.
&lt;!-- tooltip end --&gt;
&lt;pre&gt;&lt;code&gt;
    let incrementer = (x) =&gt; {return x + 1};
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;빠른 수정이 적용된 후 코드 조각은 다음과 같습니다.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;
    let incrementer = (x) =&gt; x + 1;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;small&gt;Inspection ID: JSArrowFunctionBracesCanBeRemoved&lt;/small&gt;&lt;/p&gt;&lt;/body&gt;
&lt;/html&gt;</inspection><inspection shortName="JSDeclarationsAtScopeStart" defaultSeverity="WEAK WARNING" displayName="'var'이 함수의 시작 부분에 선언되지 않음" enabled="false" language="JavaScript" pluginId="JavaScript" pluginVersion="252.26199.162" isGlobalTool="false">&lt;html&gt;
&lt;body&gt;
&lt;b&gt;var&lt;/b&gt;로 선언된 지역 변수 선언이 함수 범위의 맨 위에 위치하는지 검사합니다.
&lt;br/&gt;&lt;br/&gt;
코드가 실행될 때 디폴트로 변수 선언이 항상 변수를 포함하는 스코프의 맨 위로 보이지 않게 이동됩니다(끌어올려집니다).
그러므로 스코프의 맨 위에서 변수를 선언하면 코드 내에서 이 동작을 나타내기 쉬워집니다.
&lt;!-- tooltip end --&gt;&lt;p&gt;&lt;small&gt;Inspection ID: JSDeclarationsAtScopeStart&lt;/small&gt;&lt;/p&gt;&lt;/body&gt;
&lt;/html&gt;</inspection></group><group name="XML" path=""><inspection shortName="XmlDefaultAttributeValue" defaultSeverity="WARNING" displayName="디폴트 값이 있는 불필요한 속성" enabled="true" language="XML" pluginId="com.intellij" pluginVersion="252.26199.162" isGlobalTool="false">&lt;html&gt;
&lt;body&gt;
XML 속성으로의 불필요한 디폴트 값 대입을 보고합니다.
&lt;!-- tooltip end --&gt;&lt;p&gt;&lt;small&gt;Inspection ID: XmlDefaultAttributeValue&lt;/small&gt;&lt;/p&gt;&lt;/body&gt;
&lt;/html&gt;</inspection><inspection shortName="CheckXmlFileWithXercesValidator" defaultSeverity="ERROR" displayName="외부 유효성 검사 실패" enabled="true" language="XML" pluginId="com.intellij" pluginVersion="252.26199.162" isGlobalTool="false">&lt;html&gt;
&lt;body&gt;
지정된 DTD 또는 Xerces 유효성 검사기에 의해 탐지된 스키마를 포함하는 XML 파일 내 차이를 보고합니다.
&lt;!-- tooltip end --&gt;&lt;p&gt;&lt;small&gt;Inspection ID: CheckXmlFileWithXercesValidator&lt;/small&gt;&lt;/p&gt;&lt;/body&gt;
&lt;/html&gt;</inspection><inspection shortName="XmlInvalidId" defaultSeverity="ERROR" displayName="해결되지 않은 ‘id' 참조" enabled="true" language="XML" pluginId="com.intellij" pluginVersion="252.26199.162" isGlobalTool="false">&lt;html&gt;
&lt;body&gt;
XML과 HTML의 어디에도 정의되지 않은 &lt;code&gt;id&lt;/code&gt;의 사용 위치를 보고합니다.
&lt;!-- tooltip end --&gt;&lt;p&gt;&lt;small&gt;Inspection ID: XmlInvalidId&lt;/small&gt;&lt;/p&gt;&lt;/body&gt;
&lt;/html&gt;</inspection><inspection shortName="XmlUnresolvedReference" defaultSeverity="ERROR" displayName="확인되지 않은 참조" enabled="true" language="XML" pluginId="com.intellij" pluginVersion="252.26199.162" isGlobalTool="false">&lt;html&gt;
&lt;body&gt;
XML 내 해결되지 않은 참조를 보고합니다.
&lt;!-- tooltip end --&gt;&lt;p&gt;&lt;small&gt;Inspection ID: XmlUnresolvedReference&lt;/small&gt;&lt;/p&gt;&lt;/body&gt;
&lt;/html&gt;</inspection><inspection shortName="XmlUnusedNamespaceDeclaration" defaultSeverity="WARNING" displayName="사용되지 않는 스키마 선언" enabled="true" language="XML" pluginId="com.intellij" pluginVersion="252.26199.162" isGlobalTool="false">&lt;html&gt;
&lt;body&gt;
XML 내 사용되지 않는 네임스페이스 선언 또는 위치 힌트를 보고합니다.
&lt;!-- tooltip end --&gt;&lt;p&gt;&lt;small&gt;Inspection ID: XmlUnusedNamespaceDeclaration&lt;/small&gt;&lt;/p&gt;&lt;/body&gt;
&lt;/html&gt;</inspection><inspection shortName="XmlUnboundNsPrefix" defaultSeverity="WARNING" displayName="바운드되지 않은 네임스페이스 접두사" enabled="true" language="XML" pluginId="com.intellij" pluginVersion="252.26199.162" isGlobalTool="false">&lt;html&gt;
&lt;body&gt;
XML 내 바운드되지 않은 네임스페이스 접두사를 보고합니다.
&lt;!-- tooltip end --&gt;&lt;p&gt;&lt;small&gt;Inspection ID: XmlUnboundNsPrefix&lt;/small&gt;&lt;/p&gt;&lt;/body&gt;
&lt;/html&gt;</inspection><inspection shortName="XmlWrongRootElement" defaultSeverity="ERROR" displayName="잘못된 루트 요소" enabled="true" language="XML" pluginId="com.intellij" pluginVersion="252.26199.162" isGlobalTool="false">&lt;html&gt;
&lt;body&gt;
&lt;code&gt;&amp;lt;doctype&amp;gt;&lt;/code&gt; 태그에 지정된 이름과 다른 루트 태그 이름을 보고합니다.
&lt;!-- tooltip end --&gt;&lt;p&gt;&lt;small&gt;Inspection ID: XmlWrongRootElement&lt;/small&gt;&lt;/p&gt;&lt;/body&gt;
&lt;/html&gt;</inspection><inspection shortName="XmlPathReference" defaultSeverity="ERROR" displayName="해결되지 않은 파일 참조" enabled="true" language="XML" pluginId="com.intellij" pluginVersion="252.26199.162" isGlobalTool="false">&lt;html&gt;
&lt;body&gt;
XML 내 해결되지 않은 파일 참조를 보고합니다.
&lt;!-- tooltip end --&gt;&lt;p&gt;&lt;small&gt;Inspection ID: XmlPathReference&lt;/small&gt;&lt;/p&gt;&lt;/body&gt;
&lt;/html&gt;</inspection><inspection shortName="XmlHighlighting" defaultSeverity="ERROR" displayName="XML 강조 표시" enabled="true" language="XML" pluginId="com.intellij" pluginVersion="252.26199.162" isGlobalTool="true">&lt;html&gt;
&lt;body&gt;
배치 코드 검사 결과 내 XML 유효성 검사 문제를 보고합니다.
&lt;!-- tooltip end --&gt;&lt;p&gt;&lt;small&gt;Inspection ID: XmlHighlighting&lt;/small&gt;&lt;/p&gt;&lt;/body&gt;
&lt;/html&gt;</inspection><inspection shortName="XmlDuplicatedId" defaultSeverity="ERROR" displayName="중복 'id' 속성" enabled="true" language="XML" pluginId="com.intellij" pluginVersion="252.26199.162" isGlobalTool="false">&lt;html&gt;
&lt;body&gt;
XML과 HTML에서 &lt;code&gt;id&lt;/code&gt; 속성의 중복되는 값을 보고합니다.
&lt;!-- tooltip end --&gt;&lt;p&gt;&lt;small&gt;Inspection ID: XmlDuplicatedId&lt;/small&gt;&lt;/p&gt;&lt;/body&gt;
&lt;/html&gt;</inspection><inspection shortName="XmlDeprecatedElement" defaultSeverity="WARNING" displayName="지원 중단되는 심볼" enabled="true" language="XML" pluginId="com.intellij" pluginVersion="252.26199.162" isGlobalTool="false">&lt;html&gt;
&lt;body&gt;
곧 사용할 수 없게 될 XML 요소 또는 속성을 보고합니다.
&lt;p&gt;심볼은 텍스트 'deprecated'를 포함하는 XML 주석 또는 문서 태그로 표시할 수 있습니다.
&lt;!-- tooltip end --&gt;&lt;p&gt;&lt;small&gt;Inspection ID: XmlDeprecatedElement&lt;/small&gt;&lt;/p&gt;&lt;/body&gt;
&lt;/html&gt;</inspection><inspection shortName="CheckTagEmptyBody" defaultSeverity="WARNING" displayName="빈 요소 내용" enabled="true" language="XML" pluginId="com.intellij" pluginVersion="252.26199.162" isGlobalTool="false">&lt;html&gt;
&lt;body&gt;
본문이 비어 있는 XML 요소를 보고합니다.
&lt;p&gt;&lt;b&gt;예:&lt;/b&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;
  &amp;lt;user&gt;
    &amp;lt;name&gt;&amp;lt;/name&gt;
  &amp;lt;/user&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;빠른 수정을 적용한 후:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;
  &amp;lt;user&gt;
    &amp;lt;name/&gt;
  &amp;lt;/user&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;!-- tooltip end --&gt;&lt;p&gt;&lt;small&gt;Inspection ID: CheckTagEmptyBody&lt;/small&gt;&lt;/p&gt;&lt;/body&gt;
&lt;/html&gt;</inspection><inspection shortName="CheckDtdRefs" defaultSeverity="ERROR" displayName="해결되지 않은 DTD 참조" enabled="true" language="XML" pluginId="com.intellij" pluginVersion="252.26199.162" isGlobalTool="false">&lt;html&gt;
&lt;body&gt;
DTD 전용 참조 내 불일치를 보고합니다(예: XML 엔티티 참조 또는 DTD 요소 선언 참조).
DTD 및 XML 파일에서 작동합니다.
&lt;!-- tooltip end --&gt;&lt;p&gt;&lt;small&gt;Inspection ID: CheckDtdRefs&lt;/small&gt;&lt;/p&gt;&lt;/body&gt;
&lt;/html&gt;</inspection></group><group name="GitHub 액션" path=""><inspection shortName="GithubFunctionSignatureValidation" defaultSeverity="WARNING" displayName="표준 라이브러리 함수 검증" enabled="true" language="GithubExpressionLanguage" pluginId="org.jetbrains.plugins.github" pluginVersion="252.26199.162-IU" isGlobalTool="false">&lt;html&gt;
&lt;body&gt;
  잘못된 GitHub Actions Expression 언어의 표준 라이브러리 함수 호출을 보고합니다
&lt;p&gt;
  GitHub Actions Expression 언어에 관한 자세한 정보는 &lt;a href="https://docs.github.com/en/actions/learn-github-actions/expressions"&gt;GitHub 문서&lt;/a&gt;를 참조하세요.
&lt;/p&gt;
&lt;!-- tooltip end --&gt;&lt;p&gt;&lt;small&gt;Inspection ID: GithubFunctionSignatureValidation&lt;/small&gt;&lt;/p&gt;&lt;/body&gt;
&lt;/html&gt;</inspection><inspection shortName="MandatoryParamsAbsent" defaultSeverity="ERROR" displayName="잘못된 매개변수" enabled="true" language="yaml" pluginId="org.jetbrains.plugins.github" pluginVersion="252.26199.162-IU" isGlobalTool="false">&lt;html&gt;
&lt;body&gt;
&lt;p&gt;
  액션의 디폴트 값이 없는 필수 매개변수가 누락된 경우를 보고합니다. 또한, 빈 값으로 누락된 매개변수를 추가하는 빠른 수정을 제공합니다.
&lt;/p&gt;
&lt;p&gt;
  액션 매개변수에 관한 자세한 정보는 &lt;a href="https://docs.github.com/en/actions/creating-actions/metadata-syntax-for-github-actions#runsstepswith"&gt;GitHub 문서&lt;/a&gt;를 참조하세요.
&lt;/p&gt;
&lt;!-- tooltip end --&gt;&lt;p&gt;&lt;small&gt;Inspection ID: MandatoryParamsAbsent&lt;/small&gt;&lt;/p&gt;&lt;/body&gt;
&lt;/html&gt;</inspection><inspection shortName="CyclicJobDependency" defaultSeverity="ERROR" displayName="순환 잡 종속성" enabled="true" language="yaml" pluginId="org.jetbrains.plugins.github" pluginVersion="252.26199.162-IU" isGlobalTool="false">&lt;html&gt;
&lt;body&gt;
&lt;p&gt;
  GitHub 워크플로 YML 파일 내 잡의 순환적 종속성을 탐지합니다.
&lt;/p&gt;
&lt;p&gt;
  워크플로 구문에 관한 자세한 정보는 &lt;a href="https://docs.github.com/en/actions/using-workflows/workflow-syntax-for-github-actions#jobsjob_idneeds"&gt;GitHub Actions 문서&lt;/a&gt;를 참조하세요.
&lt;/p&gt;
&lt;!-- tooltip end --&gt;&lt;p&gt;&lt;small&gt;Inspection ID: CyclicJobDependency&lt;/small&gt;&lt;/p&gt;&lt;/body&gt;
&lt;/html&gt;</inspection><inspection shortName="UndefinedAction" defaultSeverity="WARNING" displayName="정의되지 않은 액션/파일 참조" enabled="true" language="yaml" pluginId="org.jetbrains.plugins.github" pluginVersion="252.26199.162-IU" isGlobalTool="false">&lt;html&gt;
&lt;body&gt;
&lt;p&gt;
  GitHub 액션 및 워크플로 파일에서 해결되지 않은 액션 참조를 탐지합니다.
&lt;/p&gt;
&lt;p&gt;
  액션 참조에 관한 자세한 정보는 &lt;a href="https://docs.github.com/en/actions/using-workflows/workflow-syntax-for-github-actions#jobsjob_idstepsuses"&gt;GitHub 문서&lt;/a&gt;를 참조하세요.
&lt;/p&gt;
&lt;!-- tooltip end --&gt;&lt;p&gt;&lt;small&gt;Inspection ID: UndefinedAction&lt;/small&gt;&lt;/p&gt;&lt;/body&gt;
&lt;/html&gt;</inspection><inspection shortName="IllegalJobDependency" defaultSeverity="ERROR" displayName="정의되지 않은 잡 종속성" enabled="true" language="yaml" pluginId="org.jetbrains.plugins.github" pluginVersion="252.26199.162-IU" isGlobalTool="false">&lt;html&gt;
&lt;body&gt;
&lt;p&gt;
  GitHub 워크플로 YML 파일에서 정의되지 않은 잡의 종속성을 탐지합니다.
&lt;/p&gt;
&lt;p&gt;
  워크플로 구문에 관한 자세한 정보는 &lt;a href="https://docs.github.com/en/actions/using-workflows/workflow-syntax-for-github-actions#jobsjob_idneeds"&gt;GitHub Actions 문서&lt;/a&gt;를 참조하세요.
&lt;/p&gt;
&lt;!-- tooltip end --&gt;&lt;p&gt;&lt;small&gt;Inspection ID: IllegalJobDependency&lt;/small&gt;&lt;/p&gt;&lt;/body&gt;
&lt;/html&gt;</inspection><inspection shortName="UndefinedParamsPresent" defaultSeverity="WARNING" displayName="정의되지 않은 매개변수" enabled="true" language="yaml" pluginId="org.jetbrains.plugins.github" pluginVersion="252.26199.162-IU" isGlobalTool="false">&lt;html&gt;
&lt;body&gt;
&lt;p&gt;
  액션에서 정의되지 않은 매개변수가 있는 경우를 보고합니다. 또한, 정의되지 않은 매개변수를 제거하는 빠른 수정을 제공합니다.
&lt;/p&gt;
&lt;p&gt;
  액션 매개변수에 관한 자세한 정보는 &lt;a href="https://docs.github.com/en/actions/creating-actions/metadata-syntax-for-github-actions#runsstepswith"&gt;GitHub 문서&lt;/a&gt;를 참조하세요.
&lt;/p&gt;
&lt;!-- tooltip end --&gt;&lt;p&gt;&lt;small&gt;Inspection ID: UndefinedParamsPresent&lt;/small&gt;&lt;/p&gt;&lt;/body&gt;
&lt;/html&gt;</inspection></group><group name="파일 감시기" path=""><inspection shortName="TaskProblemsInspection" defaultSeverity="WEAK WARNING" displayName="파일 감시기 문제" enabled="true" language="" pluginId="com.intellij.plugins.watcher" pluginVersion="252.26199.162" isGlobalTool="false">&lt;html&gt;
&lt;body&gt;
파일 감시기의 출력 필터에 의해 탐지된 오류를 보고합니다.
&lt;p&gt;
파일 감시기는 파일 내 변경 내용을 추적하고 변경 내용이 탐지되면 구성된 명령어를 실행합니다.
&lt;!-- tooltip end --&gt;&lt;p&gt;&lt;small&gt;Inspection ID: TaskProblemsInspection&lt;/small&gt;&lt;/p&gt;&lt;/body&gt;
&lt;/html&gt;</inspection></group><group name="잘못된 요소" path="CSS"><inspection shortName="CssInvalidPropertyValue" defaultSeverity="ERROR" displayName="잘못된 프로퍼티 값" enabled="true" language="CSS" pluginId="com.intellij.css" pluginVersion="252.26199.162" isGlobalTool="false">&lt;html&gt;
&lt;body&gt;
잘못된 CSS 프로퍼티 값을 보고합니다.
&lt;!-- tooltip end --&gt;&lt;p&gt;&lt;small&gt;Inspection ID: CssInvalidPropertyValue&lt;/small&gt;&lt;/p&gt;&lt;/body&gt;
&lt;/html&gt;</inspection><inspection shortName="CssInvalidNestedSelector" defaultSeverity="WARNING" displayName="잘못된 중첩 선택자" enabled="false" language="CSS" pluginId="com.intellij.css" pluginVersion="252.26199.162" isGlobalTool="false">&lt;html&gt;
&lt;body&gt;
식별자 또는 함수 표기로 시작하는 중첩 선택자를 보고합니다.
&lt;!-- tooltip end --&gt;
&lt;p&gt;&lt;small&gt;Inspection ID: CssInvalidNestedSelector&lt;/small&gt;&lt;/p&gt;&lt;/body&gt;
&lt;/html&gt;</inspection><inspection shortName="CssNegativeValue" defaultSeverity="ERROR" displayName="음수 프로퍼티 값" enabled="true" language="CSS" pluginId="com.intellij.css" pluginVersion="252.26199.162" isGlobalTool="false">&lt;html&gt;
&lt;body&gt;
0보다 작아서는 안 되는 CSS 프로퍼티의 음수 값을 보고합니다(예: 객체 너비 또는 높이).
&lt;!-- tooltip end --&gt;&lt;p&gt;&lt;small&gt;Inspection ID: CssNegativeValue&lt;/small&gt;&lt;/p&gt;&lt;/body&gt;
&lt;/html&gt;</inspection><inspection shortName="CssUnknownProperty" defaultSeverity="WARNING" displayName="알 수 없는 프로퍼티" enabled="true" language="CSS" pluginId="com.intellij.css" pluginVersion="252.26199.162" isGlobalTool="false">&lt;html&gt;
&lt;body&gt;
알 수 없는 CSS 프로퍼티 또는 잘못된 컨텍스트에 사용된 프로퍼티를 보고합니다.
&lt;!-- tooltip end --&gt;
&lt;p&gt;'Custom CSS properties'(사용자 지정 CSS 프로퍼티) 목록에 알 수 없는 프로퍼티를 추가하여 유효성 검사를 건너뛰세요.&lt;/p&gt;
&lt;p&gt;&lt;small&gt;Inspection ID: CssUnknownProperty&lt;/small&gt;&lt;/p&gt;&lt;/body&gt;
&lt;/html&gt;</inspection><inspection shortName="CssUnresolvedClassInComposesRule" defaultSeverity="ERROR" displayName="‘composes' 규칙 내 해결되지 않은 클래스" enabled="true" language="CSS" pluginId="com.intellij.css" pluginVersion="252.26199.162" isGlobalTool="false">&lt;html&gt;
&lt;body&gt;
어떠한 유효한 대상으로도 해결되지 않는 &lt;a href="https://github.com/css-modules/css-modules#composition"&gt;'composes'&lt;/a&gt; 규칙 내 CSS 클래스 참조를 보고합니다.
&lt;p&gt;&lt;b&gt;예:&lt;/b&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;
  .className {/* ... */}

  .otherClassName {
    composes: className;
  }
&lt;/code&gt;&lt;/pre&gt;
&lt;!-- tooltip end --&gt;
&lt;p&gt;&lt;small&gt;Inspection ID: CssUnresolvedClassInComposesRule&lt;/small&gt;&lt;/p&gt;&lt;/body&gt;
&lt;/html&gt;</inspection><inspection shortName="CssInvalidHtmlTagReference" defaultSeverity="WARNING" displayName="잘못된 타입 선택자" enabled="true" language="CSS" pluginId="com.intellij.css" pluginVersion="252.26199.162" isGlobalTool="false">&lt;html&gt;
&lt;body&gt;
알 수 없는 HTML 요소와 일치하는 &lt;a href="https://developer.mozilla.org/en-US/docs/Web/CSS/Type_selectors"&gt;타입 선택자&lt;/a&gt;를 보고합니다.
&lt;!-- tooltip end --&gt;&lt;p&gt;&lt;small&gt;Inspection ID: CssInvalidHtmlTagReference&lt;/small&gt;&lt;/p&gt;&lt;/body&gt;
&lt;/html&gt;</inspection><inspection shortName="CssInvalidCustomPropertyAtRuleName" defaultSeverity="ERROR" displayName="유효하지 않은 @property 이름" enabled="true" language="CSS" pluginId="com.intellij.css" pluginVersion="252.26199.162" isGlobalTool="false">&lt;html&gt;
&lt;body&gt;
잘못된 사용자 지정 프로퍼티 이름을 보고합니다. 사용자 지정 프로퍼티 이름의 앞에는 두 개의 대시가 필요합니다.
&lt;p&gt;&lt;b&gt;예:&lt;/b&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;
@property invalid-property-name {
  ...
}

@property --valid-property-name {
  ...
}
&lt;/code&gt;&lt;/pre&gt;
&lt;!-- tooltip end --&gt;&lt;p&gt;&lt;small&gt;Inspection ID: CssInvalidCustomPropertyAtRuleName&lt;/small&gt;&lt;/p&gt;&lt;/body&gt;
&lt;/html&gt;</inspection><inspection shortName="CssInvalidImport" defaultSeverity="WARNING" displayName="잘못 배치된 @import" enabled="true" language="CSS" pluginId="com.intellij.css" pluginVersion="252.26199.162" isGlobalTool="false">&lt;html&gt;
&lt;body&gt;
잘못 배치된 &lt;code&gt;@import&lt;/code&gt; 문을 보고합니다.
&lt;p&gt;
  &lt;a href="https://developer.mozilla.org/en-US/docs/Web/CSS/@import"&gt;사양&lt;/a&gt;에 따르면, &lt;code&gt;@import&lt;/code&gt; 규칙이 스타일 시트 최상단에 모든 @규칙(&lt;code&gt;@charset&lt;/code&gt; 및 &lt;code&gt;@layer&lt;/code&gt; 제외)과 스타일 선언 앞에 정의되어야 합니다. 그렇지 않은 경우 무시됩니다.
&lt;/p&gt;
&lt;!-- tooltip end --&gt;
&lt;p&gt;&lt;small&gt;Inspection ID: CssInvalidImport&lt;/small&gt;&lt;/p&gt;&lt;/body&gt;
&lt;/html&gt;</inspection><inspection shortName="CssInvalidCharsetRule" defaultSeverity="WARNING" displayName="잘못 배치되거나 잘못 사용된 @charset" enabled="true" language="CSS" pluginId="com.intellij.css" pluginVersion="252.26199.162" isGlobalTool="false">&lt;html&gt;
&lt;body&gt;
잘못 배치된 &lt;code&gt;@charset&lt;/code&gt; at-rule 또는 잘못된 charset 값을 보고합니다.
&lt;!-- tooltip end --&gt;&lt;p&gt;&lt;small&gt;Inspection ID: CssInvalidCharsetRule&lt;/small&gt;&lt;/p&gt;&lt;/body&gt;
&lt;/html&gt;</inspection><inspection shortName="CssInvalidMediaFeature" defaultSeverity="ERROR" displayName="잘못된 미디어 기능" enabled="true" language="CSS" pluginId="com.intellij.css" pluginVersion="252.26199.162" isGlobalTool="false">&lt;html&gt;
&lt;body&gt;
알 수 없는 &lt;a href="https://developer.mozilla.org/en-US/docs/Web/CSS/Media_Queries/Using_media_queries"&gt;CSS 미디어 기능&lt;/a&gt; 또는 잘못된 미디어 기능 값을 보고합니다.
&lt;!-- tooltip end --&gt;&lt;p&gt;&lt;small&gt;Inspection ID: CssInvalidMediaFeature&lt;/small&gt;&lt;/p&gt;&lt;/body&gt;
&lt;/html&gt;</inspection><inspection shortName="CssUnknownTarget" defaultSeverity="ERROR" displayName="해결되지 않은 파일 참조" enabled="true" language="CSS" pluginId="com.intellij.css" pluginVersion="252.26199.162" isGlobalTool="false">&lt;html&gt;
&lt;body&gt;
해결되지 않은 파일 참조, 예를 들어 &lt;code&gt;@import&lt;/code&gt; 문 내 잘못된 경로를 보고합니다.
&lt;!-- tooltip end --&gt;&lt;p&gt;&lt;small&gt;Inspection ID: CssUnknownTarget&lt;/small&gt;&lt;/p&gt;&lt;/body&gt;
&lt;/html&gt;</inspection><inspection shortName="CssInvalidCustomPropertyAtRuleDeclaration" defaultSeverity="ERROR" displayName="유효하지 않은 @property 선언" enabled="true" language="CSS" pluginId="com.intellij.css" pluginVersion="252.26199.162" isGlobalTool="false">&lt;html&gt;
&lt;body&gt;
필수 &lt;a href="https://developer.mozilla.org/en-US/docs/web/css/@property/syntax"&gt;syntax&lt;/a&gt;, &lt;a href="https://developer.mozilla.org/en-US/docs/web/css/@property/inherits"&gt;inherits&lt;/a&gt; 또는 &lt;a href="https://developer.mozilla.org/en-US/docs/web/css/@property/initial-value"&gt;initial-value&lt;/a&gt; 프로퍼티가 사용자 지정 프로퍼티의 선언에서 누락되면 보고합니다.
&lt;!-- tooltip end --&gt;&lt;p&gt;&lt;small&gt;Inspection ID: CssInvalidCustomPropertyAtRuleDeclaration&lt;/small&gt;&lt;/p&gt;&lt;/body&gt;
&lt;/html&gt;</inspection><inspection shortName="CssInvalidFunction" defaultSeverity="ERROR" displayName="잘못된 함수" enabled="true" language="CSS" pluginId="com.intellij.css" pluginVersion="252.26199.162" isGlobalTool="false">&lt;html&gt;
&lt;body&gt;
알 수 없는 &lt;a href="https://developer.mozilla.org/en-US/docs/Web/CSS/CSS_Functions"&gt;CSS 함수&lt;/a&gt; 또는 잘못된 함수 매개변수를 보고합니다.
&lt;!-- tooltip end --&gt;&lt;p&gt;&lt;small&gt;Inspection ID: CssInvalidFunction&lt;/small&gt;&lt;/p&gt;&lt;/body&gt;
&lt;/html&gt;</inspection><inspection shortName="CssInvalidPseudoSelector" defaultSeverity="ERROR" displayName="잘못된 의사 선택자" enabled="true" language="CSS" pluginId="com.intellij.css" pluginVersion="252.26199.162" isGlobalTool="false">&lt;html&gt;
&lt;body&gt;
잘못된 CSS &lt;a href="https://developer.mozilla.org/en-US/docs/Web/CSS/Pseudo-classes"&gt;pseudo-class&lt;/a&gt;
&lt;a href="https://developer.mozilla.org/en-US/docs/Web/CSS/Pseudo-elements"&gt;pseudo-element&lt;/a&gt;를 보고합니다.
&lt;!-- tooltip end --&gt;&lt;p&gt;&lt;small&gt;Inspection ID: CssInvalidPseudoSelector&lt;/small&gt;&lt;/p&gt;&lt;/body&gt;
&lt;/html&gt;</inspection><inspection shortName="CssUnknownUnit" defaultSeverity="ERROR" displayName="알 수 없는 단위" enabled="true" language="CSS" pluginId="com.intellij.css" pluginVersion="252.26199.162" isGlobalTool="false">&lt;html&gt;
&lt;body&gt;
알려지지 않은 유닛을 보고합니다.
&lt;!-- tooltip end --&gt;&lt;p&gt;&lt;small&gt;Inspection ID: CssUnknownUnit&lt;/small&gt;&lt;/p&gt;&lt;/body&gt;
&lt;/html&gt;</inspection><inspection shortName="CssUnresolvedCustomProperty" defaultSeverity="ERROR" displayName="해결되지 않은 사용자 지정 프로퍼티" enabled="true" language="CSS" pluginId="com.intellij.css" pluginVersion="252.26199.162" isGlobalTool="false">&lt;html&gt;
&lt;body&gt;
&lt;code&gt;var()&lt;/code&gt; 함수 인수 중 해결되지 않은 &lt;a href="https://developer.mozilla.org/en-US/docs/Web/CSS/--*"&gt;사용자 지정 프로퍼티&lt;/a&gt; 참조를 보고합니다.
&lt;!-- tooltip end --&gt;&lt;p&gt;&lt;small&gt;Inspection ID: CssUnresolvedCustomProperty&lt;/small&gt;&lt;/p&gt;&lt;/body&gt;
&lt;/html&gt;</inspection><inspection shortName="CssInvalidAtRule" defaultSeverity="ERROR" displayName="알 수 없는 @규칙" enabled="true" language="CSS" pluginId="com.intellij.css" pluginVersion="252.26199.162" isGlobalTool="false">&lt;html&gt;
&lt;body&gt;
알 수 없는 &lt;a href="https://developer.mozilla.org/en-US/docs/Web/CSS/At-rule"&gt;CSS at-rule&lt;/a&gt;을 보고합니다.
&lt;!-- tooltip end --&gt;&lt;p&gt;&lt;small&gt;Inspection ID: CssInvalidAtRule&lt;/small&gt;&lt;/p&gt;&lt;/body&gt;
&lt;/html&gt;</inspection></group><group name="Dev Container" path=""><inspection shortName="DevContainerIdeSettings" defaultSeverity="ERROR" displayName="IDE 설정 검증" enabled="true" language="JSON" pluginId="org.jetbrains.plugins.docker.gateway" pluginVersion="252.26199.162" isGlobalTool="false">&lt;html&gt;
&lt;body&gt;
IDE 설정 이름 및 값을 검증합니다.
&lt;!-- tooltip end --&gt;&lt;p&gt;&lt;small&gt;Inspection ID: DevContainerIdeSettings&lt;/small&gt;&lt;/p&gt;&lt;/body&gt;
&lt;/html&gt;</inspection><inspection shortName="DevcontainerFolder" defaultSeverity="ERROR" displayName="Dev Container 폴더 구조 문제" enabled="true" language="JSON" pluginId="org.jetbrains.plugins.docker.gateway" pluginVersion="252.26199.162" isGlobalTool="false">&lt;html&gt;
&lt;body&gt;
모호한 개발 컨테이너 컨텍스트를 포함하거나 상위 .devcontainer 폴더가 필요한데 누락된 .devcontainer 폴더를 확인합니다.
&lt;!-- tooltip end --&gt;&lt;p&gt;&lt;small&gt;Inspection ID: DevcontainerFolder&lt;/small&gt;&lt;/p&gt;&lt;/body&gt;
&lt;/html&gt;</inspection></group><group name="코드 구문이 바람직하지 않을 수 있습니다" path="JavaScript 및 TypeScript"><inspection shortName="VoidExpressionJS" defaultSeverity="WARNING" displayName="'void' 표현식" enabled="false" language="JavaScript" pluginId="JavaScript" pluginVersion="252.26199.162" isGlobalTool="false">&lt;html&gt;
&lt;body&gt;
&lt;code&gt;void&lt;/code&gt; 표현식을 보고합니다.
&lt;!-- tooltip end --&gt;&lt;p&gt;&lt;small&gt;Inspection ID: VoidExpressionJS&lt;/small&gt;&lt;/p&gt;&lt;/body&gt;
&lt;/html&gt;</inspection><inspection shortName="WithStatementJS" defaultSeverity="WARNING" displayName="'with' 문" enabled="true" language="JavaScript" pluginId="JavaScript" pluginVersion="252.26199.162" isGlobalTool="false">&lt;html&gt;
&lt;body&gt;
&lt;code&gt;with&lt;/code&gt; 문을 보고합니다. 그러한 구문은 잠재적으로 혼란을 일으키는 암묵적 바인딩을 초래할 수 있으며, 새로운 변수 설정 시 불안정하게 동작할 수 있습니다.
&lt;!-- tooltip end --&gt;&lt;p&gt;&lt;small&gt;Inspection ID: WithStatementJS&lt;/small&gt;&lt;/p&gt;&lt;/body&gt;
&lt;/html&gt;</inspection><inspection shortName="LabeledStatementJS" defaultSeverity="WARNING" displayName="라벨 지정된 구문" enabled="false" language="JavaScript" pluginId="JavaScript" pluginVersion="252.26199.162" isGlobalTool="false">&lt;html&gt;
&lt;body&gt;
라벨이 지정된 구문을 보고합니다.
&lt;!-- tooltip end --&gt;&lt;p&gt;&lt;small&gt;Inspection ID: LabeledStatementJS&lt;/small&gt;&lt;/p&gt;&lt;/body&gt;
&lt;/html&gt;</inspection><inspection shortName="AnonymousFunctionJS" defaultSeverity="WARNING" displayName="익명 함수" enabled="false" language="JavaScript" pluginId="JavaScript" pluginVersion="252.26199.162" isGlobalTool="false">&lt;html&gt;
&lt;body&gt;
익명 함수를 보고합니다. 함수 표현식의 명시적 이름은 디버그에 도움이 될 수 있습니다.
ECMAScript 표준으로 지정된 &lt;code&gt;name&lt;/code&gt; 속성이 존재하는 경우, 이름 없는 표현식은 무시합니다.
예: &lt;code&gt;var bar = function() {};&lt;/code&gt;는 보고되지 않습니다.
&lt;!-- tooltip end --&gt;&lt;p&gt;&lt;small&gt;Inspection ID: AnonymousFunctionJS&lt;/small&gt;&lt;/p&gt;&lt;/body&gt;
&lt;/html&gt;</inspection><inspection shortName="DebuggerStatementJS" defaultSeverity="WARNING" displayName="'debugger' 문" enabled="false" language="JavaScript" pluginId="JavaScript" pluginVersion="252.26199.162" isGlobalTool="false">&lt;html&gt;
&lt;body&gt;
JavaScript 디버거와의 상호작용에 사용된 &lt;code&gt;debugger&lt;/code&gt; 문을 보고합니다.  그러한 구문은 프로덕션 코드에 포함되어서는 안 됩니다.
&lt;!-- tooltip end --&gt;&lt;p&gt;&lt;small&gt;Inspection ID: DebuggerStatementJS&lt;/small&gt;&lt;/p&gt;&lt;/body&gt;
&lt;/html&gt;</inspection><inspection shortName="ContinueStatementJS" defaultSeverity="WARNING" displayName="'continue' 문" enabled="false" language="JavaScript" pluginId="JavaScript" pluginVersion="252.26199.162" isGlobalTool="false">&lt;html&gt;
&lt;body&gt;
&lt;code&gt;continue&lt;/code&gt; 문을 보고합니다.
&lt;!-- tooltip end --&gt;&lt;p&gt;&lt;small&gt;Inspection ID: ContinueStatementJS&lt;/small&gt;&lt;/p&gt;&lt;/body&gt;
&lt;/html&gt;</inspection><inspection shortName="BreakStatementJS" defaultSeverity="WARNING" displayName="'break' 문" enabled="false" language="JavaScript" pluginId="JavaScript" pluginVersion="252.26199.162" isGlobalTool="false">&lt;html&gt;
&lt;body&gt;
&lt;code&gt;break&lt;/code&gt; 문을 보고합니다. case 블록을 끝내는 &lt;code&gt;break&lt;/code&gt; 문은 무시합니다.
&lt;!-- tooltip end --&gt;&lt;p&gt;&lt;small&gt;Inspection ID: BreakStatementJS&lt;/small&gt;&lt;/p&gt;&lt;/body&gt;
&lt;/html&gt;</inspection><inspection shortName="BreakStatementWithLabelJS" defaultSeverity="WARNING" displayName="라벨이 있는 'break' 문" enabled="false" language="JavaScript" pluginId="JavaScript" pluginVersion="252.26199.162" isGlobalTool="false">&lt;html&gt;
&lt;body&gt;
라벨이 지정된 &lt;code&gt;break&lt;/code&gt; 구문을 보고합니다.
&lt;!-- tooltip end --&gt;&lt;p&gt;&lt;small&gt;Inspection ID: BreakStatementWithLabelJS&lt;/small&gt;&lt;/p&gt;&lt;/body&gt;
&lt;/html&gt;</inspection><inspection shortName="CommaExpressionJS" defaultSeverity="WARNING" displayName="쉼표 표현식" enabled="true" language="JavaScript" pluginId="JavaScript" pluginVersion="252.26199.162" isGlobalTool="false">&lt;html&gt;
&lt;body&gt;
쉼표 표현식을 보고합니다. 이러한 표현식은 보통 과도하게 교묘한 코드의 징후이며 미묘한 버그로 이어질 수 있습니다.
이니셜라이저 또는 &lt;code&gt;for&lt;/code&gt; 루프의 업데이트 섹션 내 쉼표 표현식은 무시됩니다.
&lt;!-- tooltip end --&gt;&lt;p&gt;&lt;small&gt;Inspection ID: CommaExpressionJS&lt;/small&gt;&lt;/p&gt;&lt;/body&gt;
&lt;/html&gt;</inspection><inspection shortName="ContinueStatementWithLabelJS" defaultSeverity="WARNING" displayName="라벨이 있는 'continue' 문" enabled="false" language="JavaScript" pluginId="JavaScript" pluginVersion="252.26199.162" isGlobalTool="false">&lt;html&gt;
&lt;body&gt;
라벨이 지정된 &lt;code&gt;continue&lt;/code&gt; 문을 보고합니다.
&lt;!-- tooltip end --&gt;&lt;p&gt;&lt;small&gt;Inspection ID: ContinueStatementWithLabelJS&lt;/small&gt;&lt;/p&gt;&lt;/body&gt;
&lt;/html&gt;</inspection><inspection shortName="ConditionalExpressionJS" defaultSeverity="WARNING" displayName="조건식" enabled="false" language="JavaScript" pluginId="JavaScript" pluginVersion="252.26199.162" isGlobalTool="false">&lt;html&gt;
&lt;body&gt;
삼항 조건식을 보고합니다.  일부 코딩 표준은
명시적 &lt;code&gt;if&lt;/code&gt; 문을 위해
그러한 표현식을 금지합니다.
&lt;!-- tooltip end --&gt;&lt;p&gt;&lt;small&gt;Inspection ID: ConditionalExpressionJS&lt;/small&gt;&lt;/p&gt;&lt;/body&gt;
&lt;/html&gt;</inspection></group><group name="PostCSS" path=""><inspection shortName="PostCssUnresolvedModuleValueReference" defaultSeverity="ERROR" displayName="해결되지 않은 CSS 모듈 값" enabled="true" language="PostCSS" pluginId="org.intellij.plugins.postcss" pluginVersion="252.26199.162" isGlobalTool="false">&lt;html&gt;
&lt;body&gt;
&lt;a href="https://github.com/css-modules/postcss-modules-values"&gt;CSS Module Value&lt;/a&gt; (&lt;code&gt;@value&lt;/code&gt; 선언) 에 대한 해결되지 않은 참조를 보고합니다.
&lt;!-- tooltip end --&gt;
&lt;p&gt;예:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;
@value foo from unknown;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;small&gt;Inspection ID: PostCssUnresolvedModuleValueReference&lt;/small&gt;&lt;/p&gt;&lt;/body&gt;
&lt;/html&gt;</inspection><inspection shortName="PostCssNesting" defaultSeverity="WARNING" displayName="잘못된 중첩 규칙" enabled="false" language="PostCSS" pluginId="org.intellij.plugins.postcss" pluginVersion="252.26199.162" isGlobalTool="false">&lt;html&gt;
&lt;body&gt;
구문이 &lt;a href="https://github.com/postcss/postcss-nested"&gt;PostCSS Nested&lt;/a&gt;
또는 &lt;a href="https://github.com/csstools/postcss-nesting"&gt;PostCSS Nesting&lt;/a&gt; 사양을 준수하지 않는 중첩 스타일 규칙을 보고합니다.
&lt;!-- tooltip end --&gt;
&lt;p&gt;예:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;
.phone {
  &amp;_title {}
}
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;small&gt;Inspection ID: PostCssNesting&lt;/small&gt;&lt;/p&gt;&lt;/body&gt;
&lt;/html&gt;</inspection><inspection shortName="PostCssMediaRange" defaultSeverity="ERROR" displayName="잘못된 미디어 쿼리 범위" enabled="true" language="PostCSS" pluginId="org.intellij.plugins.postcss" pluginVersion="252.26199.162" isGlobalTool="false">&lt;html&gt;
&lt;body&gt;
'range' 타입인 미디어 기능으로 
대체하여 사용될 수 있는 
&lt;a href="https://github.com/postcss/postcss-media-minmax"&gt;범위 컨텍스트&lt;/a&gt; 구문을 검사합니다.
&lt;!-- tooltip end --&gt;
&lt;p&gt;예:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;
@media screen and (500px &amp;lt;= width &amp;lt;= 1200px) {}
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;small&gt;Inspection ID: PostCssMediaRange&lt;/small&gt;&lt;/p&gt;&lt;/body&gt;
&lt;/html&gt;
</inspection><inspection shortName="PostCssCustomMedia" defaultSeverity="ERROR" displayName="잘못된 사용자 지정 미디어" enabled="true" language="PostCSS" pluginId="org.intellij.plugins.postcss" pluginVersion="252.26199.162" isGlobalTool="false">&lt;html&gt;
&lt;body&gt;
&lt;a href="https://github.com/postcss/postcss-custom-media"&gt;PostCSS 사용자 지정 미디어&lt;/a&gt; 쿼리 내 구문 오류를 보고합니다.
&lt;!-- tooltip end --&gt;
&lt;p&gt;예:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;
@custom-media --small-viewport (max-width: 30em);
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;small&gt;Inspection ID: PostCssCustomMedia&lt;/small&gt;&lt;/p&gt;&lt;/body&gt;
&lt;/html&gt;</inspection><inspection shortName="PostCssCustomSelector" defaultSeverity="ERROR" displayName="잘못된 사용자 지정 선택자" enabled="true" language="PostCSS" pluginId="org.intellij.plugins.postcss" pluginVersion="252.26199.162" isGlobalTool="false">&lt;html&gt;
&lt;body&gt;
&lt;a href="https://github.com/postcss/postcss-custom-selectors"&gt;PostCSS 사용자 지정 선택자&lt;/a&gt; 내 구문 오류를 보고합니다.
&lt;!-- tooltip end --&gt;
&lt;p&gt;예:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;
@custom-selector :--heading h1, h2, h3;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;small&gt;Inspection ID: PostCssCustomSelector&lt;/small&gt;&lt;/p&gt;&lt;/body&gt;
&lt;/html&gt;</inspection></group><group name="비동기 코드 및 프로미스" path="JavaScript 및 TypeScript"><inspection shortName="JSIgnoredPromiseFromCall" defaultSeverity="WEAK WARNING" displayName="프로미스를 반환 하는 메서드 호출의 결과는 무시됩니다" enabled="true" language="JavaScript" pluginId="JavaScript" pluginVersion="252.26199.162" isGlobalTool="false">&lt;html&gt;
&lt;body&gt;
나중에 사용되지 않는 &lt;code&gt;Promise&lt;/code&gt;를 반환하는 함수 호출을 보고합니다.
그러한 호출은 보통 의도적이지 않으며 오류를 나타냅니다.
&lt;!-- tooltip end --&gt;&lt;p&gt;&lt;small&gt;Inspection ID: JSIgnoredPromiseFromCall&lt;/small&gt;&lt;/p&gt;&lt;/body&gt;
&lt;/html&gt;</inspection><inspection shortName="ES6RedundantAwait" defaultSeverity="WEAK WARNING" displayName="중복 'await' 표현식" enabled="true" language="JavaScript" pluginId="JavaScript" pluginVersion="252.26199.162" isGlobalTool="false">&lt;html&gt;
&lt;body&gt;
&lt;code&gt;await await&lt;/code&gt;처럼 &lt;code&gt;await&lt;/code&gt;의 불필요한 사용 또는 promise가 아닌 결과의 대기를 보고합니다.
&lt;!-- tooltip end --&gt;
&lt;p&gt;
  'Report for promises'(promise 보고) 옵션을 선택하면, 해당하는 경우(&lt;code&gt;return&lt;/code&gt; 문에서, 그리고 &lt;code&gt;Promise.resolve/reject&lt;/code&gt;를 사용할 때) promise 앞의 &lt;code&gt;await&lt;/code&gt;를 제거하도록 제안합니다.
&lt;/p&gt;
&lt;p&gt;이러한 컨텍스트에서 &lt;code&gt;await&lt;/code&gt;를 제거하면 두 가지 문제가 발생합니다.&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;
    &lt;code&gt;try-catch&lt;/code&gt;로 코드를 둘러싸고 &lt;code&gt;await&lt;/code&gt;를 추가하지 않으면 눈치채지 못하는 사이 코드 의미가 달라집니다.
  &lt;/li&gt;
  &lt;li&gt;
    명시적 &lt;code&gt;await&lt;/code&gt;를 사용하면 V8 런타임이 &lt;a href="http://bit.ly/v8-zero-cost-async-stack-traces"&gt;비동기 스택 추적&lt;/a&gt;을 제공하지 못할 수 있습니다.
  &lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;small&gt;Inspection ID: ES6RedundantAwait&lt;/small&gt;&lt;/p&gt;&lt;/body&gt;
&lt;/html&gt;</inspection><inspection shortName="ES6MissingAwait" defaultSeverity="WEAK WARNING" displayName="비동기 함수 호출을 위한 await 누락" enabled="true" language="JavaScript" pluginId="JavaScript" pluginVersion="252.26199.162" isGlobalTool="false">&lt;html&gt;
&lt;body&gt;
&lt;code&gt;async&lt;/code&gt; 함수 내부에 기대되는 &lt;code&gt;await&lt;/code&gt; 접두사가 없는 &lt;code&gt;async&lt;/code&gt; 함수 호출을 보고합니다.
그러한 호출은 &lt;code&gt;Promise&lt;/code&gt;를 반환하며 제어 흐름이 즉시 계속 진행됩니다.
&lt;p&gt;예:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;
async function bar() { /* ... */ }
async function foo() {
    bar(); // 나쁨
}
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;
빠른 수정은 적용된 후 &lt;code&gt;await&lt;/code&gt; 접두사가 추가됩니다:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;
async function bar() { /* ... */ }
async function foo() {
    await bar(); // 좋음
}
&lt;/code&gt;&lt;/pre&gt;
&lt;br/&gt;
'return 문의 프로미스 보고' 체크박스를 선택한 경우, return 문에 &lt;code&gt;await&lt;/code&gt;를 추가할 것을 제안합니다.&lt;br/&gt;
이는 일반적으로 필요하지 않지만 두 가지 주요 이점을 제공합니다.&lt;br/&gt;&lt;ul&gt;&lt;li&gt;
코드를 &lt;code&gt;try-catch&lt;/code&gt;로 둘러쌀 때 &lt;code&gt;await&lt;/code&gt;를 추가하는 것을 잊지 않게 됩니다.&lt;/li&gt;
&lt;li&gt;명시적 &lt;code&gt;await&lt;/code&gt;를 사용하면 V8 런타임이 &lt;a href="https://bit.ly/v8-zero-cost-async-stack-traces"&gt;비동기 스택 추적&lt;/a&gt;을 제공하는 데 도움이 됩니다.&lt;/li&gt;&lt;/ul&gt;
&lt;!-- tooltip end --&gt;&lt;p&gt;&lt;small&gt;Inspection ID: ES6MissingAwait&lt;/small&gt;&lt;/p&gt;&lt;/body&gt;
&lt;/html&gt;</inspection><inspection shortName="ES6TopLevelAwaitExpression" defaultSeverity="ERROR" displayName="최상위 'await' 표현식" enabled="false" language="JavaScript" pluginId="JavaScript" pluginVersion="252.26199.162" isGlobalTool="false">&lt;html&gt;
&lt;body&gt;
최상위 &lt;code&gt;await&lt;/code&gt; 표현식의 사용 위치를 보고합니다.
&lt;!-- tooltip end --&gt;
새로운 'top-level async' 제안이 도입될 예정이지만, async 함수 밖에서 &lt;code&gt;await&lt;/code&gt;를 사용하는 것은 허용되지 않습니다.
&lt;p&gt;&lt;small&gt;Inspection ID: ES6TopLevelAwaitExpression&lt;/small&gt;&lt;/p&gt;&lt;/body&gt;
&lt;/html&gt;</inspection><inspection shortName="ES6PossiblyAsyncFunction" defaultSeverity="WEAK WARNING" displayName="비동기가 아닌 함수 내 'await'" enabled="true" language="JavaScript" pluginId="JavaScript" pluginVersion="252.26199.162" isGlobalTool="false">&lt;html&gt;
&lt;body&gt;
비동기가 의도되었을 가능성이 있으나 실제로 &lt;code&gt;async&lt;/code&gt; 제어자가 누락되어 있는 함수 내 &lt;code&gt;await&lt;/code&gt;의 사용 위치을 보고합니다.
&lt;!-- tooltip end --&gt;
&lt;code&gt;await&lt;/code&gt;를 식별자로 사용할 수는 있지만 연산자로 사용하려고 의도했을 수 있기 때문에 그것을 포함한 함수를 &lt;code&gt;async&lt;/code&gt;로 만들어야 합니다.
&lt;p&gt;&lt;small&gt;Inspection ID: ES6PossiblyAsyncFunction&lt;/small&gt;&lt;/p&gt;&lt;/body&gt;
&lt;/html&gt;</inspection></group><group name="셸 스크립트" path=""><inspection shortName="ShellCheck" defaultSeverity="ERROR" displayName="ShellCheck" enabled="true" language="Shell Script" pluginId="com.jetbrains.sh" pluginVersion="252.26199.162" isGlobalTool="false">&lt;html&gt;
&lt;body&gt;
통합 &lt;a href="https://github.com/koalaman/shellcheck"&gt;ShellCheck&lt;/a&gt; 정적 분석 도구에 의해 탐지된 셸 스크립트 버그를 보고합니다.
&lt;!-- tooltip end --&gt;&lt;p&gt;&lt;small&gt;Inspection ID: ShellCheck&lt;/small&gt;&lt;/p&gt;&lt;/body&gt;
&lt;/html&gt;</inspection></group><group name="EJS" path=""><inspection shortName="EjsUnresolvedInclude" defaultSeverity="WARNING" displayName="해결되지 않은 Include" enabled="true" language="EJS" pluginId="com.jetbrains.lang.ejs" pluginVersion="252.26199.162" isGlobalTool="false">&lt;html&gt;
&lt;body&gt;
EJS include 내 해결되지 않은 파일 참조를 보고합니다.
&lt;!-- tooltip end --&gt;&lt;p&gt;&lt;small&gt;Inspection ID: EjsUnresolvedInclude&lt;/small&gt;&lt;/p&gt;&lt;/body&gt;
&lt;/html&gt;</inspection></group><group name="DOM 문제" path="JavaScript 및 TypeScript"><inspection shortName="PlatformDetectionJS" defaultSeverity="WARNING" displayName="정확하지 않은 플랫폼 탐지" enabled="false" language="JavaScript" pluginId="JavaScript" pluginVersion="252.26199.162" isGlobalTool="false">&lt;html&gt;
&lt;body&gt;
스크립트가 실행되는 브라우저 또는 운영 체제를 탐지하기 위한 
공통된 자바스크립트 패턴을 보고합니다. 이식 불가능한 구문을 지적하는 것 외에 
이러한 플랫폼 탐지 패턴은 일반적으로 불완전하고 쉽게 속아 넘어갑니다. 대부분의 경우, 전체 플랫폼을 탐지하려고 하기보다 각 환경 기능을 탐지하는 편이 더 낫습니다.
&lt;p&gt;탐지된 패턴은 다음을 포함합니다: &lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;code&gt;document.all&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;&lt;code&gt;document.layers&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;&lt;code&gt;navigator.userAgent&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;&lt;code&gt;navigator.oscpu&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;&lt;code&gt;navigator.appName&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;&lt;code&gt;navigator.appCodeName&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;&lt;code&gt;navigator.platform&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;!-- tooltip end --&gt;&lt;p&gt;&lt;small&gt;Inspection ID: PlatformDetectionJS&lt;/small&gt;&lt;/p&gt;&lt;/body&gt;
&lt;/html&gt;</inspection><inspection shortName="DocumentWriteJS" defaultSeverity="WARNING" displayName="'document.write()' 호출" enabled="false" language="JavaScript" pluginId="JavaScript" pluginVersion="252.26199.162" isGlobalTool="false">&lt;html&gt;
&lt;body&gt;
&lt;code&gt;document.write()&lt;/code&gt; 또는 &lt;code&gt;document.writeln()&lt;/code&gt;로의 메서드 호출을 보고합니다.
그러한 호출 사용은 대부분 &lt;code&gt;getElementByID()&lt;/code&gt; 및
&lt;code&gt;createElement()&lt;/code&gt; 등의 명시적인 DOM 호출로 실행하는 것이 좋습니다.  추가적으로, XML로 표시되는 경우 XHTML의 DOM를 포함한 XML DOM에서는 
&lt;code&gt;write()&lt;/code&gt; 및 &lt;code&gt;writeln()&lt;/code&gt; 호출이 작동하지 않습니다.  이는 버그를 지적하는 데 어려움을 초래할 수 있습니다.
&lt;!-- tooltip end --&gt;&lt;p&gt;&lt;small&gt;Inspection ID: DocumentWriteJS&lt;/small&gt;&lt;/p&gt;&lt;/body&gt;
&lt;/html&gt;</inspection><inspection shortName="XHTMLIncompatabilitiesJS" defaultSeverity="WARNING" displayName="호환되지 않는 XHTML 사용" enabled="false" language="JavaScript" pluginId="JavaScript" pluginVersion="252.26199.162" isGlobalTool="false">&lt;html&gt;
&lt;body&gt;
XHTML 문서 관련 문제를 제시할 수 있는 공통된 JavaScript DOM 패턴을 보고합니다. 특히 탐지된 패턴은 문서 로드 형식이 XML인지 HTML 인지에 따라 완전히 다르게 동작합니다.
이 때문에 스크립트의 동작이 콘텐츠가 아닌 문서의 MIME 타입에 의존하는 경우, 감지하기 어려운 버그가 발생할 수 있습니다.
탐지된 패턴은
&lt;b&gt;document.body&lt;/b&gt;,
&lt;b&gt;document.images&lt;/b&gt;,
&lt;b&gt;document.applets&lt;/b&gt;,
&lt;b&gt;document.links&lt;/b&gt;,
&lt;b&gt;document.forms&lt;/b&gt;,
&lt;b&gt;document.anchors&lt;/b&gt;을 포함합니다.
&lt;!-- tooltip end --&gt;&lt;p&gt;&lt;small&gt;Inspection ID: XHTMLIncompatabilitiesJS&lt;/small&gt;&lt;/p&gt;&lt;/body&gt;
&lt;/html&gt;
</inspection><inspection shortName="InnerHTMLJS" defaultSeverity="WARNING" displayName="'innerHTML' 프로퍼티 사용" enabled="false" language="JavaScript" pluginId="JavaScript" pluginVersion="252.26199.162" isGlobalTool="false">&lt;html&gt;
&lt;body&gt;
&lt;code&gt;innerHTML&lt;/code&gt; 프로퍼티를 사용하여 텍스트로서 DOM 노드에 액세스하는 JavaScript를 보고합니다.
대부분의 &lt;code&gt;innerHTML&lt;/code&gt; 사용은 &lt;code&gt;getElementByID()&lt;/code&gt; 및
&lt;code&gt;createElement()&lt;/code&gt; 등의 명시적인 DOM 호출로 실행하는 것이 좋습니다.  추가적으로, 
XML로 표시되는 경우 XHTML의 DOM를 포함한 XML DOM에서는 
&lt;code&gt;innerHTML&lt;/code&gt;이 작동하지 않습니다.  이는 버그 진단 시 어려움을
초래할 수 있습니다.
&lt;!-- tooltip end --&gt;&lt;p&gt;&lt;small&gt;Inspection ID: InnerHTMLJS&lt;/small&gt;&lt;/p&gt;&lt;/body&gt;
&lt;/html&gt;</inspection></group><group name="구조 검색" path=""><inspection shortName="SSBasedInspection" defaultSeverity="WARNING" displayName="구조 검색 검사" enabled="true" language="" pluginId="com.intellij" pluginVersion="252.26199.162" isGlobalTool="false">&lt;html&gt;
&lt;body&gt;
&lt;p&gt;편집 중인 파일에 적용할 수 있는 &lt;b&gt;Structural Search/Structural Replace&lt;/b&gt; 템플릿을 구성할 수 있도록 허용합니다.
&lt;/p&gt;
&lt;p&gt;모든 일치 항목이 강조 표시되며 구성한 템플릿 이름으로 표시됩니다.
&lt;b&gt;Structural Replace&lt;/b&gt; 패턴 또한 구성하는 경우, 해당 교체 옵션을 빠른 수정으로서 사용할 수 있습니다.
&lt;/p&gt;
&lt;!-- tooltip end --&gt;&lt;p&gt;&lt;small&gt;Inspection ID: SSBasedInspection&lt;/small&gt;&lt;/p&gt;&lt;/body&gt;
&lt;/html&gt;</inspection></group><group name="JSON 및 JSON5" path=""><inspection shortName="Json5StandardCompliance" defaultSeverity="ERROR" displayName="JSON5 표준 준수" enabled="true" language="JSON5" pluginId="com.intellij.modules.json" pluginVersion="252.26199.162" isGlobalTool="false">&lt;html&gt;
&lt;body&gt;
JSON5 파일 내 &lt;a href="http://json5.org"&gt;언어 사양&lt;/a&gt;의 불일치를 보고합니다.
&lt;!-- tooltip end --&gt;&lt;p&gt;&lt;small&gt;Inspection ID: Json5StandardCompliance&lt;/small&gt;&lt;/p&gt;&lt;/body&gt;
&lt;/html&gt;</inspection><inspection shortName="JsonStandardCompliance" defaultSeverity="ERROR" displayName="JSON 표준 준수" enabled="true" language="JSON" pluginId="com.intellij.modules.json" pluginVersion="252.26199.162" isGlobalTool="false">&lt;html&gt;
&lt;body&gt;
JSON 파일 내 &lt;a href="https://tools.ietf.org/html/rfc7159"&gt;언어 사양&lt;/a&gt;과의 다음 차이를 보고합니다:
&lt;ul&gt;
  &lt;li&gt;줄 또는 블록 주석(구성 가능).&lt;/li&gt;
  &lt;li&gt;여러 최상위 값(JSON Lines 파일 제외, 그 외 파일 구성 가능)&lt;/li&gt;
  &lt;li&gt;객체 또는 배열 내 후행 쉼표(구성 가능).&lt;/li&gt;
  &lt;li&gt;작은따옴표가 붙은 문자열.&lt;/li&gt;
  &lt;li&gt;프로퍼티 키가 큰 따옴표가 붙은 문자열이 아닙니다.&lt;/li&gt;
  &lt;li&gt;NaN 또는 부동 소수점 리터럴로서의 Infinity/-Infinity 숫자 값(구성 가능).&lt;/li&gt;
&lt;/ul&gt;

&lt;!-- tooltip end --&gt;&lt;p&gt;&lt;small&gt;Inspection ID: JsonStandardCompliance&lt;/small&gt;&lt;/p&gt;&lt;/body&gt;
&lt;/html&gt;</inspection><inspection shortName="JsonSchemaCompliance" defaultSeverity="WARNING" displayName="JSON 스키마 준수" enabled="true" language="JSON" pluginId="com.intellij.modules.json" pluginVersion="252.26199.162" isGlobalTool="false">&lt;html&gt;
&lt;body&gt;
JSON 파일과 해당 파일에 할당된 &lt;a href="https://json-schema.org"&gt;JSON 스키마&lt;/a&gt; 사이의 불일치를 보고합니다.&lt;br&gt;
&lt;!-- tooltip end --&gt;&lt;p&gt;&lt;small&gt;Inspection ID: JsonSchemaCompliance&lt;/small&gt;&lt;/p&gt;&lt;/body&gt;
&lt;/html&gt;</inspection><inspection shortName="JsonDuplicatePropertyKeys" defaultSeverity="WARNING" displayName="객체 리터럴 내 중복 키" enabled="true" language="JSON" pluginId="com.intellij.modules.json" pluginVersion="252.26199.162" isGlobalTool="false">&lt;html&gt;
&lt;body&gt;
객체 리터럴 내 중복 키를 보고합니다.
&lt;!-- tooltip end --&gt;&lt;p&gt;&lt;small&gt;Inspection ID: JsonDuplicatePropertyKeys&lt;/small&gt;&lt;/p&gt;&lt;/body&gt;
&lt;/html&gt;</inspection><inspection shortName="JsonSchemaRefReference" defaultSeverity="WARNING" displayName="해결되지 않은 '$ref' 및 '$schema' 참조" enabled="true" language="JSON" pluginId="com.intellij.modules.json" pluginVersion="252.26199.162" isGlobalTool="false">&lt;html&gt;
&lt;body&gt;
JSON 스키마 내 해결되지 않은 &lt;code&gt;$ref&lt;/code&gt; 또는 &lt;code&gt;$schema&lt;/code&gt; 경로를 보고합니다.&lt;br&gt;
&lt;!-- tooltip end --&gt;&lt;p&gt;&lt;small&gt;Inspection ID: JsonSchemaRefReference&lt;/small&gt;&lt;/p&gt;&lt;/body&gt;
&lt;/html&gt;</inspection><inspection shortName="JsonSchemaDeprecation" defaultSeverity="WEAK WARNING" displayName="곧 사용할 수 없게 될 JSON 프로퍼티" enabled="true" language="JSON" pluginId="com.intellij.modules.json" pluginVersion="252.26199.162" isGlobalTool="false">&lt;html&gt;
&lt;body&gt;
JSON 파일 내 사용이 중단된 프로퍼티를 보고합니다.&lt;br&gt;
사용 중단 메커니즘은 JSON 스키마 사양에 아직 정의되어 있지 않으며
이 검사는 비 표준 확장인 'deprecationMessage'을 사용합니다.
&lt;!-- tooltip end --&gt;&lt;p&gt;&lt;small&gt;Inspection ID: JsonSchemaDeprecation&lt;/small&gt;&lt;/p&gt;&lt;/body&gt;
&lt;/html&gt;</inspection></group><group name="PostgreSQL" path=""><inspection shortName="PgSelectFromProcedureInspection" defaultSeverity="WARNING" displayName="Postgres: 프로시저 호출에서 선택" enabled="true" language="SQL" pluginId="com.intellij.database" pluginVersion="252.26199.162" isGlobalTool="false">&lt;html&gt;
&lt;body&gt;
타입이 있는 별칭(예: &lt;code&gt;AS t1(s VARCHAR)&lt;/code&gt;) 없이 함수나 DBLINK를 대상으로 SELECT를 만드는 경우를 보고합니다.
  &lt;p&gt;이 요구 조건은 스칼라 함수에는 적용되지 않습니다.&lt;/p&gt;
&lt;p&gt;예시(PostgreSQL):&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;CREATE FUNCTION produce_a_table() RETURNS RECORD AS $$
SELECT 1;
$$ LANGUAGE sql;
SELECT * FROM produce_a_table() AS s (c1 INT);
SELECT * FROM produce_a_table() AS s (c1);
SELECT * FROM DBLINK('dbname=mydb', 'SELECT proname, prosrc FROM pg_proc') AS t1;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;code&gt;AS s (c1 INT) &lt;/code&gt;에는 타입 별칭이 있지만 &lt;code&gt;AS s (c1)&lt;/code&gt; 및 &lt;code&gt;AS t1&lt;/code&gt;에는 타입 별칭이 없습니다.
  이 경우, 두 번째 &lt;code&gt;produce_a_table()&lt;/code&gt; 호출 및 &lt;code&gt;DBLINK()&lt;/code&gt;가 강조 표시됩니다.
&lt;/p&gt;
&lt;!-- tooltip end --&gt;&lt;p&gt;&lt;small&gt;Inspection ID: PgSelectFromProcedureInspection&lt;/small&gt;&lt;/p&gt;&lt;/body&gt;
&lt;/html&gt;</inspection></group><group name="Flow 타입 검사기" path="JavaScript 및 TypeScript"><inspection shortName="FlowJSConfig" defaultSeverity="WARNING" displayName=".flowconfig 누락" enabled="true" language="Flow JS" pluginId="JavaScript" pluginVersion="252.26199.162" isGlobalTool="false">&lt;html&gt;
&lt;body&gt;
프로젝트 내에 관련 &lt;code&gt;.flowconfig&lt;/code&gt; 파일이 없지만 &lt;code&gt;@flow&lt;/code&gt; 플래그를 포함하는 JavaScript 파일을 보고합니다.
&lt;!-- tooltip end --&gt;&lt;p&gt;&lt;small&gt;Inspection ID: FlowJSConfig&lt;/small&gt;&lt;/p&gt;&lt;/body&gt;
&lt;/html&gt;</inspection><inspection shortName="FlowJSFlagCommentPlacement" defaultSeverity="WARNING" displayName="잘못된 위치에 사용된 @flow 태그" enabled="true" language="Flow JS" pluginId="JavaScript" pluginVersion="252.26199.162" isGlobalTool="false">&lt;html&gt;
&lt;body&gt;
파일 맨 위에 위치하지 않는 &lt;code&gt;@flow&lt;/code&gt; 플래그 주석을 보고합니다.
&lt;!-- tooltip end --&gt;&lt;p&gt;&lt;small&gt;Inspection ID: FlowJSFlagCommentPlacement&lt;/small&gt;&lt;/p&gt;&lt;/body&gt;
&lt;/html&gt;</inspection></group><group name="접근성" path="HTML"><inspection shortName="HtmlRequiredSummaryAttribute" defaultSeverity="INFORMATION" displayName="필요한 'summary' 속성 누락" enabled="false" language="XML" pluginId="HtmlTools" pluginVersion="252.26199.162" isGlobalTool="false">&lt;html&gt;
&lt;body&gt;
&lt;code&gt;table&lt;/code&gt; 태그 내 누락된 &lt;code&gt;summary&lt;/code&gt; 속성을 보고합니다. &lt;code&gt;summary&lt;/code&gt; 속성을 추가할 것을 제안합니다. WCAG 2.0 &lt;a href="https://www.w3.org/TR/WCAG20-TECHS/H73.html"&gt;H73&lt;/a&gt;에 기반합니다.
&lt;!-- tooltip end --&gt;&lt;p&gt;&lt;small&gt;Inspection ID: HtmlRequiredSummaryAttribute&lt;/small&gt;&lt;/p&gt;&lt;/body&gt;
&lt;/html&gt;</inspection><inspection shortName="HtmlRequiredTitleAttribute" defaultSeverity="INFORMATION" displayName="필요한 'title' 속성 누락" enabled="false" language="XML" pluginId="HtmlTools" pluginVersion="252.26199.162" isGlobalTool="false">&lt;html&gt;
&lt;body&gt;
&lt;code&gt;frame&lt;/code&gt;, &lt;code&gt;iframe&lt;/code&gt;, &lt;code&gt;dl&lt;/code&gt;, &lt;code&gt;a&lt;/code&gt; 태그 내 누락된 title 속성을 보고합니다. title 속성을 추가할 것을 제안합니다. WCAG 2.0 &lt;a href="https://www.w3.org/TR/WCAG20-TECHS/H33.html"&gt;H33&lt;/a&gt;, &lt;a href="https://www.w3.org/TR/WCAG20-TECHS/H40.html"&gt;H40&lt;/a&gt;, &lt;a href="https://www.w3.org/TR/WCAG20-TECHS/H64.html"&gt;H64&lt;/a&gt;에 기반합니다.
&lt;!-- tooltip end --&gt;&lt;p&gt;&lt;small&gt;Inspection ID: HtmlRequiredTitleAttribute&lt;/small&gt;&lt;/p&gt;&lt;/body&gt;
&lt;/html&gt;</inspection><inspection shortName="HtmlFormInputWithoutLabel" defaultSeverity="WARNING" displayName="관련된 라벨 누락" enabled="true" language="XML" pluginId="HtmlTools" pluginVersion="252.26199.162" isGlobalTool="false">&lt;html&gt;
&lt;body&gt;
관련 라벨이 없는 form 요소(&lt;code&gt;input&lt;/code&gt;, &lt;code&gt;textarea&lt;/code&gt;, 또는 &lt;code&gt;select&lt;/code&gt;)를 보고합니다. 새 라벨을 생성할 것을 제안합니다. WCAG 2.0 &lt;a href="https://www.w3.org/TR/WCAG20-TECHS/H44.html"&gt;H44&lt;/a&gt;에 기반합니다.&lt;br&gt;
&lt;!-- tooltip end --&gt;&lt;p&gt;&lt;small&gt;Inspection ID: HtmlFormInputWithoutLabel&lt;/small&gt;&lt;/p&gt;&lt;/body&gt;
&lt;/html&gt;</inspection><inspection shortName="HtmlRequiredTitleElement" defaultSeverity="WARNING" displayName="필요한 'title' 요소 누락" enabled="true" language="XML" pluginId="HtmlTools" pluginVersion="252.26199.162" isGlobalTool="false">&lt;html&gt;
&lt;body&gt;
&lt;code&gt;head&lt;/code&gt; 섹션 내부의 누락된 &lt;code&gt;title&lt;/code&gt; 요소를 보고합니다. &lt;code&gt;title&lt;/code&gt; 요소를 추가할 것을 제안합니다. 제목은 문서를 설명해야 합니다. WCAG 2.0 &lt;a href="https://www.w3.org/TR/WCAG20-TECHS/H25.html"&gt;H25&lt;/a&gt;에 기반합니다.
&lt;!-- tooltip end --&gt;&lt;p&gt;&lt;small&gt;Inspection ID: HtmlRequiredTitleElement&lt;/small&gt;&lt;/p&gt;&lt;/body&gt;
&lt;/html&gt;</inspection><inspection shortName="HtmlRequiredAltAttribute" defaultSeverity="WARNING" displayName="필요한 'alt' 속성 누락" enabled="true" language="XML" pluginId="HtmlTools" pluginVersion="252.26199.162" isGlobalTool="false">&lt;html&gt;
&lt;body&gt;
&lt;code&gt;img&lt;/code&gt; 또는 &lt;code&gt;applet&lt;/code&gt; 태그 내 혹은 이미지 맵의 &lt;code&gt;area&lt;/code&gt; 요소 내 누락된 &lt;code&gt;alt&lt;/code&gt; 속성을 보고합니다. 태그 콘텐츠의 대체 텍스트를 포함하는 필수 속성을 추가할 것을 제안합니다. WCAG 2.0 &lt;a href="https://www.w3.org/TR/WCAG20-TECHS/H24.html"&gt;H24&lt;/a&gt;, &lt;a href="https://www.w3.org/TR/WCAG20-TECHS/H35.html"&gt;H35&lt;/a&gt;, &lt;a href="https://www.w3.org/TR/WCAG20-TECHS/H36.html"&gt;H36&lt;/a&gt;, &lt;a href="https://www.w3.org/TR/WCAG20-TECHS/H37.html"&gt;H37&lt;/a&gt;에 기반합니다.
&lt;!-- tooltip end --&gt;&lt;p&gt;&lt;small&gt;Inspection ID: HtmlRequiredAltAttribute&lt;/small&gt;&lt;/p&gt;&lt;/body&gt;
&lt;/html&gt;</inspection><inspection shortName="HtmlRequiredLangAttribute" defaultSeverity="WARNING" displayName="필요한 'lang' 속성 누락" enabled="true" language="XML" pluginId="HtmlTools" pluginVersion="252.26199.162" isGlobalTool="false">&lt;html&gt;
&lt;body&gt;
&lt;code&gt;html&lt;/code&gt; 태그 내 누락된 &lt;code&gt;lang&lt;/code&gt;(또는&lt;code&gt;xml:lang&lt;/code&gt;) 속성을 보고합니다. 문서의 디폴트 언어를 명시하는 필수 속성을 추가할 것을 제안합니다. WCAG 2.0 &lt;a href="https://www.w3.org/TR/WCAG20-TECHS/H57.html"&gt;H57&lt;/a&gt;에 기반합니다.
&lt;!-- tooltip end --&gt;&lt;p&gt;&lt;small&gt;Inspection ID: HtmlRequiredLangAttribute&lt;/small&gt;&lt;/p&gt;&lt;/body&gt;
&lt;/html&gt;</inspection></group><group name="CSS" path=""><inspection shortName="CssOverwrittenProperties" defaultSeverity="WARNING" displayName="덮어쓰기 한 프로퍼티" enabled="true" language="CSS" pluginId="com.intellij.css" pluginVersion="252.26199.162" isGlobalTool="false">&lt;html&gt;
&lt;body&gt;
규칙 집합 내 중복된 CSS 프로퍼티를 보고합니다. 단축 프로퍼티를 따릅니다.
&lt;p&gt;&lt;b&gt;예:&lt;/b&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;
.foo {
  margin-bottom: 1px;
  margin-bottom: 1px; /* duplicates margin-bottom */
  margin: 0; /* overrides margin-bottom */
}
&lt;/code&gt;&lt;/pre&gt;
&lt;!-- tooltip end --&gt;
&lt;p&gt;&lt;small&gt;Inspection ID: CssOverwrittenProperties&lt;/small&gt;&lt;/p&gt;&lt;/body&gt;
&lt;/html&gt;</inspection><inspection shortName="CssDeprecatedValue" defaultSeverity="ERROR" displayName="지원 중단된 값" enabled="true" language="CSS" pluginId="com.intellij.css" pluginVersion="252.26199.162" isGlobalTool="false">&lt;html&gt;
&lt;body&gt;
지원 중단된 CSS 값을 보고합니다. 지원 중단된 값을 유효하며 동등한 값으로 바꾸도록 제안합니다.
&lt;!-- tooltip end --&gt;&lt;p&gt;&lt;small&gt;Inspection ID: CssDeprecatedValue&lt;/small&gt;&lt;/p&gt;&lt;/body&gt;
&lt;/html&gt;</inspection><inspection shortName="CssConvertColorToHexInspection" defaultSeverity="WARNING" displayName="색상을 #-hex로 바꿀 수 있습니다" enabled="false" language="CSS" pluginId="com.intellij.css" pluginVersion="252.26199.162" isGlobalTool="false">&lt;html&gt;
&lt;body&gt;
&lt;code&gt;rgb()&lt;/code&gt;, &lt;code&gt;hsl()&lt;/code&gt;, 또는 기타 색상 함수를 보고합니다.
&lt;p&gt;색상 함수를 동등한 16진수 표기로 교체할 것을 제안합니다.&lt;/p&gt;
&lt;p&gt;&lt;b&gt;예:&lt;/b&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;rgb(12, 15, 255)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;빠른 수정을 적용한 후:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;#0c0fff&lt;/code&gt;.&lt;/pre&gt;
&lt;!-- tooltip end --&gt;
&lt;p&gt;&lt;small&gt;Inspection ID: CssConvertColorToHexInspection&lt;/small&gt;&lt;/p&gt;&lt;/body&gt;
&lt;/html&gt;</inspection><inspection shortName="CssConvertColorToRgbInspection" defaultSeverity="WARNING" displayName="색상을 rgb()로 바꿀 수 있습니다" enabled="false" language="CSS" pluginId="com.intellij.css" pluginVersion="252.26199.162" isGlobalTool="false">&lt;html&gt;
&lt;body&gt;
&lt;code&gt;hsl()&lt;/code&gt; 및 &lt;code&gt;hwb()&lt;/code&gt; 색상 함수 또는 16진수 색상 표기를 보고합니다.
&lt;p&gt;그러한 색상 값을 동등한 &lt;code&gt;rgb()&lt;/code&gt; 또는 &lt;code&gt;rgba()&lt;/code&gt; 색상 함수로 바꿀 것을 제안합니다.&lt;/p&gt;
&lt;p&gt;&lt;b&gt;예:&lt;/b&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;#0c0fff&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;빠른 수정을 적용한 후:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;rgb(12, 15, 255)&lt;/code&gt;.&lt;/pre&gt;
&lt;!-- tooltip end --&gt;
&lt;p&gt;&lt;small&gt;Inspection ID: CssConvertColorToRgbInspection&lt;/small&gt;&lt;/p&gt;&lt;/body&gt;
&lt;/html&gt;</inspection><inspection shortName="CssUnusedSymbol" defaultSeverity="WARNING" displayName="사용되지 않는 선택자" enabled="true" language="CSS" pluginId="com.intellij.css" pluginVersion="252.26199.162" isGlobalTool="true">&lt;html&gt;
&lt;body&gt;
선택자에 표시되나 HTML에서 사용되지 않는 CSS 클래스 또는 요소 ID를 보고합니다.
&lt;p&gt;
  단, &lt;b&gt;Code(코드) | Inspect Code(코드 검사)&lt;/b&gt; 또는 &lt;b&gt;Code(코드) | Analyze Code(코드 분석) | Run Inspection by Name(이름별로 검사 실행)&lt;/b&gt;을 통해 실행한 경우에만 완전한 검사 결과가 제공됩니다.
  성능상의 이유로 스타일시트 파일이 즉각적으로 검사되지 않습니다.
&lt;/p&gt;
&lt;!-- tooltip end --&gt;
&lt;p&gt;&lt;small&gt;Inspection ID: CssUnusedSymbol&lt;/small&gt;&lt;/p&gt;&lt;/body&gt;
&lt;/html&gt;</inspection><inspection shortName="CssBrowserCompatibilityForProperties" defaultSeverity="WARNING" displayName="프로퍼티가 선택한 브라우저와 호환되지 않습니다" enabled="false" language="CSS" pluginId="com.intellij.css" pluginVersion="252.26199.162" isGlobalTool="false">&lt;html&gt;
&lt;body&gt;
특정 브라우저에서 지원하지 않는 CSS 프로퍼티를 보고합니다.
&lt;a href="https://github.com/mdn/browser-compat-data"&gt;MDN 호환성 데이터&lt;/a&gt;에 기반합니다.
&lt;!-- tooltip end --&gt;&lt;p&gt;&lt;small&gt;Inspection ID: CssBrowserCompatibilityForProperties&lt;/small&gt;&lt;/p&gt;&lt;/body&gt;
&lt;/html&gt;</inspection><inspection shortName="CssReplaceWithShorthandUnsafely" defaultSeverity="INFORMATION" displayName="프로퍼티를 축약으로 바꿀 수 있습니다" enabled="true" language="CSS" pluginId="com.intellij.css" pluginVersion="252.26199.162" isGlobalTool="false">&lt;html&gt;
&lt;body&gt;
긴 CSS 프로퍼티 집합을 보고하고 불완전한 긴 CSS 프로퍼티 집합을 짧은 형식으로 바꿀 것을 제안합니다(단, 두 형식은 100% 동등하지 않음).
&lt;p&gt;
  예를 들어, 2개의 프로퍼티 &lt;code&gt;outline-color&lt;/code&gt; 및 &lt;code&gt;outline-style&lt;/code&gt;을 하나의 &lt;code&gt;outline&lt;/code&gt;으로 바꿀 수 있습니다.
  단축 양식은 모든 누락된 하위 값을 초기 상태로 재설정하므로 그러한 교체는 100% 동등하지 않습니다.
  이 예시에서 &lt;code&gt;outline&lt;/code&gt;이라는 짧은 형식으로 바꾸면 &lt;code&gt;outline-width&lt;/code&gt; 역시 초기 값인 &lt;code&gt;medium&lt;/code&gt;으로 재설정됩니다.
&lt;/p&gt;
&lt;!-- tooltip end --&gt;
&lt;p&gt;
  이 검사는 긴 프로퍼티의 전체 집합을 다루지 않습니다(짧은 형식으로 바꾸면 100% 안전할 경우).
  그러한 경우, '프로퍼티를 안전하게 단축 속성으로 바꿀수 있습니다' 검사를 고려하십시오.
&lt;/p&gt;
&lt;p&gt;&lt;small&gt;Inspection ID: CssReplaceWithShorthandUnsafely&lt;/small&gt;&lt;/p&gt;&lt;/body&gt;
&lt;/html&gt;</inspection><inspection shortName="CssReplaceWithShorthandSafely" defaultSeverity="WEAK WARNING" displayName="프로퍼티를 축약으로 안전하게 바꿀 수 있습니다" enabled="true" language="CSS" pluginId="com.intellij.css" pluginVersion="252.26199.162" isGlobalTool="false">&lt;html&gt;
&lt;body&gt;
본디 프로퍼티 집합을 보고합니다. 완전한 본디 CSS 프로퍼티 집합을 동등한 단축 양식으로 바꿀 것을 제안합니다.
&lt;p&gt;
  예를 들어, 4개의 프로퍼티 &lt;code&gt;padding-top&lt;/code&gt;, &lt;code&gt;padding-right&lt;/code&gt;, &lt;code&gt;padding-bottom&lt;/code&gt;, &lt;code&gt;padding-left&lt;/code&gt;를 하나의 &lt;code&gt;padding&lt;/code&gt; 프로퍼티로 안전하게 바꿀 수 있습니다.
&lt;/p&gt;
&lt;p&gt;
  짧은 프로퍼티로 전환하면 결과가 달라질 수 있으므로 긴 프로퍼티 집합이 불완전할 경우 이 검사는 나타나지 않습니다(예: 규칙 집합의 3개뿐인 &lt;code&gt;padding-xxx&lt;/code&gt; 프로퍼티).
  그러한 경우, 'Properties may probably be replaced with a shorthand'(프로퍼티를 짧은 프로퍼티로 안전하게 대체 가능) 검사를 고려해보세요.
&lt;/p&gt;
&lt;!-- tooltip end --&gt;
&lt;p&gt;&lt;small&gt;Inspection ID: CssReplaceWithShorthandSafely&lt;/small&gt;&lt;/p&gt;&lt;/body&gt;
&lt;/html&gt;</inspection></group><group name="Qodana" path=""><inspection shortName="CyclomaticComplexityInspection" defaultSeverity="WARNING" displayName="코드 메트릭" enabled="false" language="" pluginId="org.intellij.qodana" pluginVersion="252.26199.162" isGlobalTool="false">&lt;html&gt;
&lt;body&gt;
순환 복잡도를 계산합니다.
&lt;!-- tooltip end --&gt;&lt;p&gt;&lt;small&gt;Inspection ID: CyclomaticComplexityInspection&lt;/small&gt;&lt;/p&gt;&lt;/body&gt;
&lt;/html&gt;</inspection></group><group name="국제화" path=""><inspection shortName="LossyEncoding" defaultSeverity="WARNING" displayName="손실 인코딩" enabled="true" language="" pluginId="com.intellij" pluginVersion="252.26199.162" isGlobalTool="false">&lt;html&gt;
&lt;body&gt;

현재 문서 인코딩으로 인해 표시할 수 없는 문자를 보고합니다.
&lt;p&gt;예:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;b&gt;US-ASCII&lt;/b&gt; 문자 집합이 있는 문서에 국제 문자를 입력하면 저장 시 일부 문자가 손실됩니다.&lt;/li&gt;
  &lt;li&gt;&lt;b&gt;ISO-8859-1&lt;/b&gt; 1바이트 문자 집합을 사용하여 &lt;b&gt;UTF-8&lt;/b&gt; 인코딩 파일을 로드하면 일부 문자가 잘못 표시됩니다.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;이 문제를 해결하려면 파일에 직접 인코딩을 지정(예: XML 파일의 XML prolog에서 &lt;code&gt;encoding=&lt;/code&gt; 속성을 편집)하거나 &lt;b&gt;Settings(설정) | Editor(에디터) | File Encodings(파일 인코딩)&lt;/b&gt;에서 해당 옵션을 변경하여 파일 인코딩을 변경하면 됩니다.&lt;/p&gt;

&lt;!-- tooltip end --&gt;&lt;p&gt;&lt;small&gt;Inspection ID: LossyEncoding&lt;/small&gt;&lt;/p&gt;&lt;/body&gt;
&lt;/html&gt;</inspection><inspection shortName="NonAsciiCharacters" defaultSeverity="WARNING" displayName="비 ASCII 문자" enabled="true" language="" pluginId="com.intellij" pluginVersion="252.26199.162" isGlobalTool="false">&lt;html&gt;
&lt;body&gt;
특이한 컨텍스트에서 ASCII가 아닌 기호를 사용하는 코드 요소를 보고합니다.

&lt;p&gt;예:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;식별자, 문자열 또는 주석에 사용되는 ASCII가 아닌 문자입니다.&lt;/li&gt;
  &lt;li&gt;예를 들어 Cyrillic로 작성된 문자 &lt;code&gt;&lt;b&gt;C&lt;/b&gt;&lt;/code&gt;가 &lt;code&gt;my&lt;b&gt;C&lt;/b&gt;ollection&lt;/code&gt;에 있는 경우처럼 다양한 언어로 작성된 식별자가 이에 해당합니다.&lt;/li&gt;
  &lt;li&gt;긴 대시 및 화살표와 같은 유니코드 기호를 포함하는 주석 또는 문자열입니다.&lt;/li&gt;
&lt;/ul&gt;

&lt;!-- tooltip end --&gt;&lt;p&gt;&lt;small&gt;Inspection ID: NonAsciiCharacters&lt;/small&gt;&lt;/p&gt;&lt;/body&gt;
&lt;/html&gt;</inspection></group><group name="제어 흐름 이슈" path="JavaScript 및 TypeScript"><inspection shortName="IfStatementWithTooManyBranchesJS" defaultSeverity="WARNING" displayName="브랜치가 너무 많은 'if' 문" enabled="false" language="JavaScript" pluginId="JavaScript" pluginVersion="252.26199.162" isGlobalTool="false">&lt;html&gt;
&lt;body&gt;
브랜치가 너무 많은 &lt;code&gt;if&lt;/code&gt; 문을 보고합니다. 그러한 구문은 혼란을 일으킬 수 있으며
보통 적절하지 않은 수준의 디자인 추상화를 나타냅니다.
&lt;!-- tooltip end --&gt;
&lt;p&gt;
  아래 필드를 사용해 기대되는 브랜치의 최대 개수를 지정하세요.
&lt;p&gt;&lt;small&gt;Inspection ID: IfStatementWithTooManyBranchesJS&lt;/small&gt;&lt;/p&gt;&lt;/body&gt;
&lt;/html&gt;</inspection><inspection shortName="UnnecessaryLabelJS" defaultSeverity="WARNING" displayName="불필요한 라벨" enabled="true" language="JavaScript" pluginId="JavaScript" pluginVersion="252.26199.162" isGlobalTool="false">&lt;html&gt;
&lt;body&gt;
사용되지 않는 라벨을 보고합니다.
&lt;!-- tooltip end --&gt;&lt;p&gt;&lt;small&gt;Inspection ID: UnnecessaryLabelJS&lt;/small&gt;&lt;/p&gt;&lt;/body&gt;
&lt;/html&gt;</inspection><inspection shortName="ForLoopReplaceableByWhileJS" defaultSeverity="WARNING" displayName="'for' 루프를 'while' 루프로 바꿀 수 있음" enabled="false" language="JavaScript" pluginId="JavaScript" pluginVersion="252.26199.162" isGlobalTool="false">&lt;html&gt;
&lt;body&gt;
초기화와 업데이트 구성 요소를 모두 포함하지 않는 &lt;code&gt;for&lt;/code&gt; 루프를 보고합니다. 루프를 간단한 &lt;code&gt;while&lt;/code&gt; 문으로 바꿀 것을 제안합니다.
&lt;p&gt;예:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;
  for(; exitCondition(); ) {
    process();
  }
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;빠른 수정이 적용된 후 결과는 다음과 같습니다.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;
  while(exitCondition()) {
    process();
  }
&lt;/code&gt;&lt;/pre&gt;
&lt;!-- tooltip end --&gt;
&lt;p&gt;이 검사가 자명하거나 존재하지 않는 조건을 포함하는 &lt;b&gt;for&lt;/b&gt; 루프를 무시하기를 원한다면 아래 체크박스를 사용하십시오.&lt;/p&gt;
&lt;p&gt;&lt;small&gt;Inspection ID: ForLoopReplaceableByWhileJS&lt;/small&gt;&lt;/p&gt;&lt;/body&gt;
&lt;/html&gt;</inspection><inspection shortName="UnnecessaryContinueJS" defaultSeverity="WARNING" displayName="불필요한 'continue' 문" enabled="true" language="JavaScript" pluginId="JavaScript" pluginVersion="252.26199.162" isGlobalTool="false">&lt;html&gt;
&lt;body&gt;
루프 끝의 불필요한 &lt;code&gt;continue&lt;/code&gt; 문을 보고합니다. 그러한 구문을 제거할 것을 제안합니다.
&lt;!-- tooltip end --&gt;&lt;p&gt;&lt;small&gt;Inspection ID: UnnecessaryContinueJS&lt;/small&gt;&lt;/p&gt;&lt;/body&gt;
&lt;/html&gt;</inspection><inspection shortName="UnnecessaryLabelOnBreakStatementJS" defaultSeverity="WARNING" displayName="'break' 문의 불필요한 라벨" enabled="true" language="JavaScript" pluginId="JavaScript" pluginVersion="252.26199.162" isGlobalTool="false">&lt;html&gt;
&lt;body&gt;
제어의 흐름을 변경하지 않고 삭제할 수 있는 라벨이 지정된 &lt;code&gt;break&lt;/code&gt; 문을 보고합니다.
&lt;!-- tooltip end --&gt;&lt;p&gt;&lt;small&gt;Inspection ID: UnnecessaryLabelOnBreakStatementJS&lt;/small&gt;&lt;/p&gt;&lt;/body&gt;
&lt;/html&gt;</inspection><inspection shortName="LoopStatementThatDoesntLoopJS" defaultSeverity="WARNING" displayName="루프를 실행하지 않는 루프 문" enabled="true" language="JavaScript" pluginId="JavaScript" pluginVersion="252.26199.162" isGlobalTool="false">&lt;html&gt;
&lt;body&gt;
본문이 최대 한 번 실행되는 것이 보증되는 &lt;code&gt;for&lt;/code&gt;, &lt;code&gt;while&lt;/code&gt;, 또는 &lt;code&gt;do&lt;/code&gt; 문을 보고합니다. 이는 보통 오류를 나타냅니다.
&lt;!-- tooltip end --&gt;&lt;p&gt;&lt;small&gt;Inspection ID: LoopStatementThatDoesntLoopJS&lt;/small&gt;&lt;/p&gt;&lt;/body&gt;
&lt;/html&gt;</inspection><inspection shortName="JSObjectNullOrUndefined" defaultSeverity="WARNING" displayName="객체가 'null' 또는 'undefined'입니다" enabled="true" language="JavaScript" pluginId="JavaScript" pluginVersion="252.26199.162" isGlobalTool="false">&lt;html&gt;
&lt;body&gt;
&lt;code&gt;undefined&lt;/code&gt; 또는 &lt;code&gt;null&lt;/code&gt;인 객체에서 메서드 호출, 프로퍼티 접근, 또는 함수 호출로 발생한 오류를 보고합니다.
&lt;!-- tooltip end --&gt;&lt;p&gt;&lt;small&gt;Inspection ID: JSObjectNullOrUndefined&lt;/small&gt;&lt;/p&gt;&lt;/body&gt;
&lt;/html&gt;</inspection><inspection shortName="SuspiciousTypeOfGuard" defaultSeverity="WARNING" displayName="소리 없는 타입 가드 검사" enabled="true" language="JavaScript" pluginId="JavaScript" pluginVersion="252.26199.162" isGlobalTool="false">&lt;html&gt;
&lt;body&gt;
받아들여지지 않는 &lt;code&gt;typeof&lt;/code&gt; 또는 &lt;code&gt;instanceof&lt;/code&gt; 타입 가드 검사를 보고합니다.
&lt;code&gt;typeof x&lt;/code&gt; 타입 가드는 다음 두 가지 경우 중 하나에 받아들여지지 않을 수 있습니다:
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;typeof x&lt;/code&gt;는 절대 지정된 값에 해당하지 않습니다(예: &lt;code&gt;x&lt;/code&gt;가 'string | boolean' 타입인 경우 &lt;code&gt;typeof x === 'number'&lt;/code&gt;).&lt;/li&gt;
&lt;li&gt;&lt;code&gt;typeof x&lt;/code&gt;는 항상 지정된 값에 해당합니다(예: &lt;code&gt;x&lt;/code&gt;가 'string' 타입인 경우 &lt;code&gt;typeof x === 'string'&lt;/code&gt;).&lt;/li&gt;
&lt;/ul&gt;
&lt;br&gt;
&lt;code&gt;x instanceof A&lt;/code&gt; 타입 가드는 다음 두 가지 경우 중 하나에 받아들여지지 않을 수 있습니다:
&lt;ul&gt;
  &lt;li&gt;&lt;code&gt;x&lt;/code&gt;의 타입은 &lt;code&gt;A&lt;/code&gt;와 관련이 없습니다&lt;/li&gt;
  &lt;li&gt;&lt;code&gt;x&lt;/code&gt;의 타입은 &lt;code&gt;A&lt;/code&gt;이거나 &lt;code&gt;A&lt;/code&gt;의 하위 타입입니다&lt;/li&gt;
&lt;/ul&gt;
&lt;!-- tooltip end --&gt;&lt;p&gt;&lt;small&gt;Inspection ID: SuspiciousTypeOfGuard&lt;/small&gt;&lt;/p&gt;&lt;/body&gt;
&lt;/html&gt;</inspection><inspection shortName="TrivialIfJS" defaultSeverity="WARNING" displayName="중복 'if' 문" enabled="true" language="JavaScript" pluginId="JavaScript" pluginVersion="252.26199.162" isGlobalTool="false">&lt;html&gt;
&lt;body&gt;
단일 대입 또는 &lt;code&gt;return&lt;/code&gt; 문으로 
단순화할 수 있는 &lt;code&gt;if&lt;/code&gt; 문을 
보고합니다.  &lt;p&gt;예:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;
if(foo())
 {
  return true;
 }
 else
 {
   return false;
 }
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;빠른 수정이 적용된 후 코드는 다음과 같습니다:&lt;/p&gt;
&lt;pre&gt;
 &lt;code&gt;return foo();&lt;/code&gt;
&lt;/pre&gt;
&lt;!-- tooltip end --&gt;&lt;p&gt;&lt;small&gt;Inspection ID: TrivialIfJS&lt;/small&gt;&lt;/p&gt;&lt;/body&gt;
&lt;/html&gt;</inspection><inspection shortName="ConditionalExpressionWithIdenticalBranchesJS" defaultSeverity="WARNING" displayName="동일한 브랜치가 있는 조건식" enabled="false" language="JavaScript" pluginId="JavaScript" pluginVersion="252.26199.162" isGlobalTool="false">&lt;html&gt;
&lt;body&gt;
동일한 &lt;code&gt;then&lt;/code&gt; 및 &lt;code&gt;else&lt;/code&gt; 브랜치를 포함하는 삼항 조건식을 보고합니다.
&lt;!-- tooltip end --&gt;&lt;p&gt;&lt;small&gt;Inspection ID: ConditionalExpressionWithIdenticalBranchesJS&lt;/small&gt;&lt;/p&gt;&lt;/body&gt;
&lt;/html&gt;</inspection><inspection shortName="ConstantConditionalExpressionJS" defaultSeverity="WARNING" displayName="상수 조건식" enabled="true" language="JavaScript" pluginId="JavaScript" pluginVersion="252.26199.162" isGlobalTool="false">&lt;html&gt;
&lt;body&gt;
서식이 다음과 같은 조건식을 보고합니다: &lt;code&gt;true? result1: result2&lt;/code&gt; 또는 &lt;code&gt;false? result1: result2&lt;/b&gt;.
표현식을 단순화할 것을 제안합니다.
&lt;!-- tooltip end --&gt;&lt;p&gt;&lt;small&gt;Inspection ID: ConstantConditionalExpressionJS&lt;/small&gt;&lt;/p&gt;&lt;/body&gt;
&lt;/html&gt;</inspection><inspection shortName="TrivialConditionalJS" defaultSeverity="WARNING" displayName="중복 조건식" enabled="true" language="JavaScript" pluginId="JavaScript" pluginVersion="252.26199.162" isGlobalTool="false">&lt;html&gt;
&lt;body&gt;
서식이 다음과 같은 조건식을 보고합니다.
&lt;pre&gt;&lt;code&gt;
condition ? true : false
condition ? false : true
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;
  이러한 표현식은 다음으로 안전하게 변환할 수 있습니다.
&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;
condition
!condition
&lt;/code&gt;&lt;/pre&gt;
&lt;!-- tooltip end --&gt;
&lt;p&gt;&lt;small&gt;Inspection ID: TrivialConditionalJS&lt;/small&gt;&lt;/p&gt;&lt;/body&gt;
&lt;/html&gt;</inspection><inspection shortName="DuplicateConditionJS" defaultSeverity="WARNING" displayName="'if' 문의 중복 조건" enabled="false" language="JavaScript" pluginId="JavaScript" pluginVersion="252.26199.162" isGlobalTool="false">&lt;html&gt;
&lt;body&gt;
&lt;code&gt;if&lt;/code&gt; 문의 각기 다른 브랜치에서 중복된 조건을 보고합니다. 조건 중복은 보통 프로그래머의 실수를 나타냅니다.
&lt;p&gt;예:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;
  if (a) {
    ...
  } else if (a) {
    ...
  }
&lt;/code&gt;
&lt;/pre&gt;
&lt;!-- tooltip end --&gt;&lt;p&gt;&lt;small&gt;Inspection ID: DuplicateConditionJS&lt;/small&gt;&lt;/p&gt;&lt;/body&gt;
&lt;/html&gt;</inspection><inspection shortName="UnreachableCodeJS" defaultSeverity="WARNING" displayName="사용할 수 없는 코드" enabled="true" language="JavaScript" pluginId="JavaScript" pluginVersion="252.26199.162" isGlobalTool="false">&lt;html&gt;
&lt;body&gt;
절대 실행할 수 없는 코드를 보고합니다. 이는 거의 확실히 오류를 나타냅니다.
&lt;!-- tooltip end --&gt;&lt;p&gt;&lt;small&gt;Inspection ID: UnreachableCodeJS&lt;/small&gt;&lt;/p&gt;&lt;/body&gt;
&lt;/html&gt;</inspection><inspection shortName="PointlessBooleanExpressionJS" defaultSeverity="WARNING" displayName="무의미한 구문 또는 부울 표현식" enabled="true" language="JavaScript" pluginId="JavaScript" pluginVersion="252.26199.162" isGlobalTool="false">&lt;html&gt;
&lt;body&gt;
의미가 없거나 쓸데없이 복잡한 bool 표현식 또는 구문을 보고합니다.
&lt;p&gt;예:
&lt;pre&gt;&lt;code&gt;
  let a = !(false &amp;&amp; x);
  let b = false || x;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;빠른 수정이 적용된 후 결과는 다음과 같습니다.
&lt;pre&gt;&lt;code&gt;
  let a = true;
  let b = x;
&lt;/code&gt;&lt;/pre&gt;
&lt;!-- tooltip end --&gt;&lt;p&gt;&lt;small&gt;Inspection ID: PointlessBooleanExpressionJS&lt;/small&gt;&lt;/p&gt;&lt;/body&gt;
&lt;/html&gt;</inspection><inspection shortName="UnnecessaryLabelOnContinueStatementJS" defaultSeverity="WARNING" displayName="'continue' 문의 불필요한 라벨" enabled="true" language="JavaScript" pluginId="JavaScript" pluginVersion="252.26199.162" isGlobalTool="false">&lt;html&gt;
&lt;body&gt;
제어의 흐름을 변경하지 않고 삭제할 수 있는 
라벨이 지정된 &lt;code&gt;continue&lt;/code&gt; 문을 보고합니다.
&lt;!-- tooltip end --&gt;&lt;p&gt;&lt;small&gt;Inspection ID: UnnecessaryLabelOnContinueStatementJS&lt;/small&gt;&lt;/p&gt;&lt;/body&gt;
&lt;/html&gt;</inspection><inspection shortName="UnnecessaryReturnJS" defaultSeverity="WARNING" displayName="불필요한 'return' 문" enabled="true" language="JavaScript" pluginId="JavaScript" pluginVersion="252.26199.162" isGlobalTool="false">&lt;html&gt;
&lt;body&gt;
불필요한 &lt;code&gt;return&lt;/code&gt; 문, 즉 값을 반환하지 않고 함수가 맨 아래까지 '폴 스루'하기 직전에 나타나는 &lt;code&gt;return&lt;/code&gt; 문을 보고합니다.
이러한 구문은 안전하게 제거할 수 있습니다.
&lt;!-- tooltip end --&gt;&lt;p&gt;&lt;small&gt;Inspection ID: UnnecessaryReturnJS&lt;/small&gt;&lt;/p&gt;&lt;/body&gt;
&lt;/html&gt;</inspection><inspection shortName="IfStatementWithIdenticalBranchesJS" defaultSeverity="WARNING" displayName="브랜치가 동일한 'if' 문" enabled="false" language="JavaScript" pluginId="JavaScript" pluginVersion="252.26199.162" isGlobalTool="false">&lt;html&gt;
&lt;body&gt;
동일한 &lt;code&gt;then&lt;/code&gt; 및 &lt;code&gt;else&lt;/code&gt; 브랜치를 포함하는 &lt;code&gt;if&lt;/code&gt; 문을 보고합니다. 그러한 구문은 거의
확실히 오류입니다.
&lt;!-- tooltip end --&gt;&lt;p&gt;&lt;small&gt;Inspection ID: IfStatementWithIdenticalBranchesJS&lt;/small&gt;&lt;/p&gt;&lt;/body&gt;
&lt;/html&gt;</inspection><inspection shortName="TailRecursionJS" defaultSeverity="WARNING" displayName="꼬리 재귀" enabled="false" language="JavaScript" pluginId="JavaScript" pluginVersion="252.26199.162" isGlobalTool="false">&lt;html&gt;
&lt;body&gt;
꼬리 재귀, 즉 함수가 반환 전 마지막 액션으로 그 자체를 호출하는 경우를 보고합니다.  꼬리 재귀는 항상 루프로 바꿀 수 있으며, 그래야 훨씬 빠르게 처리됩니다.
일부 JavaScript 엔진은 이 최적화를 수행하는 반면 다른 엔진은 수행하지 않습니다.  그러므로 꼬리 재귀 해결책은 환경에 따라 성능 특성이 상당히 다를 수 있습니다.
&lt;!-- tooltip end --&gt;&lt;p&gt;&lt;small&gt;Inspection ID: TailRecursionJS&lt;/small&gt;&lt;/p&gt;&lt;/body&gt;
&lt;/html&gt;</inspection></group><group name="일반" path=""><inspection shortName="InconsistentLineSeparators" defaultSeverity="WARNING" displayName="일관되지 않은 줄 구분 기호" enabled="false" language="" pluginId="com.intellij" pluginVersion="252.26199.162" isGlobalTool="false">&lt;html&gt;
&lt;body&gt;
프로젝트 설정에 지정된 줄 구분 기호와 다른 기호가 있는 파일을 보고합니다.
&lt;p&gt;예를 들어, &lt;a href="settings://preferences.sourceCode?Line%20separator"&gt;Settings(설정) | Editor(에디터) | Code Style(코드 스타일) | Line separator(줄 구분 기호)&lt;/a&gt;에서 줄 구분 기호를 &lt;code&gt;\n&lt;/code&gt;으로 설정했으나 편집 중인 파일은 줄 구분 기호로 &lt;code&gt;\r\n&lt;/code&gt;을 사용하는 경우 검사가 트리거됩니다.&lt;/p&gt;

&lt;p&gt;검사에서는 파일 내의 혼합 줄 구분 기호에 대해서도 경고합니다.&lt;/p&gt;
&lt;!-- tooltip end --&gt;&lt;p&gt;&lt;small&gt;Inspection ID: InconsistentLineSeparators&lt;/small&gt;&lt;/p&gt;&lt;/body&gt;
&lt;/html&gt;</inspection><inspection shortName="Annotator" defaultSeverity="ERROR" displayName="어노테이터" enabled="true" language="" pluginId="com.intellij" pluginVersion="252.26199.162" isGlobalTool="true">&lt;html&gt;
&lt;body&gt;
배치 코드 검사가 실행된 결과에서 파일 내 중요한 문제(예: 구문 오류)를 보고합니다.
이러한 문제는 에디터에서 항상 강조 표시되며 검사와 달리 구성할 수 없습니다.
해당 옵션은 이 검사가 수행하는 확인의 범위를 제어합니다.
&lt;ul&gt;
  &lt;li&gt;'&lt;b&gt;구문 오류 보고&lt;/b&gt;' 옵션: 파서 관련 문제를 보고합니다.&lt;/li&gt;
  &lt;li&gt;'&lt;b&gt;특정 언어의 어노테이터에서 발생한 문제 보고&lt;/b&gt;' 옵션: 관련 언어에 구성된 어노테이터에서 발견된 문제를 보고합니다.
    자세한 내용은 &lt;a href="https://plugins.jetbrains.com/docs/intellij/annotator.html"&gt;사용자 지정 언어 지원: 어노테이터&lt;/a&gt;를 참조하세요.&lt;/li&gt;
  &lt;li&gt;'&lt;b&gt;기타 강조 표시 문제 보고&lt;/b&gt;' 옵션: 현재 파일의 언어에 한정된 문제를 보고합니다(예: 타입 불일치 또는 보고되지 않은 예외).
    자세한 내용은 &lt;a href="https://plugins.jetbrains.com/docs/intellij/syntax-highlighting-and-error-highlighting.html#semantic-highlighting"&gt;사용자 지정 언어 지원: 강조 표시&lt;/a&gt;를 참조하세요.&lt;/li&gt;
&lt;/ul&gt;
&lt;!-- tooltip end --&gt;&lt;p&gt;&lt;small&gt;Inspection ID: Annotator&lt;/small&gt;&lt;/p&gt;&lt;/body&gt;
&lt;/html&gt;</inspection><inspection shortName="RedundantSuppression" defaultSeverity="WARNING" displayName="불필요한 억제" enabled="true" language="" pluginId="com.intellij" pluginVersion="252.26199.162" isGlobalTool="true">&lt;html&gt;
&lt;body&gt;
영향을 미치는 검사가 이 컨텍스트에서 더 이상 적용되지 않으므로 안전하게 제거할 수 있는 다음 요소의 사용 위치를 보고합니다.
&lt;ul&gt;
  &lt;li&gt;&lt;code&gt;@SuppressWarning&lt;/code&gt; 어노테이션, 또는&lt;/li&gt;
  &lt;li&gt;&lt;code&gt;// noinspection&lt;/code&gt; 줄 주석, 또는&lt;/li&gt;
  &lt;li&gt;&lt;code&gt;/** noinspection */&lt;/code&gt; JavaDoc 주석&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;예:&lt;/p&gt;
&lt;pre&gt;&lt;code lang="java"&gt;
public class C {
 // 심볼이 이미 private이지만,
 // 여전히 어노테이션으로 감싸져 있습니다
  @SuppressWarnings({"WeakerAccess"})
 private boolean CONST = true;
 void f() {
    CONST = false;
  }
}
&lt;/code&gt;&lt;/pre&gt;


&lt;!-- tooltip end --&gt;&lt;p&gt;&lt;small&gt;Inspection ID: RedundantSuppression&lt;/small&gt;&lt;/p&gt;&lt;/body&gt;
&lt;/html&gt;
</inspection><inspection shortName="InjectedReferences" defaultSeverity="ERROR" displayName="삽입된 참조" enabled="true" language="" pluginId="org.intellij.intelliLang" pluginVersion="252.26199.162" isGlobalTool="false">&lt;html&gt;
&lt;body&gt;
&lt;a href="https://www.jetbrains.com/help/idea/using-language-injections.html"&gt;언어 삽입&lt;/a&gt;에 의해 삽입된 해결되지 않은 참조를 보고합니다.
&lt;p&gt;예:&lt;/p&gt;
&lt;pre&gt;&lt;code lang="java"&gt;
    @Language("file-reference")
    String fileName = "/home/user/nonexistent.file"; // 파일이 없을 때 강조 표시됨
&lt;/code&gt;&lt;/pre&gt;
&lt;!-- tooltip end --&gt;&lt;p&gt;&lt;small&gt;Inspection ID: InjectedReferences&lt;/small&gt;&lt;/p&gt;&lt;/body&gt;
&lt;/html&gt;</inspection><inspection shortName="ProblematicWhitespace" defaultSeverity="WARNING" displayName="문제가 있는 공백" enabled="false" language="" pluginId="com.intellij" pluginVersion="252.26199.162" isGlobalTool="false">&lt;html&gt;
&lt;body&gt;
다음 문제를 보고합니다.
&lt;ul&gt;
  &lt;li&gt;코드 스타일이 공백만 사용하도록 구성된 경우 들여쓰기에 사용되는 탭입니다.&lt;/li&gt;
  &lt;li&gt;코드 스타일이 공백만 사용하도록 구성된 경우 들여쓰기에 사용되는 공백입니다.&lt;/li&gt;
  &lt;li&gt;코드 스타일이 스마트 탭을 사용하도록 구성된 경우 들여쓰기 및 맞추기 탭에 사용되는 공백입니다.&lt;/li&gt;
&lt;/ul&gt;

&lt;!-- tooltip end --&gt;
&lt;p&gt;
&lt;p&gt;&lt;small&gt;Inspection ID: ProblematicWhitespace&lt;/small&gt;&lt;/p&gt;&lt;/body&gt;
&lt;/html&gt;</inspection><inspection shortName="LongLine" defaultSeverity="WARNING" displayName="줄이 코드 스타일에서 허용된 길이보다 깁니다" enabled="false" language="" pluginId="com.intellij" pluginVersion="252.26199.162" isGlobalTool="false">&lt;html&gt;
&lt;body&gt;
&lt;a href="settings://preferences.sourceCode?Hard%20wrap%20at"&gt;Settings(설정) | Editor(에디터) | Code Style(코드 스타일) | General(일반)&lt;/a&gt;에서 지정된 &lt;b&gt;Hard wrap at(다음 길이에서 하드 랩)&lt;/b&gt;의 매개변수보다 긴 줄을 보고합니다.
&lt;!-- tooltip end --&gt;&lt;p&gt;&lt;small&gt;Inspection ID: LongLine&lt;/small&gt;&lt;/p&gt;&lt;/body&gt;
&lt;/html&gt;</inspection><inspection shortName="TodoComment" defaultSeverity="WARNING" displayName="TODO 주석" enabled="false" language="" pluginId="com.intellij" pluginVersion="252.26199.162" isGlobalTool="false">&lt;html&gt;
&lt;body&gt;
코드 내 &lt;b&gt;TODO&lt;/b&gt; 주석을 보고합니다.
&lt;p&gt;&lt;a href="settings://preferences.toDoOptions"&gt;Settings(설정) | Editor(에디터) | TODO&lt;/a&gt;에서 &lt;b&gt;TODO&lt;/b&gt; 주석의 서식을 구성할 수 있습니다.
&lt;!-- tooltip end --&gt;
&lt;p&gt;&lt;b&gt;세부 정보가 없는 TODO 주석만 경고&lt;/b&gt; 옵션을 활성화하면, 수행해야 할 작업에 관한 설명이 없이 비어 있는 TODO 주석만 경고합니다. 모든 TODO 주석을 보고하려면 비활성화하세요.&lt;/p&gt;
&lt;p&gt;&lt;small&gt;Inspection ID: TodoComment&lt;/small&gt;&lt;/p&gt;&lt;/body&gt;
&lt;/html&gt;</inspection><inspection shortName="ReassignedToPlainText" defaultSeverity="WARNING" displayName="평문으로 재할당됨" enabled="true" language="" pluginId="com.intellij" pluginVersion="252.26199.162" isGlobalTool="false">&lt;html&gt;
&lt;body&gt;
명시적으로 일반 텍스트 파일 타입으로 재할당된 파일을 보고합니다.
플랫폼이 텍스트 파일을 내용으로 자동 탐지하기 때문에 이러한 연결은 불필요합니다.

&lt;p&gt;이 경고는 &lt;b&gt;설정 | 에디터 | 파일 타입 | 텍스트&lt;/b&gt;에서 파일 타입 연결을 제거하여 해제할 수 있습니다.&lt;/p&gt;

&lt;!-- tooltip end --&gt;&lt;p&gt;&lt;small&gt;Inspection ID: ReassignedToPlainText&lt;/small&gt;&lt;/p&gt;&lt;/body&gt;
&lt;/html&gt;</inspection><inspection shortName="DuplicatedCode" defaultSeverity="WEAK WARNING" displayName="중복 코드 조각" enabled="true" language="" pluginId="com.intellij" pluginVersion="252.26199.162" isGlobalTool="false">Reports duplicated blocks of code from the selected scope: the same file or the entire project.&lt;!-- tooltip end --&gt; &lt;p&gt;The inspection features quick-fixes that help you to set the size of detected duplicates, navigate to repetitive code fragments, and compare them in a tool window.&lt;p&gt;The inspection options allow you to select the scope of the reported duplicated fragments and set the initial size for the duplicated language constructs.&lt;p&gt;You can also configure the constructs that you want to anonymize in &lt;a href="settings://duplicates.index"&gt; 파일 | 설정 | Editor | Duplicates&lt;/a&gt;.</inspection><inspection shortName="IncorrectFormatting" defaultSeverity="WEAK WARNING" displayName="올바르지 않은 서식" enabled="false" language="" pluginId="com.intellij" pluginVersion="252.26199.162" isGlobalTool="false">&lt;html&gt;
&lt;body&gt;
&lt;p&gt;
  코드가 프로젝트의 코드 스타일 설정을 따르지 않을 경우 나타나는 서식 지정 문제를 보고합니다.
&lt;/p&gt;
&lt;p&gt;
  이 검사는 코드 서식 지정을 위해 타사 서식 지정 도구가 필요한 언어(예: CLangFormat이 활성화된 Go 또는 C)와 호환되지 않습니다.
&lt;/p&gt;
&lt;!-- tooltip end --&gt;&lt;p&gt;&lt;small&gt;Inspection ID: IncorrectFormatting&lt;/small&gt;&lt;/p&gt;&lt;/body&gt;
&lt;/html&gt;
</inspection><inspection shortName="EmptyDirectory" defaultSeverity="WARNING" displayName="빈 디렉터리" enabled="false" language="" pluginId="com.intellij" pluginVersion="252.26199.162" isGlobalTool="true">&lt;html&gt;
&lt;body&gt;
빈 디렉터리를 보고합니다.
&lt;!-- tooltip end --&gt;
&lt;p&gt;&lt;b&gt;코드 | 코드 검사&lt;/b&gt; 또는
  &lt;b&gt;코드 | 코드 분석 | 이름별로 검사 실행&lt;/b&gt;에서만 사용 가능하며 에디터에서 보고되지 않습니다.&lt;/p&gt;
&lt;p&gt;보고된 소스 루트의 디렉터리만 보고하려면 &lt;b&gt;소스 폴더에 있는 빈 디렉터리만 보고&lt;/b&gt; 옵션을 사용합니다.&lt;p&gt;
&lt;p&gt;&lt;small&gt;Inspection ID: EmptyDirectory&lt;/small&gt;&lt;/p&gt;&lt;/body&gt;
&lt;/html&gt;</inspection></group><group name="Markdown" path=""><inspection shortName="MarkdownIncorrectlyNumberedListItem" defaultSeverity="WARNING" displayName="번호가 잘못 매겨진 목록 항목" enabled="true" language="Markdown" pluginId="org.intellij.plugins.markdown" pluginVersion="252.26199.162" isGlobalTool="false">&lt;html&gt;
&lt;body&gt;
&lt;p&gt;정렬된 목록 항목은 1부터 번호가 지정되어야 합니다.&lt;/p&gt;
&lt;p&gt;이 검사는 Markdown 프로세서가 정렬된 목록의 번호 지정을 무시하는 경우가 많기 때문에 사용됩니다. 프로세서는 목록에 대한 &lt;code&gt;&amp;lt;ol&amp;gt;&lt;/code&gt; 요소를 생성하며 1부터 계속해서 항목의 번호를 매깁니다.&lt;/p&gt;
&lt;!-- tooltip end --&gt;&lt;p&gt;&lt;small&gt;Inspection ID: MarkdownIncorrectlyNumberedListItem&lt;/small&gt;&lt;/p&gt;&lt;/body&gt;
&lt;/html&gt;
</inspection><inspection shortName="MarkdownIncorrectTableFormatting" defaultSeverity="WEAK WARNING" displayName="올바르지 않은 테이블 서식" enabled="true" language="Markdown" pluginId="org.intellij.plugins.markdown" pluginVersion="252.26199.162" isGlobalTool="false">&lt;html&gt;
&lt;body&gt;
테이블 형식이 올바른지 확인합니다.
&lt;!-- tooltip end --&gt;&lt;p&gt;&lt;small&gt;Inspection ID: MarkdownIncorrectTableFormatting&lt;/small&gt;&lt;/p&gt;&lt;/body&gt;
&lt;/html&gt;
</inspection><inspection shortName="MarkdownLinkDestinationWithSpaces" defaultSeverity="WARNING" displayName="링크에 공백 포함 불가" enabled="true" language="Markdown" pluginId="org.intellij.plugins.markdown" pluginVersion="252.26199.162" isGlobalTool="false">&lt;html&gt;
&lt;body&gt;
서로 다른 도구 간에 일관성을 보장하기 위해 파일 링크에는 공백이 포함되지 않아야 합니다.
&lt;p&gt;&lt;b&gt;예:&lt;/b&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;
  [Some file link](some file.md)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;빠른 수정에서는 공백을 URL로 인코딩된 동등한 요소로 바꿉니다.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;
  [Some file link](some%20file.md)
&lt;/code&gt;&lt;/pre&gt;
&lt;!-- tooltip end --&gt;&lt;p&gt;&lt;small&gt;Inspection ID: MarkdownLinkDestinationWithSpaces&lt;/small&gt;&lt;/p&gt;&lt;/body&gt;
&lt;/html&gt;
</inspection><inspection shortName="MarkdownUnresolvedFileReference" defaultSeverity="WARNING" displayName="해결되지 않은 파일 참조" enabled="true" language="Markdown" pluginId="org.intellij.plugins.markdown" pluginVersion="252.26199.162" isGlobalTool="false">&lt;html&gt;
&lt;body&gt;
Markdown 파일의 해결되지 않은 파일 참조를 보고합니다.
&lt;!-- tooltip end --&gt;&lt;p&gt;&lt;small&gt;Inspection ID: MarkdownUnresolvedFileReference&lt;/small&gt;&lt;/p&gt;&lt;/body&gt;
&lt;/html&gt;</inspection><inspection shortName="MarkdownOutdatedTableOfContents" defaultSeverity="WARNING" displayName="콘텐츠 섹션의 오래된 테이블" enabled="true" language="Markdown" pluginId="org.intellij.plugins.markdown" pluginVersion="252.26199.162" isGlobalTool="false">&lt;html&gt;
&lt;body&gt;
특정 목차가 실제 문서 구조에 대응하는지 확인합니다.
&lt;!-- tooltip end --&gt;&lt;p&gt;&lt;small&gt;Inspection ID: MarkdownOutdatedTableOfContents&lt;/small&gt;&lt;/p&gt;&lt;/body&gt;
&lt;/html&gt;
</inspection><inspection shortName="MarkdownUnresolvedLinkLabel" defaultSeverity="WARNING" displayName="해결되지 않은 링크 라벨" enabled="true" language="Markdown" pluginId="org.intellij.plugins.markdown" pluginVersion="252.26199.162" isGlobalTool="false">&lt;html&gt;
&lt;body&gt;
Markdown 파일 내 미해결 링크 라벨을 보고합니다.
&lt;!-- tooltip end --&gt;&lt;p&gt;&lt;small&gt;Inspection ID: MarkdownUnresolvedLinkLabel&lt;/small&gt;&lt;/p&gt;&lt;/body&gt;
&lt;/html&gt;
</inspection><inspection shortName="MarkdownNoTableBorders" defaultSeverity="WARNING" displayName="테이블에 측면 테두리가 없습니다" enabled="true" language="Markdown" pluginId="org.intellij.plugins.markdown" pluginVersion="252.26199.162" isGlobalTool="false">&lt;html&gt;
&lt;body&gt;
테이블의 측면 테두리가 올바른지 확인합니다.
호환성을 위해 모든 테이블 행에는 시작과 끝에 테두리(파이프 기호)가 있어야 합니다.
&lt;!-- tooltip end --&gt;&lt;p&gt;&lt;small&gt;Inspection ID: MarkdownNoTableBorders&lt;/small&gt;&lt;/p&gt;&lt;/body&gt;
&lt;/html&gt;
</inspection><inspection shortName="MarkdownUnresolvedHeaderReference" defaultSeverity="WARNING" displayName="해결되지 않은 헤더 참조" enabled="true" language="Markdown" pluginId="org.intellij.plugins.markdown" pluginVersion="252.26199.162" isGlobalTool="false">&lt;html&gt;
&lt;body&gt;
Markdown 파일 내 미해결 헤더 참조를 보고합니다.
&lt;!-- tooltip end --&gt;&lt;p&gt;&lt;small&gt;Inspection ID: MarkdownUnresolvedHeaderReference&lt;/small&gt;&lt;/p&gt;&lt;/body&gt;
&lt;/html&gt;</inspection></group><group name="MySQL" path=""><inspection shortName="MysqlLoadDataPathInspection" defaultSeverity="WARNING" displayName="LOAD 문 경로" enabled="true" language="MySQL based" pluginId="com.intellij.database" pluginVersion="252.26199.162" isGlobalTool="false">&lt;html&gt;
&lt;body&gt;
LOAD 구문 내 물결표 문자로 시작하는 경로를 보고합니다.
&lt;p&gt;예시(MySQL):&lt;/p&gt;
&lt;pre&gt;&lt;code lang="mysql"&gt;CREATE TABLE table_name (id int);
LOAD DATA LOCAL INFILE '~/Documents/some_file.txt'
INTO TABLE table_name FIELDS TERMINATED BY ',' LINES TERMINATED BY '\n'
IGNORE 1 LINES;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;물결표 문자 대신 전체 파일 경로를 사용하세요.&lt;/p&gt;
&lt;!-- tooltip end --&gt;&lt;p&gt;&lt;small&gt;Inspection ID: MysqlLoadDataPathInspection&lt;/small&gt;&lt;/p&gt;&lt;/body&gt;
&lt;/html&gt;</inspection><inspection shortName="MysqlSpaceAfterFunctionNameInspection" defaultSeverity="ERROR" displayName="함수 이름 내의 공백 및 열린 소괄호" enabled="true" language="MySQL" pluginId="com.intellij.database" pluginVersion="252.26199.162" isGlobalTool="false">&lt;html&gt;
&lt;body&gt;
기본적으로 지원되지 않는 함수 이름과 여는 소괄호 사이에 있는 함수 호출의 공백을 보고합니다.
&lt;p&gt;예시(MySQL):&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;SELECT MAX (qty) FROM orders;&lt;/code&gt;&lt;/pre&gt;
&lt;!-- tooltip end --&gt;&lt;p&gt;&lt;small&gt;Inspection ID: MysqlSpaceAfterFunctionNameInspection&lt;/small&gt;&lt;/p&gt;&lt;/body&gt;
&lt;/html&gt;</inspection><inspection shortName="MysqlParsingInspection" defaultSeverity="WARNING" displayName="8.0 이전 버전에서 지원되지 않는 구문" enabled="true" language="MySQL based" pluginId="com.intellij.database" pluginVersion="252.26199.162" isGlobalTool="false">&lt;html&gt;
&lt;body&gt;
쿼리 내 UNION의 유효하지 않은 사용 위치를 보고합니다.
&lt;p&gt;이 검사는 MySQL 8.0 이전 버전에서 작동합니다.&lt;/p&gt;
&lt;p&gt;예시(MySQL):&lt;/p&gt;
&lt;pre&gt;&lt;code lang="mysql"&gt;
SELECT * FROM (SELECT 1 UNION (SELECT 1 UNION SELECT 2)) a;
&lt;/code&gt;&lt;/pre&gt;
&lt;!-- tooltip end --&gt;&lt;p&gt;&lt;small&gt;Inspection ID: MysqlParsingInspection&lt;/small&gt;&lt;/p&gt;&lt;/body&gt;
&lt;/html&gt;</inspection></group><group name="HTTP 클라이언트" path=""><inspection shortName="HttpRequestContentLengthIsIgnored" defaultSeverity="WARNING" displayName="불필요한 'Content-Length'" enabled="true" language="HTTP Request" pluginId="com.jetbrains.restClient" pluginVersion="252.26199.169" isGlobalTool="false">&lt;html&gt;
&lt;body&gt;
명시적으로 설정된 &lt;code&gt;Content-Length&lt;/code&gt; 헤더를 보고합니다. HTTP 클라이언트가 실제 요청 본문 길이를 사용하기 때문에 헤더가 불필요합니다.
&lt;!-- tooltip end --&gt;&lt;p&gt;&lt;small&gt;Inspection ID: HttpRequestContentLengthIsIgnored&lt;/small&gt;&lt;/p&gt;&lt;/body&gt;
&lt;/html&gt;</inspection><inspection shortName="HttpRequestRequestSeparatorYamlBodyInspection" defaultSeverity="WEAK WARNING" displayName="YAML 본문에 요청 구분자가 누락됨" enabled="true" language="yaml" pluginId="com.jetbrains.restClient" pluginVersion="252.26199.169" isGlobalTool="false">&lt;html&gt;
&lt;body&gt;
요청 구분자 &lt;code&gt;###&lt;/code&gt;이 누락되어 있는 삽입된 YAML 본문의 잠재적인 요청을 보고합니다. 
빠른 수정에서는 요청 앞에 구분 기호 &lt;code&gt;###&lt;/code&gt;을 추가하도록 제안합니다.
&lt;!-- tooltip end --&gt;&lt;p&gt;&lt;small&gt;Inspection ID: HttpRequestRequestSeparatorYamlBodyInspection&lt;/small&gt;&lt;/p&gt;&lt;/body&gt;
&lt;/html&gt;</inspection><inspection shortName="HttpRequestCustomHttpMethodInspection" defaultSeverity="WARNING" displayName="알 수 없는 HTTP 메서드" enabled="true" language="HTTP Request" pluginId="com.jetbrains.restClient" pluginVersion="252.26199.169" isGlobalTool="false">&lt;html&gt;
&lt;body&gt;
가능한 사용자 지정 HTTP 메서드를 보고합니다. 
빠른 수정에서는 프로젝트 설정에 사용자 지정 HTTP 메서드를 추가하도록 제안합니다.
&lt;!-- tooltip end --&gt;&lt;p&gt;&lt;small&gt;Inspection ID: HttpRequestCustomHttpMethodInspection&lt;/small&gt;&lt;/p&gt;&lt;/body&gt;
&lt;/html&gt;</inspection><inspection shortName="HttpRequestEnvironmentAuthConfigurationValidationInspection" defaultSeverity="WARNING" displayName="인증 구성 검증" enabled="true" language="JSON" pluginId="com.jetbrains.restClient" pluginVersion="252.26199.169" isGlobalTool="false">&lt;html&gt;
&lt;body&gt;
HTTP 클라이언트 환경 파일에서 다음의 인증 구성 문제를 보고합니다.
&lt;ul&gt;
  &lt;li&gt;
    인증 구성 내 누락된 프로퍼티
  &lt;/li&gt;
  &lt;li&gt;
    비공개 환경 파일에 있는 인증/보안 구성
  &lt;/li&gt;
&lt;/ul&gt;
&lt;!-- tooltip end --&gt;&lt;p&gt;&lt;small&gt;Inspection ID: HttpRequestEnvironmentAuthConfigurationValidationInspection&lt;/small&gt;&lt;/p&gt;&lt;/body&gt;
&lt;/html&gt;</inspection><inspection shortName="HttpClientUnresolvedVariable" defaultSeverity="WARNING" displayName="해결되지 않은 환경 변수" enabled="true" language="HTTP Request" pluginId="com.jetbrains.restClient" pluginVersion="252.26199.169" isGlobalTool="false">&lt;html&gt;
&lt;body&gt;
&lt;p&gt;현재 환경에서 선언되지 않은 HTTP 클라이언트 변수를 보고합니다.&lt;/p&gt;
&lt;p&gt;
  선언되지 않은 변수가 있는 요청을 실행하면 실패할 수 있습니다.
  환경에 변수를 추가하거나 이 변수가 있는 환경을 선택해보세요.
&lt;/p&gt;
&lt;!-- tooltip end --&gt;
&lt;p&gt;요청 본문에 있는 변수는 본문의 유효한 구문일 수도 있기 때문에 검사에서 보고되지 않습니다.&lt;/p&gt;
&lt;p&gt;
  일부 변수는 &lt;code&gt;client.global.set&lt;/code&gt; 또는 &lt;code&gt;request.variables.set&lt;/code&gt; 함수 호출을 통해 응답 또는 사전 요청 핸들러 스크립트에서 선언되기 때문에 미해결로 보고되지 않을 수 있습니다.
&lt;/p&gt;
&lt;p&gt;&lt;small&gt;Inspection ID: HttpClientUnresolvedVariable&lt;/small&gt;&lt;/p&gt;&lt;/body&gt;
&lt;/html&gt;</inspection><inspection shortName="HttpRequestWhitespaceInsideRequestTargetPath" defaultSeverity="WEAK WARNING" displayName="요청의 URL에 있는 공백" enabled="true" language="HTTP Request" pluginId="com.jetbrains.restClient" pluginVersion="252.26199.169" isGlobalTool="false">&lt;html&gt;
&lt;body&gt;
URL 경로 세그먼트 내의 공백을 강조 표시합니다. HTTP 클라이언트가 무시합니다. 구성 개선을 위해 '줄 분할' 액션을 사용하세요.
&lt;!-- tooltip end --&gt;&lt;p&gt;&lt;small&gt;Inspection ID: HttpRequestWhitespaceInsideRequestTargetPath&lt;/small&gt;&lt;/p&gt;&lt;/body&gt;
&lt;/html&gt;</inspection><inspection shortName="HttpRequestRequestSeparatorJsonBodyInspection" defaultSeverity="WEAK WARNING" displayName="JSON 본문에 요청 구분자가 누락됨" enabled="true" language="JSON" pluginId="com.jetbrains.restClient" pluginVersion="252.26199.169" isGlobalTool="false">&lt;html&gt;
&lt;body&gt;
요청 구분자 &lt;code&gt;###&lt;/code&gt;이 누락되어 있는 삽입된 JSON 본문의 잠재적인 요청을 보고합니다. 
빠른 수정에서는 요청 앞에 구분 기호 &lt;code&gt;###&lt;/code&gt;을 추가하도록 제안합니다.
&lt;!-- tooltip end --&gt;&lt;p&gt;&lt;small&gt;Inspection ID: HttpRequestRequestSeparatorJsonBodyInspection&lt;/small&gt;&lt;/p&gt;&lt;/body&gt;
&lt;/html&gt;</inspection><inspection shortName="HttpRequestPlaceholder" defaultSeverity="WARNING" displayName="HTTP 요청 내 '$placeholder'" enabled="true" language="HTTP Request" pluginId="com.jetbrains.restClient" pluginVersion="252.26199.169" isGlobalTool="false">&lt;html&gt;
&lt;body&gt;
요청 내부의 &lt;code&gt;$placeholder&lt;/code&gt;를 보고합니다. 
&lt;p&gt;도구가 요청의 일부를 인식하지 못하는 경우 사용자에 의해 교체될 &lt;code&gt;$placeholder&lt;/code&gt;가 자동으로 생성됩니다. 예를 들어, 요청 매핑 &lt;code&gt;/aaaa/*/bbb&lt;/code&gt;가 &lt;code&gt;GET localhost/aaaa/{{$placeholder}}/bbb&lt;/code&gt;로 생성됩니다.
&lt;!-- tooltip end --&gt;&lt;p&gt;&lt;small&gt;Inspection ID: HttpRequestPlaceholder&lt;/small&gt;&lt;/p&gt;&lt;/body&gt;
&lt;/html&gt;</inspection><inspection shortName="HttpRequestJsonBodyInspection" defaultSeverity="WARNING" displayName="변수는 큰따옴표로 감싸야 함" enabled="true" language="HTTP Request" pluginId="com.jetbrains.restClient" pluginVersion="252.26199.169" isGlobalTool="false">&lt;html&gt;
&lt;body&gt;
json 본문에서 큰따옴표로 묶여야 하는 변수를 보고합니다.
빠른 수정에서는 변수를 큰따옴표로 둘러싸도록 제안합니다(&lt;code&gt;"{{variable}}"&lt;/code&gt;).
&lt;!-- tooltip end --&gt;&lt;p&gt;&lt;small&gt;Inspection ID: HttpRequestJsonBodyInspection&lt;/small&gt;&lt;/p&gt;&lt;/body&gt;
&lt;/html&gt;</inspection><inspection shortName="HttpRequestRequestSeparatorXmlBodyInspection" defaultSeverity="WEAK WARNING" displayName="HTML/XML 본문에 요청 구분자가 누락됨" enabled="true" language="XML" pluginId="com.jetbrains.restClient" pluginVersion="252.26199.169" isGlobalTool="false">&lt;html&gt;
&lt;body&gt;
삽입된 XML/HTML 본문에서 요청 구분자 &lt;code&gt;###&lt;/code&gt;이 누락된 잠재적인 요청을 보고합니다. 
빠른 수정에서는 요청 앞에 구분 기호 &lt;code&gt;###&lt;/code&gt;을 추가하도록 제안합니다.
&lt;!-- tooltip end --&gt;&lt;p&gt;&lt;small&gt;Inspection ID: HttpRequestRequestSeparatorXmlBodyInspection&lt;/small&gt;&lt;/p&gt;&lt;/body&gt;
&lt;/html&gt;</inspection><inspection shortName="HttpClientUnresolvedAuthId" defaultSeverity="ERROR" displayName="해결되지 않은 인증 식별자" enabled="true" language="HTTP Request" pluginId="com.jetbrains.restClient" pluginVersion="252.26199.169" isGlobalTool="false">&lt;html&gt;
&lt;body&gt;
존재하지 않는 인증 구성이 참조되면 강조 표시합니다. 현재 환경에서 새로 생성하도록 제안합니다.
&lt;!-- tooltip end --&gt;&lt;p&gt;&lt;small&gt;Inspection ID: HttpClientUnresolvedAuthId&lt;/small&gt;&lt;/p&gt;&lt;/body&gt;
&lt;/html&gt;</inspection><inspection shortName="IncorrectHttpHeaderInspection" defaultSeverity="WARNING" displayName="올바르지 않은 HTTP 헤더" enabled="true" language="HTTP Request" pluginId="com.jetbrains.restClient" pluginVersion="252.26199.169" isGlobalTool="false">&lt;html&gt;
&lt;body&gt;
&lt;p&gt;
  어떤 &lt;a href="https://www.iana.org/assignments/message-headers/message-headers.xml"&gt;공개적으로 알려진 헤더&lt;/a&gt;와도 일치하지 않는 알 수 없는 HTTP 헤더를 보고합니다. 빠른 수정은 &lt;b&gt;사용자 지정 HTTP 헤더 사용&lt;/b&gt; 옵션이 활성화되어 있는 경우 사용자 지정 헤더 목록에 헤더를 추가할 것을 제안합니다. 사용자 지정 헤더 목록에 포함된 HTTP 헤더는 이 검사를 촉발하지 않습니다.
&lt;/p&gt;
&lt;!-- tooltip end --&gt;&lt;p&gt;&lt;small&gt;Inspection ID: IncorrectHttpHeaderInspection&lt;/small&gt;&lt;/p&gt;&lt;/body&gt;
&lt;/html&gt;</inspection><inspection shortName="HttpClientInappropriateProtocolUsageInspection" defaultSeverity="WEAK WARNING" displayName="부적절한 HTTP 프로토콜 사용 위치" enabled="true" language="HTTP Request" pluginId="com.jetbrains.restClient" pluginVersion="252.26199.169" isGlobalTool="false">&lt;html&gt;
&lt;body&gt;
&lt;code&gt;HTTP/2&lt;/code&gt;와 같이 비 HTTP 메서드 요청을 사용하는 HTTP 프로토콜 키워드의 부적절한 사용을 보고합니다. 이러한 사용은 무시됩니다.
&lt;!-- tooltip end --&gt;&lt;p&gt;&lt;small&gt;Inspection ID: HttpClientInappropriateProtocolUsageInspection&lt;/small&gt;&lt;/p&gt;&lt;/body&gt;
&lt;/html&gt;</inspection><inspection shortName="HttpRequestAmbiguityEncoding" defaultSeverity="WEAK WARNING" displayName="모호한 인코딩 검사" enabled="true" language="HTTP Request" pluginId="com.jetbrains.restClient" pluginVersion="252.26199.169" isGlobalTool="false">&lt;html&gt;
&lt;body&gt;
&lt;p&gt;
  인코딩된 쿼리 문자열 내 '+'를 탐지합니다. +를 공백으로 인코딩해야 할지 '+' 문자로 인코딩해야 할지 모호합니다.
&lt;/p&gt;
&lt;p&gt;&lt;b&gt;예:&lt;/b&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;
  GET https://example.com/api?name=John+Doe%40example.com
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;빠른 수정 적용 후&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;
  GET https://example.com/api?name=John%20Doe%40example.com
&lt;/code&gt;&lt;/pre&gt;
&lt;!-- tooltip end --&gt;&lt;p&gt;&lt;small&gt;Inspection ID: HttpRequestAmbiguityEncoding&lt;/small&gt;&lt;/p&gt;&lt;/body&gt;
&lt;/html&gt;</inspection><inspection shortName="HttpClientDuplicateImportInspection" defaultSeverity="WEAK WARNING" displayName="중복 가져오기" enabled="true" language="HTTP Request" pluginId="com.jetbrains.restClient" pluginVersion="252.26199.169" isGlobalTool="false">&lt;html&gt;
&lt;body&gt;
이미 정의된 import를 강조 표시합니다. 
중복된 import 선언을 제거할 것을 제안합니다.
&lt;!-- tooltip end --&gt;&lt;p&gt;&lt;small&gt;Inspection ID: HttpClientDuplicateImportInspection&lt;/small&gt;&lt;/p&gt;&lt;/body&gt;
&lt;/html&gt;</inspection><inspection shortName="HttpClientRunRequestNameInspection" defaultSeverity="WEAK WARNING" displayName="가능한 요청 이름" enabled="true" language="HTTP Request" pluginId="com.jetbrains.restClient" pluginVersion="252.26199.169" isGlobalTool="false">&lt;html&gt;
&lt;body&gt;
지정된 import 파일이 없는 실행 블록의 요청 이름을 강조 표시합니다. 
이러한 기명 요청을 포함하는 파일에 import를 추가하도록 제안합니다.
&lt;!-- tooltip end --&gt;&lt;p&gt;&lt;small&gt;Inspection ID: HttpClientRunRequestNameInspection&lt;/small&gt;&lt;/p&gt;&lt;/body&gt;
&lt;/html&gt;</inspection></group><group name="코드 커버리지" path=""><inspection shortName="JsCoverageInspection" defaultSeverity="WARNING" displayName="JavaScript 및 TypeScript 소스 코드 커버리지 확인" enabled="true" language="JavaScript" pluginId="org.intellij.qodana" pluginVersion="252.26199.162" isGlobalTool="true">&lt;html&gt;
&lt;body&gt;
커버리지가 특정 임곗값 미만인 메서드, 클래스 및 파일을 보고합니다.
&lt;!-- tooltip end --&gt;&lt;p&gt;&lt;small&gt;Inspection ID: JsCoverageInspection&lt;/small&gt;&lt;/p&gt;&lt;/body&gt;
&lt;/html&gt;</inspection></group><group name="보안" path=""><inspection shortName="VulnerableLibrariesLocal" defaultSeverity="WARNING" displayName="취약한 선언된 종속성" enabled="true" language="" pluginId="org.jetbrains.security.package-checker" pluginVersion="252.26199.169" isGlobalTool="false">&lt;html&gt;
&lt;body&gt;
&lt;p&gt;프로젝트에서 선언된 Gradle, Maven, NPM, PyPl 및 Go 종속성의 취약성을 보고합니다.
  Gradle 및 Maven 종속성의 전체 목록은 외부 라이브러리의 프로젝트 도구 창에 표시됩니다.&lt;/p&gt;
&lt;p&gt;보고된 문제를 해결하면 공격자로부터 소프트웨어를 보호할 수 있습니다.&lt;/p&gt;
&lt;p&gt;문제를 해결하려면 취약성이 수정된 버전(사용 가능한 경우)으로 업데이트하거나 취약성이 없는 종속성으로 전환하면 됩니다.&lt;/p&gt;
&lt;p&gt;제공된 빠른 수정에서는 안전한 버전으로 업데이트하거나 웹사이트에 방문해 특정 취약점에 관해 자세히 알아볼 것을 제안할 수 있습니다.&lt;/p&gt;
&lt;!-- tooltip end --&gt;
&lt;p&gt;&lt;small&gt;Inspection ID: VulnerableLibrariesLocal&lt;/small&gt;&lt;/p&gt;&lt;/body&gt;
&lt;/html&gt;
</inspection><inspection shortName="MaliciousLibrariesLocal" defaultSeverity="WARNING" displayName="악의적인 종속성" enabled="true" language="" pluginId="org.jetbrains.security.package-checker" pluginVersion="252.26199.169" isGlobalTool="false">&lt;html&gt;
&lt;body&gt;
&lt;p&gt;프로젝트에서 선언된 악의적인 NPM 및 PyPI 종속성을 보고합니다.&lt;/p&gt;
&lt;p&gt;보고된 문제를 해결하면 공격자로부터 소프트웨어를 보호할 수 있습니다.&lt;/p&gt;
&lt;p&gt;문제를 해결하려면 악의적인 패키지를 제거하세요.&lt;/p&gt;
&lt;!-- tooltip end --&gt;
&lt;p&gt;&lt;small&gt;Inspection ID: MaliciousLibrariesLocal&lt;/small&gt;&lt;/p&gt;&lt;/body&gt;
&lt;/html&gt;
</inspection><inspection shortName="HttpUrlsUsage" defaultSeverity="WEAK WARNING" displayName="암호화되지 않은 프로토콜이 있는 링크" enabled="true" pluginId="com.jetbrains.restClient" pluginVersion="252.26199.169" isGlobalTool="false">&lt;html&gt;
&lt;body&gt;
&lt;p&gt;데이터를 중간자 공격에 노출시킬 수 있는 암호화되지 않은 프로토콜(예: HTTP)을 사용하는 링크를 보고합니다. 이러한 공격은 일반적으로 위험하며 아티팩트 저장소에 특히 유해할 수 있습니다. 대신 HTTPS와 같은 암호화를 갖춘 프로토콜을 사용하세요.&lt;/p&gt;
&lt;p&gt;&lt;a href="https://en.wikipedia.org/wiki/HTTPS#Difference_from_HTTP"&gt;HTTPS: HTTP와의 차이(wikipedia.org)&lt;/a&gt;를 참고하세요.&lt;/p&gt;
&lt;!-- tooltip end --&gt;&lt;p&gt;&lt;small&gt;Inspection ID: HttpUrlsUsage&lt;/small&gt;&lt;/p&gt;&lt;/body&gt;
&lt;/html&gt;</inspection></group><group name="발생할 수 있는 버그" path="CSS"><inspection shortName="CssNoGenericFontName" defaultSeverity="WARNING" displayName="제네릭 글꼴 집합 이름 누락" enabled="true" language="CSS" pluginId="com.intellij.css" pluginVersion="252.26199.162" isGlobalTool="false">&lt;html&gt;
&lt;body&gt;
&lt;code&gt;&lt;a href="https://developer.mozilla.org/en-US/docs/Web/CSS/font-family"&gt;font-family&lt;/a&gt;&lt;/code&gt; 프로퍼티가 폴백 대체 글꼴로 일반 글꼴 집합 이름을 포함하는지 확인합니다.
&lt;p&gt;
  일반 글꼴 집합 이름은 &lt;code&gt;serif&lt;/code&gt;, &lt;code&gt;sans-serif&lt;/code&gt;, &lt;code&gt;cursive&lt;/code&gt;, &lt;code&gt;fantasy&lt;/code&gt;, &lt;code&gt;monospace&lt;/code&gt;입니다.
&lt;/p&gt;
&lt;!-- tooltip end --&gt;
&lt;p&gt;&lt;small&gt;Inspection ID: CssNoGenericFontName&lt;/small&gt;&lt;/p&gt;&lt;/body&gt;
&lt;/html&gt;</inspection><inspection shortName="CssMissingComma" defaultSeverity="WARNING" displayName="선택자 목록에 쉼표가 없습니다" enabled="true" language="CSS" pluginId="com.intellij.css" pluginVersion="252.26199.162" isGlobalTool="false">&lt;html&gt;
&lt;body&gt;
여러 줄 선택자를 보고합니다. 이는 보통 여러 개의 한 줄 선택자를 사용하려 했으나 1개 이상의 줄 끝에 쉼표가 누락되었음을 가리킵니다.
&lt;p&gt;&lt;b&gt;예:&lt;/b&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;
input /* comma has probably been forgotten */
.button {
  margin: 1px;
}
&lt;/code&gt;&lt;/pre&gt;
&lt;!-- tooltip end --&gt;
&lt;p&gt;&lt;small&gt;Inspection ID: CssMissingComma&lt;/small&gt;&lt;/p&gt;&lt;/body&gt;
&lt;/html&gt;</inspection><inspection shortName="CssNonIntegerLengthInPixels" defaultSeverity="WEAK WARNING" displayName="픽셀 길이가 정수가 아닙니다" enabled="true" language="CSS" pluginId="com.intellij.css" pluginVersion="252.26199.162" isGlobalTool="false">&lt;html&gt;
&lt;body&gt;
정수가 아닌 픽셀 길이를 보고합니다.
&lt;p&gt;&lt;b&gt;예:&lt;/b&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt; 너비: 3.14px&lt;/code&gt;&lt;/pre&gt;
&lt;!-- tooltip end --&gt;
&lt;p&gt;&lt;small&gt;Inspection ID: CssNonIntegerLengthInPixels&lt;/small&gt;&lt;/p&gt;&lt;/body&gt;
&lt;/html&gt;</inspection></group><group name="Vue" path=""><inspection shortName="VueDeprecatedSymbol" defaultSeverity="WARNING" displayName="지원 중단된 심볼" enabled="true" language="Vue" pluginId="org.jetbrains.plugins.vue" pluginVersion="252.26199.163" isGlobalTool="false">&lt;html&gt;
&lt;body&gt;
지원 중단된 Vue 심볼을 보고합니다.
&lt;!-- tooltip end --&gt;&lt;p&gt;&lt;small&gt;Inspection ID: VueDeprecatedSymbol&lt;/small&gt;&lt;/p&gt;&lt;/body&gt;
&lt;/html&gt;</inspection><inspection shortName="VueDataFunction" defaultSeverity="WARNING" displayName="데이터 함수" enabled="true" language="Vue" pluginId="org.jetbrains.plugins.vue" pluginVersion="252.26199.163" isGlobalTool="false">&lt;html&gt;
&lt;body&gt;
함수가 아닌 Vue 구성 요소 &lt;a href="https://vuejs.org/v2/api/#data"&gt;data&lt;/a&gt; 프로퍼티를 보고합니다. 객체 리터럴을 함수로 래핑할 것을 제안합니다.
&lt;p&gt;수많은 인스턴스 생성 시 같은 정의가 사용되므로 구성 요소를 정의할 때 &lt;code&gt;data&lt;/code&gt;는 초기 데이터 객체를 반환하는 함수로 정의해야 합니다. 일반 객체가 아직 &lt;code&gt;data&lt;/code&gt;에 사용되고 있는 경우, 바로 그 객체가 생성된 모든 인스턴스의 참조에 의해 공유됩니다! 새 인스턴스가 생성될 때마다 &lt;code&gt;data&lt;/code&gt; 함수를 간단히 호출하여 초기 데이터의 새로운 복사본을 반환할 수 있습니다.
&lt;!-- tooltip end --&gt;&lt;p&gt;&lt;small&gt;Inspection ID: VueDataFunction&lt;/small&gt;&lt;/p&gt;&lt;/body&gt;
&lt;/html&gt;</inspection><inspection shortName="VueUnrecognizedSlot" defaultSeverity="WEAK WARNING" displayName="인식되지 않는 슬롯" enabled="true" language="Vue" pluginId="org.jetbrains.plugins.vue" pluginVersion="252.26199.163" isGlobalTool="false">&lt;html&gt;
&lt;body&gt;
인식되지 않는 Vue 슬롯을 보고합니다.
&lt;!-- tooltip end --&gt;&lt;p&gt;&lt;small&gt;Inspection ID: VueUnrecognizedSlot&lt;/small&gt;&lt;/p&gt;&lt;/body&gt;
&lt;/html&gt;</inspection><inspection shortName="VueDuplicateTag" defaultSeverity="WARNING" displayName="중복 템플릿/스크립트 태그" enabled="true" language="Vue" pluginId="org.jetbrains.plugins.vue" pluginVersion="252.26199.163" isGlobalTool="false">&lt;html&gt;
&lt;body&gt;
Vue 파일 내 &lt;code&gt;template&lt;/code&gt; 또는 &lt;code&gt;script&lt;/code&gt; 태그의 여러 사용 위치를 보고합니다.
  &lt;p&gt;&lt;a href="https://vue-loader.vuejs.org/spec.html"&gt;Vue 구성 요소 사양&lt;/a&gt;은 각각의 &lt;code&gt;*.vue&lt;/code&gt; 파일이 한 번에 최대 하나의 &lt;code&gt;template&lt;/code&gt; 또는 &lt;code&gt;script&lt;/code&gt;를 포함할 수 있다는 것을 나타냅니다.
&lt;!-- tooltip end --&gt;&lt;p&gt;&lt;small&gt;Inspection ID: VueDuplicateTag&lt;/small&gt;&lt;/p&gt;&lt;/body&gt;
&lt;/html&gt;</inspection><inspection shortName="VueUnrecognizedDirective" defaultSeverity="WARNING" displayName="인식되지 않는 지시문" enabled="true" language="Vue" pluginId="org.jetbrains.plugins.vue" pluginVersion="252.26199.163" isGlobalTool="false">&lt;html&gt;
&lt;body&gt;
인식되지 않는 Vue 지시문을 보고합니다.
&lt;!-- tooltip end --&gt;&lt;p&gt;&lt;small&gt;Inspection ID: VueUnrecognizedDirective&lt;/small&gt;&lt;/p&gt;&lt;/body&gt;
&lt;/html&gt;</inspection><inspection shortName="VueMissingComponentImportInspection" defaultSeverity="WARNING" displayName="구성 요소 가져오기 누락" enabled="true" language="Vue" pluginId="org.jetbrains.plugins.vue" pluginVersion="252.26199.163" isGlobalTool="false">&lt;html&gt;
&lt;body&gt;
Vue 템플릿에서 가져와야 하는 Vue 구성 요소를 보고합니다. 누락된 가져오기를 추가하는 빠른 수정을 제공합니다.
&lt;!-- tooltip end --&gt;&lt;p&gt;&lt;small&gt;Inspection ID: VueMissingComponentImportInspection&lt;/small&gt;&lt;/p&gt;&lt;/body&gt;
&lt;/html&gt;</inspection></group><group name="정규식" path=""><inspection shortName="RegExpDuplicateAlternationBranch" defaultSeverity="WARNING" displayName="대체 항목 내 중복 브랜치" enabled="true" language="RegExp" pluginId="com.intellij" pluginVersion="252.26199.162" isGlobalTool="false">&lt;html&gt;
&lt;body&gt;
정규식 대체 항목에 있는 중복 브랜치를 보고합니다.
중복 브랜치는 일치 작업을 느리게 만들고 표현식의 의도롤 모호하게 만듭니다.
&lt;p&gt;&lt;b&gt;예:&lt;/b&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;
  (alpha|bravo|charlie|alpha)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;빠른 수정을 적용한 후:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;
  (alpha|bravo|charlie)
&lt;/code&gt;&lt;/pre&gt;
&lt;!-- tooltip end --&gt;
&lt;p&gt;&lt;small&gt;2017.1의 새로운 기능&lt;/small&gt;
&lt;p&gt;&lt;small&gt;Inspection ID: RegExpDuplicateAlternationBranch&lt;/small&gt;&lt;/p&gt;&lt;/body&gt;
&lt;/html&gt;</inspection><inspection shortName="RegExpAnonymousGroup" defaultSeverity="WARNING" displayName="익명의 캡처 그룹 또는 숫자 역참조" enabled="false" language="RegExp" pluginId="com.intellij" pluginVersion="252.26199.162" isGlobalTool="false">&lt;html&gt;
&lt;body&gt;
정규식 내 익명 캡처 그룹과 숫자 역참조를 보고합니다.
이들은 정규식 파생 언어가 이름이 지정된 그룹 및 그룹 참조를 지원하는 경우에만 보고됩니다.
이름이 지정된 그룹 및 역참조는 코드 가독성을 높여주므로 이를 대신 사용하는 것이 좋습니다.
캡처가 필요하지 않은 경우 비 캡처 그룹을 사용해(예: &lt;code&gt;(xxx)&lt;/code&gt; 대신 &lt;code&gt;(?:xxx)&lt;/code&gt;) 일치 작업의 성능을 높이고 메모리 사용량을 줄일 수 있습니다.
&lt;p&gt;&lt;b&gt;예:&lt;/b&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;
  (\d\d\d\d)\1
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;더 나은 정규식 패턴은 다음과 같습니다.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;
  (?&amp;lt;quad&gt;\d\d\d\d)\k&amp;lt;quad&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;!-- tooltip end --&gt;
&lt;p&gt;&lt;small&gt;2017.2의 새로운 기능&lt;/small&gt;
&lt;p&gt;&lt;small&gt;Inspection ID: RegExpAnonymousGroup&lt;/small&gt;&lt;/p&gt;&lt;/body&gt;
&lt;/html&gt;</inspection><inspection shortName="RegExpEscapedMetaCharacter" defaultSeverity="INFORMATION" displayName="이스케이프된 메타 문자" enabled="true" language="RegExp" pluginId="com.intellij" pluginVersion="252.26199.162" isGlobalTool="false">&lt;html&gt;
&lt;body&gt;
이스케이프 처리된 메타 문자를 보고합니다.
일부 정규식 코드 스타일에서는 정규식을 더 쉽게 이해할 수 있도록 메타 문자를 문자 클래스 안에 넣도록 합니다.
&lt;code&gt;[&lt;/code&gt;, &lt;code&gt;]&lt;/code&gt; 및 &lt;code&gt;^&lt;/code&gt; 메타 문자는 문자 클래스 안에서 추가적인 이스케이프 처리가 필요하므로 이 검사에서 경고되지 않습니다.
&lt;p&gt;&lt;b&gt;예:&lt;/b&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;
  \d+\.\d+
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;빠른 수정을 적용한 후:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;
  \d+[.]\d+
&lt;/code&gt;&lt;/pre&gt;
&lt;!-- tooltip end --&gt;
&lt;p&gt;&lt;small&gt;2017.1의 새로운 기능&lt;/small&gt;
&lt;p&gt;&lt;small&gt;Inspection ID: RegExpEscapedMetaCharacter&lt;/small&gt;&lt;/p&gt;&lt;/body&gt;
&lt;/html&gt;</inspection><inspection shortName="RegExpRedundantNestedCharacterClass" defaultSeverity="WARNING" displayName="중복된 중첩 문자 클래스" enabled="true" language="RegExp" pluginId="com.intellij" pluginVersion="252.26199.162" isGlobalTool="false">&lt;html&gt;
&lt;body&gt;
불필요하게 중첩된 문자 클래스를 보고합니다.
&lt;p&gt;&lt;b&gt;예:&lt;/b&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;
  [a-c[x-z]]
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;빠른 수정을 적용한 후:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;
  [a-cx-z]
&lt;/code&gt;&lt;/pre&gt;
&lt;!-- tooltip end --&gt;
&lt;p&gt;&lt;small&gt;2020.2의 새로운 기능&lt;/small&gt;
&lt;p&gt;&lt;small&gt;Inspection ID: RegExpRedundantNestedCharacterClass&lt;/small&gt;&lt;/p&gt;&lt;/body&gt;
&lt;/html&gt;</inspection><inspection shortName="RegExpOctalEscape" defaultSeverity="INFORMATION" displayName="8진 이스케이프" enabled="true" language="RegExp" pluginId="com.intellij" pluginVersion="252.26199.162" isGlobalTool="false">&lt;html&gt;
&lt;body&gt;
역참조와 혼동하기 쉬운 8진 이스케이프를 보고합니다.
혼동을 피하기 위해 16진 이스케이프를 사용하세요.
&lt;p&gt;&lt;b&gt;예:&lt;/b&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;
  \07
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;빠른 수정을 적용한 후:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;
  \x07
&lt;/code&gt;&lt;/pre&gt;
&lt;!-- tooltip end --&gt;
&lt;p&gt;&lt;small&gt;2017.1의 새로운 기능&lt;/small&gt;
&lt;p&gt;&lt;small&gt;Inspection ID: RegExpOctalEscape&lt;/small&gt;&lt;/p&gt;&lt;/body&gt;
&lt;/html&gt;</inspection><inspection shortName="RegExpSingleCharAlternation" defaultSeverity="WARNING" displayName="단일 문자 대체" enabled="true" language="RegExp" pluginId="com.intellij" pluginVersion="252.26199.162" isGlobalTool="false">&lt;html&gt;
&lt;body&gt;
RegExp의 단일 문자 대체를 보고합니다.
이는 문자 클래스를 사용하는 것보다 간단합니다.
이는 또한 일치율 개선에도 도움이 됩니다.
&lt;p&gt;&lt;b&gt;예:&lt;/b&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;
  a|b|c|d
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;빠른 수정을 적용한 후:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;
  [abcd]
&lt;/code&gt;&lt;/pre&gt;
&lt;!-- tooltip end --&gt;
&lt;p&gt;
&lt;small&gt;2017.1의 새로운 기능&lt;/small&gt;
&lt;p&gt;&lt;small&gt;Inspection ID: RegExpSingleCharAlternation&lt;/small&gt;&lt;/p&gt;&lt;/body&gt;
&lt;/html&gt;</inspection><inspection shortName="RegExpUnexpectedAnchor" defaultSeverity="WARNING" displayName="예기치 않은 위치의 시작 또는 종료 앵커" enabled="true" language="RegExp" pluginId="com.intellij" pluginVersion="252.26199.162" isGlobalTool="false">&lt;html&gt;
&lt;body&gt;
패턴 앞에 오지 않는 &lt;code&gt;^&lt;/code&gt; 또는 &lt;code&gt;\A&lt;/code&gt; 앵커와 패턴 끝에 붙지 않는 &lt;code&gt;$&lt;/code&gt;, &lt;code&gt;\Z&lt;/code&gt; 또는 &lt;code&gt;\z&lt;/code&gt; 앵커를 보고합니다.
잘못된 위치에 있는 이들 정규식 앵커는 패턴이 무엇과도 일치하지 못하도록 합니다.
&lt;code&gt;^&lt;/code&gt; 및 &lt;code&gt;$&lt;/code&gt; 앵커는 대부분 리터럴 문자를 의도했다가 이스케이프를 빠뜨린 경우입니다.
&lt;p&gt;&lt;b&gt;예:&lt;/b&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;
  (가격 $10)
&lt;/code&gt;&lt;/pre&gt;
&lt;!-- tooltip end --&gt;
&lt;p&gt;
&lt;small&gt;2018.1의 새로운 기능&lt;/small&gt;
&lt;p&gt;&lt;small&gt;Inspection ID: RegExpUnexpectedAnchor&lt;/small&gt;&lt;/p&gt;&lt;/body&gt;
&lt;/html&gt;</inspection><inspection shortName="RegExpEmptyAlternationBranch" defaultSeverity="WARNING" displayName="대체 항목 내 빈 브랜치" enabled="true" language="RegExp" pluginId="com.intellij" pluginVersion="252.26199.162" isGlobalTool="false">&lt;html&gt;
&lt;body&gt;
정규식 대체 항목에 있는 빈 브랜치를 보고합니다.
빈 브랜치는 빈 문자열하고만 일치하며 대부분의 경우 이는 기대한 결과가 아닙니다.
이 검사는 대체 항목의 앞 또는 뒤에 있는 단일한 빈 브랜치는 보고하지 않습니다.
&lt;p&gt;&lt;b&gt;예:&lt;/b&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;
  (alpha||bravo)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;빠른 수정을 적용한 후:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;
  (alpha|bravo)
&lt;/code&gt;&lt;/pre&gt;
&lt;!-- tooltip end --&gt;
&lt;p&gt;&lt;small&gt;2017.2의 새로운 기능&lt;/small&gt;
&lt;p&gt;&lt;small&gt;Inspection ID: RegExpEmptyAlternationBranch&lt;/small&gt;&lt;/p&gt;&lt;/body&gt;
&lt;/html&gt;</inspection><inspection shortName="RegExpRedundantClassElement" defaultSeverity="WEAK WARNING" displayName="불필요한 '\d', '[:digit:]' 또는 '\D' 클래스 요소" enabled="true" language="RegExp" pluginId="com.intellij" pluginVersion="252.26199.162" isGlobalTool="false">&lt;html&gt;
&lt;body&gt;
한 클래스에서 &lt;code&gt;\w&lt;/code&gt; 또는 &lt;code&gt;[:word:]&lt;/code&gt;(&lt;code&gt;\D&lt;/code&gt; 및 &lt;code&gt;\W&lt;/code&gt;)와 함께 사용되는 불필요한 &lt;code&gt;\d&lt;/code&gt; 및 &lt;code&gt;[:digit:]&lt;/code&gt;을 보고합니다.
&lt;p&gt;&lt;b&gt;예:&lt;/b&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;
  [\w\d]
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;빠른 수정을 적용한 후:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;
  [\w]
&lt;/code&gt;&lt;/pre&gt;
&lt;!-- tooltip end --&gt;
&lt;p&gt;&lt;small&gt;2022.2의 새로운 기능&lt;/small&gt;
&lt;p&gt;&lt;small&gt;Inspection ID: RegExpRedundantClassElement&lt;/small&gt;&lt;/p&gt;&lt;/body&gt;
&lt;/html&gt;</inspection><inspection shortName="RegExpUnnecessaryNonCapturingGroup" defaultSeverity="WARNING" displayName="불필요한 비 캡처 그룹" enabled="true" language="RegExp" pluginId="com.intellij" pluginVersion="252.26199.162" isGlobalTool="false">&lt;html&gt;
&lt;body&gt;
일치 결과에 영향을 주지 않는 불필요한 비 캡처 그룹을 보고합니다.
&lt;p&gt;&lt;b&gt;예:&lt;/b&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;
  Everybody be cool, (?:this) is a robbery!
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;빠른 수정을 적용한 후:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;
  Everybody be cool, this is a robbery!
&lt;/code&gt;&lt;/pre&gt;
&lt;!-- tooltip end --&gt;
&lt;p&gt;&lt;small&gt;2021.1의 새로운 기능&lt;/small&gt;
&lt;p&gt;&lt;small&gt;Inspection ID: RegExpUnnecessaryNonCapturingGroup&lt;/small&gt;&lt;/p&gt;&lt;/body&gt;
&lt;/html&gt;</inspection><inspection shortName="CustomRegExpInspection" defaultSeverity="WARNING" displayName="사용자 지정 정규식 검사" enabled="true" language="" pluginId="com.intellij" pluginVersion="252.26199.162" isGlobalTool="false">&lt;html&gt;
&lt;body&gt;
사용자 지정 정규식 검사
&lt;!-- tooltip end --&gt;&lt;p&gt;&lt;small&gt;Inspection ID: CustomRegExpInspection&lt;/small&gt;&lt;/p&gt;&lt;/body&gt;
&lt;/html&gt;</inspection><inspection shortName="RegExpRedundantEscape" defaultSeverity="WARNING" displayName="중복 문자 이스케이프" enabled="true" language="RegExp" pluginId="com.intellij" pluginVersion="252.26199.162" isGlobalTool="false">&lt;html&gt;
&lt;body&gt;
의미를 유지하는 이스케이프되지 않은 문자로 대체할 수 있는 불필요한 문자 이스케이프 시퀀스를 보고합니다.
문자 클래스 외부에서 필요한 많은 이스케이프 시퀀스는 문자 클래스의 대괄호 &lt;code&gt;[]&lt;/code&gt; 안에서는 불필요합니다.
&lt;p&gt;
  문자 클래스 외부의 이스케이프되지 않은 여는 중괄호 &lt;code&gt;{&lt;/code&gt;는 일부 파생 언어에서는 허용되지만(JavaScript, Python 등), 중괄호를 문자로 이스케이프 처리해야 하는 파생 언어도 있으므로 혼란을 유발하고 패턴을 이식하기 어렵게 만들 수 있습니다.
  이러한 이유 때문에 이 검사는 이스케이프된 여는 중괄호를 보고하지 않습니다.
&lt;p&gt;&lt;b&gt;예:&lt;/b&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;
  \-\;[\.]
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;빠른 수정을 적용한 후:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;
  -;[.]
&lt;/code&gt;&lt;/pre&gt;
&lt;!-- tooltip end --&gt;
&lt;p&gt;
&lt;b&gt;Ignore escaped closing brackets '}' and ']'(이스케이프된 닫는 괄호 '}' 및 ']' 무시)&lt;/b&gt; 옵션은 문자 클래스 외부의 &lt;code&gt;\}&lt;/code&gt; 및 &lt;code&gt;\]&lt;/code&gt;가 정규식 파생 언어로 이스케이프 해제되도록 허용된 경우, 해당 괄호를 보고할지 여부를 지정합니다.
&lt;p&gt;&lt;small&gt;2017.3의 새로운 기능&lt;/small&gt;
&lt;p&gt;&lt;small&gt;Inspection ID: RegExpRedundantEscape&lt;/small&gt;&lt;/p&gt;&lt;/body&gt;
&lt;/html&gt;</inspection><inspection shortName="RegExpRepeatedSpace" defaultSeverity="WARNING" displayName="연속 공백" enabled="true" language="RegExp" pluginId="com.intellij" pluginVersion="252.26199.162" isGlobalTool="false">&lt;html&gt;
&lt;body&gt;
정규식 내 두 개 이상의 연속된 공백을 보고합니다.
기본적으로 공백은 표시되지 않으므로 필요한 공백이 몇 개인지 확인하기 어려울 수 있습니다.
연속 공백을 단일 공백과 측정한 수량자로 교체하면 정규식이 더 명확해집니다.
&lt;p&gt;&lt;b&gt;예:&lt;/b&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;
  (     )
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;빠른 수정을 적용한 후:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;
  ( {5})
&lt;/code&gt;&lt;/pre&gt;
&lt;!-- tooltip end --&gt;
&lt;p&gt;
&lt;small&gt;2017.1의 새로운 기능&lt;/small&gt;
&lt;p&gt;&lt;small&gt;Inspection ID: RegExpRepeatedSpace&lt;/small&gt;&lt;/p&gt;&lt;/body&gt;
&lt;/html&gt;</inspection><inspection shortName="RegExpSimplifiable" defaultSeverity="WEAK WARNING" displayName="정규 표현식을 단순화할 수 있습니다" enabled="true" language="RegExp" pluginId="com.intellij" pluginVersion="252.26199.162" isGlobalTool="false">&lt;html&gt;
&lt;body&gt;
단순화할 수 있는 정규 표현식을 보고합니다.
&lt;p&gt;&lt;b&gt;예:&lt;/b&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;
  [a] xx* [ah-hz]
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;빠른 수정을 적용한 후:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;
  a x+ [ahz]
&lt;/code&gt;&lt;/pre&gt;
&lt;!-- tooltip end --&gt;
&lt;p&gt;&lt;small&gt;2022.1의 새로운 기능&lt;/small&gt;
&lt;p&gt;&lt;small&gt;Inspection ID: RegExpSimplifiable&lt;/small&gt;&lt;/p&gt;&lt;/body&gt;
&lt;/html&gt;</inspection><inspection shortName="RegExpSuspiciousBackref" defaultSeverity="WARNING" displayName="의심스러운 역참조" enabled="true" language="RegExp" pluginId="com.intellij" pluginVersion="252.26199.162" isGlobalTool="false">&lt;html&gt;
&lt;body&gt;
런타임 때 해결되지 않는 역참조를 보고합니다.
이는 역참조가 그 어떤 것과도 일치할 수 없다는 의미입니다.
역참조 이후 그룹이 정의되거나 그룹이 대체 항목의 다른 브랜치에서 정의되는 경우 역참조는 해결되지 않습니다.
&lt;p&gt;&lt;b&gt;역참조 이후 정의되는 그룹의 예시:&lt;/b&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;
  \1(abc)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;b&gt;다른 브랜치에서 사용되는 그룹과 역참조의 예시:&lt;/b&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;
  a(b)c|(xy)\1z
&lt;/code&gt;&lt;/pre&gt;

&lt;!-- tooltip end --&gt;
&lt;p&gt;&lt;small&gt;2022.1의 새로운 기능&lt;/small&gt;
&lt;p&gt;&lt;small&gt;Inspection ID: RegExpSuspiciousBackref&lt;/small&gt;&lt;/p&gt;&lt;/body&gt;
&lt;/html&gt;</inspection><inspection shortName="RegExpDuplicateCharacterInClass" defaultSeverity="WARNING" displayName="문자 클래스 내 중복 문자" enabled="true" language="RegExp" pluginId="com.intellij" pluginVersion="252.26199.162" isGlobalTool="false">&lt;html&gt;
&lt;body&gt;
RegExp 문자 클래스 내 중복 문자를 보고합니다.
중복 문자는 불필요하며 제거하더라도 정규식의 의미가 변하지 않습니다.
&lt;p&gt;&lt;b&gt;예:&lt;/b&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;
  [aabc]
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;빠른 수정을 적용한 후:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;
  [abc]
&lt;/code&gt;&lt;/pre&gt;
&lt;!-- tooltip end --&gt;
&lt;p&gt;&lt;small&gt;Inspection ID: RegExpDuplicateCharacterInClass&lt;/small&gt;&lt;/p&gt;&lt;/body&gt;
&lt;/html&gt;</inspection></group><group name="ES2015 마이그레이션 지원" path="JavaScript 및 TypeScript"><inspection shortName="ES6ConvertIndexedForToForOf" defaultSeverity="INFORMATION" displayName="'for..of' 대신 색인 생성된 'for'가 사용됩니다" enabled="true" language="JavaScript" pluginId="JavaScript" pluginVersion="252.26199.162" isGlobalTool="false">&lt;html&gt;
&lt;body&gt;
배열을 대상으로 사용된 색인화된 &lt;code&gt;&lt;a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Statements/for"&gt;for&lt;/a&gt;&lt;/code&gt; 루프를 보고합니다. &lt;code&gt;&lt;a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Statements/for...of"&gt;for..of&lt;/a&gt;&lt;/code&gt; 루프로 바꿀 것을 제안합니다.
&lt;br/&gt;&lt;code&gt;for..of&lt;/code&gt; 루프는 ECMAScript 6에 도입되었으며 &lt;code&gt;iterable&lt;/code&gt; 객체를 반복합니다.
&lt;!-- tooltip end --&gt;&lt;p&gt;&lt;small&gt;Inspection ID: ES6ConvertIndexedForToForOf&lt;/small&gt;&lt;/p&gt;&lt;/body&gt;
&lt;/html&gt;</inspection><inspection shortName="ES6ConvertVarToLetConst" defaultSeverity="WEAK WARNING" displayName="'let' 또는 'const' 대신 'var'가 사용됩니다" enabled="true" language="JavaScript" pluginId="JavaScript" pluginVersion="252.26199.162" isGlobalTool="false">&lt;html&gt;
&lt;body&gt;
&lt;code&gt;let&lt;/code&gt; 또는 &lt;code&gt;const&lt;/code&gt; 대신 사용된 &lt;code&gt;var&lt;/code&gt; 선언을 보고합니다.&lt;br/&gt;
&lt;code&gt;let&lt;/code&gt; 및 &lt;code&gt;const&lt;/code&gt;는 모두 블록 스코프이며 더욱 엄격하게 동작합니다.
&lt;br/&gt;&lt;br/&gt;
특정 값의 의미에 따라 모든 &lt;code&gt;var&lt;/code&gt;선언을 &lt;code&gt;let&lt;/code&gt; 또는 &lt;code&gt;const&lt;/code&gt; 선언으로 바꿀 것을 제안합니다.
참조 오류를 피하기 위해 선언을 함수의 최상위로 이동하거나 변수가 처음 사용되는 위치보다 앞에 배치할 수 있습니다.
&lt;br/&gt; '모든 작업 수정을 통해 var을 보수적으로 변환' 옵션을 켜서 '모두 수정' 액션 사용 시 이러한 복합 케이스가 변경되지 않도록 하십시오.
&lt;!-- tooltip end --&gt;&lt;p&gt;&lt;small&gt;Inspection ID: ES6ConvertVarToLetConst&lt;/small&gt;&lt;/p&gt;&lt;/body&gt;
&lt;/html&gt;</inspection><inspection shortName="JSFunctionExpressionToArrowFunction" defaultSeverity="INFORMATION" displayName="화살표 함수 대신 함수 표현식이 사용됩니다" enabled="true" language="JavaScript" pluginId="JavaScript" pluginVersion="252.26199.162" isGlobalTool="false">&lt;html&gt;
&lt;body&gt;&lt;a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/function"&gt;함수&lt;/a&gt; 표현식을 보고합니다.
&lt;a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Functions/Arrow_functions"&gt;화살표 함수&lt;/a&gt;로 변환하는 것을 제안합니다.
&lt;p&gt;예:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;arr.map(function(el) {return el + 1})&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;빠른 수정이 적용된 후 코드는 다음과 같습니다:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;arr.map(el =&gt; el + 1)&lt;/code&gt;&lt;/pre&gt;
&lt;!-- tooltip end --&gt;&lt;p&gt;&lt;small&gt;Inspection ID: JSFunctionExpressionToArrowFunction&lt;/small&gt;&lt;/p&gt;&lt;/body&gt;
&lt;/html&gt;</inspection><inspection shortName="ES6ConvertRequireIntoImport" defaultSeverity="INFORMATION" displayName="'import' 대신 'require()'이 사용됩니다" enabled="true" language="JavaScript" pluginId="JavaScript" pluginVersion="252.26199.162" isGlobalTool="false">&lt;html&gt;
&lt;body&gt;
&lt;code&gt;require()&lt;/code&gt; 문을 보고합니다. &lt;code&gt;require()&lt;/code&gt; 호출을 &lt;code&gt;import&lt;/code&gt; 문으로 바꿀 것을 제안합니다.
&lt;br/&gt;&lt;br/&gt;
'모든 작업 수정을 통해 내부 스코프 안에서 require() 변환'을 활성화하여 '모든 수정' 액션 사용 시 중첩된 함수와 구문 내 모든 &lt;code&gt;require()&lt;/code&gt; 호출을 변환하십시오.
&lt;br/&gt;&lt;br/&gt;
내부 스코프 안에서 &lt;code&gt;require()&lt;/code&gt; 문을 &lt;code&gt;import&lt;/code&gt; 문으로 변환하면 코드의 의미가 달라질 수 있습니다.
import 문은 정적 모듈 종속성이며, 호이스팅되어
현재 모듈의 최상위로 이동되었습니다. &lt;code&gt;require()&lt;/code&gt; 호출은 모듈을 동적으로 불러옵니다.
이는 조건적으로 실행될 수 있으며, 스코프는 사용된 표현식에 의해 정의됩니다.
&lt;br/&gt;'모든 작업 수정을 통해 내부 스코프 안에서 require() 변환' 체크박스를 끄고 '모두 수정' 액션 사용 시 이러한 복합 사례 내의 변경을 막으세요.
&lt;!-- tooltip end --&gt;&lt;p&gt;&lt;small&gt;Inspection ID: ES6ConvertRequireIntoImport&lt;/small&gt;&lt;/p&gt;&lt;/body&gt;
&lt;/html&gt;</inspection><inspection shortName="JSStringConcatenationToES6Template" defaultSeverity="INFORMATION" displayName="템플릿 리터럴 대신 문자열 연결이 사용됩니다" enabled="true" language="JavaScript" pluginId="JavaScript" pluginVersion="252.26199.162" isGlobalTool="false">&lt;html&gt;
&lt;body&gt;
문자열 연결을 보고합니다. &lt;a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Template_literals"&gt;템플릿 리터럴&lt;/a&gt;로 바꿀 것을 제안합니다.
&lt;p&gt;예시&lt;/p&gt;
&lt;pre&gt;&lt;code&gt; "result: " + a + "." &lt;/code&gt;&lt;/pre&gt;
 &lt;p&gt;빠른 수정이 적용된 후 코드는 다음과 같습니다:&lt;/p&gt;
 &lt;pre&gt;&lt;code&gt; '결과: ${a}.' &lt;/code&gt;&lt;/pre&gt;

&lt;!-- tooltip end --&gt;&lt;p&gt;&lt;small&gt;Inspection ID: JSStringConcatenationToES6Template&lt;/small&gt;&lt;/p&gt;&lt;/body&gt;
&lt;/html&gt;</inspection><inspection shortName="ES6ConvertToForOf" defaultSeverity="INFORMATION" displayName="'for..of' 대신 'for..in'이 사용됩니다" enabled="true" language="JavaScript" pluginId="JavaScript" pluginVersion="252.26199.162" isGlobalTool="false">&lt;html&gt;
&lt;body&gt;
배열을 대상으로 &lt;code&gt;&lt;a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Statements/for...in"&gt;for..in&lt;/a&gt;&lt;/code&gt; 루프를 사용한 위치를 보고합니다. &lt;code&gt;&lt;a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Statements/for...of"&gt;for..of&lt;/a&gt;&lt;/code&gt; 루프로 바꿀 것을 제안합니다.
&lt;br/&gt;ECMAScript 6에 도입된 &lt;code&gt;for..of&lt;/code&gt; 루프는 &lt;code&gt;iterable&lt;/code&gt; 객체를 반복합니다.
배열의 경우, 이 구조는 배열 객체의 속성과는 다르게 배열의 값과만 동작하기 때문에 &lt;code&gt;for..in&lt;/code&gt;보다 선호됩니다.
&lt;!-- tooltip end --&gt;&lt;p&gt;&lt;small&gt;Inspection ID: ES6ConvertToForOf&lt;/small&gt;&lt;/p&gt;&lt;/body&gt;
&lt;/html&gt;</inspection><inspection shortName="ES6ConvertLetToConst" defaultSeverity="INFORMATION" displayName="'const' 대신 'let'이 사용됩니다" enabled="true" language="JavaScript" pluginId="JavaScript" pluginVersion="252.26199.162" isGlobalTool="false">&lt;html&gt;
&lt;body&gt;
&lt;code&gt;const&lt;/code&gt;로 만들 수 있는 &lt;code&gt;let&lt;/code&gt; 선언을 보고합니다.&lt;br/&gt;
&lt;!-- tooltip end --&gt;&lt;p&gt;&lt;small&gt;Inspection ID: ES6ConvertLetToConst&lt;/small&gt;&lt;/p&gt;&lt;/body&gt;
&lt;/html&gt;</inspection><inspection shortName="ES6ConvertModuleExportToExport" defaultSeverity="INFORMATION" displayName=" 'export' 대신 'module.export'가 사용됩니다" enabled="true" language="JavaScript" pluginId="JavaScript" pluginVersion="252.26199.162" isGlobalTool="false">&lt;html&gt;
&lt;body&gt;
&lt;code&gt;module.export&lt;/code&gt; 문을 보고합니다. &lt;code&gt;export&lt;/code&gt; 또는 &lt;code&gt;export default&lt;/code&gt; 문으로 바꿀 것을 제안합니다.
&lt;br/&gt;&lt;br/&gt;
&lt;code&gt;export&lt;/code&gt; 문은 모듈의 최상위에만 있을 수 있기 때문에 &lt;code&gt;module.export&lt;/code&gt;를 &lt;code&gt;export&lt;/code&gt;로 변환하기 위한 빠른 수정은 함수 또는 구문 내부의 &lt;code&gt;module.export&lt;/code&gt;에 사용할 수 없습니다.
&lt;!-- tooltip end --&gt;&lt;p&gt;&lt;small&gt;Inspection ID: ES6ConvertModuleExportToExport&lt;/small&gt;&lt;/p&gt;&lt;/body&gt;
&lt;/html&gt;</inspection></group><group name="사용하지 않는 심볼" path="JavaScript 및 TypeScript"><inspection shortName="JSUnusedGlobalSymbols" defaultSeverity="WARNING" displayName="사용하지 않는 전역 심볼" enabled="true" language="JavaScript" pluginId="JavaScript" pluginVersion="252.26199.162" isGlobalTool="false">&lt;html&gt;
&lt;body&gt;
모든 곳에서 접근 가능한 사용되지 않은 public 함수, 변수, 클래스 또는 프로퍼티를 보고합니다.
&lt;!-- tooltip end --&gt;&lt;p&gt;&lt;small&gt;Inspection ID: JSUnusedGlobalSymbols&lt;/small&gt;&lt;/p&gt;&lt;/body&gt;
&lt;/html&gt;</inspection><inspection shortName="JSUnusedLocalSymbols" defaultSeverity="WARNING" displayName="사용하지 않는 지역 심볼" enabled="true" language="JavaScript" pluginId="JavaScript" pluginVersion="252.26199.162" isGlobalTool="false">&lt;html&gt;
&lt;body&gt;
로컬에서 접근 가능한 미사용 매개변수, 지역 변수, 함수, 클래스 또는 private 멤버 선언을 보고합니다.
&lt;!-- tooltip end --&gt;&lt;p&gt;&lt;small&gt;Inspection ID: JSUnusedLocalSymbols&lt;/small&gt;&lt;/p&gt;&lt;/body&gt;
&lt;/html&gt;</inspection><inspection shortName="JSUnusedAssignment" defaultSeverity="WARNING" displayName="사용하지 않는 대입" enabled="true" language="JavaScript" pluginId="JavaScript" pluginVersion="252.26199.162" isGlobalTool="false">&lt;html&gt;
&lt;body&gt;
대입 후에 값이 전혀 사용되지 않는 변수를 보고합니다.&lt;br&gt;
미사용 변수를 삭제해 코드를 단축하고 불필요한 할당을 피할 것을 제안합니다.
&lt;p&gt;다음과 같은 경우가 보고됩니다.&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;변수가 대입 후 한 번도 읽히지 않습니다.&lt;/li&gt;
  &lt;li&gt;변수 값은 변수가 다음에 읽히기 전에 항상 다른 대입으로 덮어쓰기됩니다.&lt;/li&gt;
  &lt;li&gt;변수의 이니셜라이저는 불필요합니다(위에서 언급한 이유 중 하나로).&lt;/li&gt;
&lt;/ul&gt;
&lt;!-- tooltip end --&gt;&lt;p&gt;&lt;small&gt;Inspection ID: JSUnusedAssignment&lt;/small&gt;&lt;/p&gt;&lt;/body&gt;
&lt;/html&gt;</inspection></group><group name="JSONPath" path=""><inspection shortName="JsonPathEvaluateUnknownKey" defaultSeverity="WARNING" displayName="JSONPath 표현식 평가에 사용된 알 수 없는 프로퍼티 키" enabled="true" language="JSONPath" pluginId="com.intellij.jsonpath" pluginVersion="252.26199.162" isGlobalTool="false">&lt;html&gt;
&lt;body&gt;
평가할 소스 JSON 문서에서 누락된 JSONPath 표현식 내 키를 보고합니다.
&lt;!-- tooltip end --&gt;&lt;p&gt;&lt;small&gt;Inspection ID: JsonPathEvaluateUnknownKey&lt;/small&gt;&lt;/p&gt;&lt;/body&gt;
&lt;/html&gt;</inspection><inspection shortName="JsonPathUnknownOperator" defaultSeverity="WARNING" displayName="알 수 없는 JSONPath 연산자" enabled="true" language="JSONPath" pluginId="com.intellij.jsonpath" pluginVersion="252.26199.162" isGlobalTool="false">&lt;html&gt;
&lt;body&gt;
표준 연산자인 &lt;code&gt;in&lt;/code&gt;,&lt;code&gt;nin&lt;/code&gt;,&lt;code&gt;subsetof&lt;/code&gt;,&lt;code&gt;anyof&lt;/code&gt;,&lt;code&gt;noneof&lt;/code&gt;,&lt;code&gt;size&lt;/code&gt;,&lt;code&gt;empty&lt;/code&gt;,&lt;code&gt;contains&lt;/code&gt;가 아닌 JSONPath 표현식 내 알 수 없는 연산자를 보고합니다.
&lt;!-- tooltip end --&gt;&lt;p&gt;&lt;small&gt;Inspection ID: JsonPathUnknownOperator&lt;/small&gt;&lt;/p&gt;&lt;/body&gt;
&lt;/html&gt;</inspection><inspection shortName="JsonPathUnknownFunction" defaultSeverity="WARNING" displayName="알 수 없는 JSONPath 함수" enabled="true" language="JSONPath" pluginId="com.intellij.jsonpath" pluginVersion="252.26199.162" isGlobalTool="false">&lt;html&gt;
&lt;body&gt;
알려진 표준 함수 이름인 &lt;code&gt;concat&lt;/code&gt;, &lt;code&gt;keys&lt;/code&gt;, &lt;code&gt;length&lt;/code&gt;, &lt;code&gt;min&lt;/code&gt;, &lt;code&gt;max&lt;/code&gt;, &lt;code&gt;avg&lt;/code&gt;, &lt;code&gt;stddev&lt;/code&gt;, &lt;code&gt;sum&lt;/code&gt;이 아닌 JSONPath 함수 호출 내 알 수 없는 이름을 보고합니다.
&lt;!-- tooltip end --&gt;&lt;p&gt;&lt;small&gt;Inspection ID: JsonPathUnknownFunction&lt;/small&gt;&lt;/p&gt;&lt;/body&gt;
&lt;/html&gt;</inspection></group><group name="교정" path=""><inspection shortName="SpellCheckingInspection" defaultSeverity="TYPO" displayName="오타" enabled="true" language="" pluginId="com.intellij" pluginVersion="252.26199.162" isGlobalTool="false">&lt;html&gt;&lt;body&gt;코드, 주석 및 리터럴에 있는 오타를 보고하고 클릭 한 번으로 이를 수정합니다.&lt;!-- tooltip end --&gt;&lt;p&gt;&lt;small&gt;Inspection ID: SpellCheckingInspection&lt;/small&gt;&lt;/p&gt;&lt;/body&gt;&lt;/html&gt;
</inspection><inspection shortName="LanguageDetectionInspection" defaultSeverity="WEAK WARNING" displayName="자연어 탐지" enabled="true" language="" pluginId="tanvd.grazi" pluginVersion="252.26199.162" isGlobalTool="false">&lt;html lang="ko"&gt;&lt;body&gt;자연어를 탐지하고 해당 언어의 맞춤법 검사를 활성화하도록 제안합니다.&lt;!-- tooltip end --&gt;&lt;p&gt;&lt;small&gt;Inspection ID: LanguageDetectionInspection&lt;/small&gt;&lt;/p&gt;&lt;/body&gt;&lt;/html&gt;
</inspection><inspection shortName="GrazieInspection" defaultSeverity="GRAMMAR_ERROR" displayName="문법" enabled="true" language="" pluginId="tanvd.grazi" pluginVersion="252.26199.162" isGlobalTool="false">&lt;html lang="ko"&gt;&lt;body&gt;
텍스트 내 문법 오류를 보고합니다. 이 검사는 &lt;a href="settings://reference.settingsdialog.project.grazie"&gt;설정 | 에디터 | 자연어 | 문법 및 스타일&lt;/a&gt;에서 구성할 수 있습니다.
&lt;!-- tooltip end --&gt;&lt;p&gt;&lt;small&gt;Inspection ID: GrazieInspection&lt;/small&gt;&lt;/p&gt;&lt;/body&gt;&lt;/html&gt;
</inspection></group><group name="Sass/SCSS" path=""><inspection shortName="SassScssResolvedByNameOnly" defaultSeverity="WEAK WARNING" displayName="import 문 누락" enabled="true" language="CSS" pluginId="org.jetbrains.plugins.sass" pluginVersion="252.26199.162" isGlobalTool="false">&lt;html&gt;
&lt;body&gt;
다른 파일에 선언되어 있으나 이 파일이 현재 파일에 명시적으로 &lt;a href="https://sass-lang.com/documentation/at-rules/import"&gt;import&lt;/a&gt;되지 않은 변수, mixin, 또는 함수 참조를 보고합니다.
&lt;p&gt;&lt;b&gt;예:&lt;/b&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;
* {
  margin: $var-in-other-file;
}
&lt;/code&gt;&lt;/pre&gt;
&lt;!-- tooltip end --&gt;
&lt;p&gt;&lt;small&gt;Inspection ID: SassScssResolvedByNameOnly&lt;/small&gt;&lt;/p&gt;&lt;/body&gt;
&lt;/html&gt;</inspection><inspection shortName="SassScssUnresolvedPlaceholderSelector" defaultSeverity="WARNING" displayName="해결되지 않은 자리표시자 선택자" enabled="true" language="SCSS" pluginId="org.jetbrains.plugins.sass" pluginVersion="252.26199.162" isGlobalTool="false">&lt;html&gt;
&lt;body&gt;
해결되지 않은 &lt;a href="https://sass-lang.com/documentation/variables"&gt;Sass/SCSS placeholder selector&lt;/a&gt; 참조를 보고합니다.
&lt;p&gt;&lt;b&gt;예:&lt;/b&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;
* {
  @extend %unknown-placeholder-selector;
}
&lt;/code&gt;&lt;/pre&gt;
&lt;!-- tooltip end --&gt;
&lt;p&gt;&lt;small&gt;Inspection ID: SassScssUnresolvedPlaceholderSelector&lt;/small&gt;&lt;/p&gt;&lt;/body&gt;
&lt;/html&gt;</inspection><inspection shortName="SassScssUnresolvedMixin" defaultSeverity="WARNING" displayName="해결되지 않은 mixin" enabled="true" language="SCSS" pluginId="org.jetbrains.plugins.sass" pluginVersion="252.26199.162" isGlobalTool="false">&lt;html&gt;
&lt;body&gt;
해결되지 않은 &lt;a href="https://sass-lang.com/documentation/at-rules/mixin"&gt;Sass/SCSS mixin &lt;/a&gt;참조를 보고합니다.
&lt;p&gt;&lt;b&gt;예:&lt;/b&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;
* {
  @include unknown-mixin;
}
&lt;/code&gt;&lt;/pre&gt;
&lt;!-- tooltip end --&gt;
&lt;p&gt;&lt;small&gt;Inspection ID: SassScssUnresolvedMixin&lt;/small&gt;&lt;/p&gt;&lt;/body&gt;
&lt;/html&gt;</inspection><inspection shortName="SassScssUnresolvedVariable" defaultSeverity="WARNING" displayName="해결되지 않은 변수" enabled="true" language="SCSS" pluginId="org.jetbrains.plugins.sass" pluginVersion="252.26199.162" isGlobalTool="false">&lt;html&gt;
&lt;body&gt;
해결되지 않은 &lt;a href="https://sass-lang.com/documentation/variables"&gt;Sass/SCSS 변수&lt;/a&gt;참조를 보고합니다.
&lt;p&gt;&lt;b&gt;예:&lt;/b&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;
* {
  margin: $unknown-var;
}
&lt;/code&gt;&lt;/pre&gt;
&lt;!-- tooltip end --&gt;
&lt;p&gt;&lt;small&gt;Inspection ID: SassScssUnresolvedVariable&lt;/small&gt;&lt;/p&gt;&lt;/body&gt;
&lt;/html&gt;</inspection></group><group name="코드 구문이 혼동될 수 있음" path="JavaScript 및 TypeScript"><inspection shortName="PointlessArithmeticExpressionJS" defaultSeverity="WARNING" displayName="무의미한 산술 표현식" enabled="true" language="JavaScript" pluginId="JavaScript" pluginVersion="252.26199.162" isGlobalTool="false">&lt;html&gt;
&lt;body&gt;
0으로 더하기 또는 빼기, 0 또는 1로 곱하기, 1로 나누기, 0으로 시프트 연산을 포함하는 산술 표현식을 보고합니다. 그러한 표현식은 완전히 완료되지 않은 자동 리팩토링으로 인해 발생할 수 있습니다.
&lt;!-- tooltip end --&gt;&lt;p&gt;&lt;small&gt;Inspection ID: PointlessArithmeticExpressionJS&lt;/small&gt;&lt;/p&gt;&lt;/body&gt;
&lt;/html&gt;</inspection><inspection shortName="DynamicallyGeneratedCodeJS" defaultSeverity="WARNING" displayName="동적으로 생성된 코드 실행" enabled="false" language="JavaScript" pluginId="JavaScript" pluginVersion="252.26199.162" isGlobalTool="false">&lt;html&gt;
&lt;body&gt;
&lt;code&gt;eval()&lt;/code&gt;, &lt;code&gt;setTimeout()&lt;/code&gt;, 또는 &lt;code&gt;setInterval()&lt;/code&gt;함수의 호출 또는 &lt;code&gt;Function&lt;/code&gt; 객체의 할당을 보고합니다.  이러한 함수는 JavaScript 텍스트 내 임의의 문자열을 실행하는데 사용되며 보통 동적으로 생성됩니다.  이는 혼란을 일으킬 수 있으며 보안상에 위험이 따를 수 있습니다.
&lt;br/&gt;&lt;br/&gt;
 코드를 생성하지 않고 콜백 함수가 이러한 메서드에 정적으로 제공되는 경우는 무시됩니다.
&lt;!-- tooltip end --&gt;&lt;p&gt;&lt;small&gt;Inspection ID: DynamicallyGeneratedCodeJS&lt;/small&gt;&lt;/p&gt;&lt;/body&gt;
&lt;/html&gt;</inspection><inspection shortName="BlockStatementJS" defaultSeverity="WARNING" displayName="불필요한 block 문" enabled="false" language="JavaScript" pluginId="JavaScript" pluginVersion="252.26199.162" isGlobalTool="false">&lt;html&gt;
&lt;body&gt;
&lt;code&gt;if&lt;/code&gt;, &lt;code&gt;for&lt;/code&gt;, &lt;code&gt;while&lt;/code&gt;, &lt;code&gt;do&lt;/code&gt;, &lt;code&gt;with&lt;/code&gt;, 또는 &lt;code&gt;try&lt;/code&gt; 문의 본문, 또는 함수 선언의 본문으로 사용되고 있지 않는 블록 구문을 보고합니다. ECMAScript 6 이후 버전부터 JavaScript 블록은 &lt;code&gt;let&lt;/code&gt; 및 &lt;code&gt;const&lt;/code&gt;변수에 새로운 스코프를 도입하지만 &lt;code&gt;var&lt;/code&gt;변수와 함께 사용 시 독립된 블록 구문은 혼란을 일으킬 수 있으며 미묘한 버그를 초래할 수 있습니다.
&lt;!-- tooltip end --&gt;&lt;p&gt;&lt;small&gt;Inspection ID: BlockStatementJS&lt;/small&gt;&lt;/p&gt;&lt;/body&gt;
&lt;/html&gt;</inspection><inspection shortName="NestedFunctionJS" defaultSeverity="WARNING" displayName="중첩된 함수" enabled="false" language="JavaScript" pluginId="JavaScript" pluginVersion="252.26199.162" isGlobalTool="false">&lt;html&gt;
&lt;body&gt;
다른 함수 내부에 중첩된 함수를 보고합니다.
JavaScript는 함수 중첩을 허용하나 그러한 구문은 혼란을 일으킬 수 있습니다.
&lt;!-- tooltip end --&gt;
&lt;p&gt;
  아래 체크박스를 사용해 익명 중첩 함수를 무시하십시오.
&lt;/p&gt;
&lt;p&gt;&lt;small&gt;Inspection ID: NestedFunctionJS&lt;/small&gt;&lt;/p&gt;&lt;/body&gt;
&lt;/html&gt;</inspection><inspection shortName="NegatedIfStatementJS" defaultSeverity="WARNING" displayName="부정된 'if' 문" enabled="false" language="JavaScript" pluginId="JavaScript" pluginVersion="252.26199.162" isGlobalTool="false">&lt;html&gt;
&lt;body&gt;
&lt;b&gt;else&lt;/b&gt; 브랜치 및 부정된 조건을 포함하는 &lt;b&gt;if&lt;/b&gt; 문을 보고합니다.
&lt;b&gt;if&lt;/b&gt; 및 &lt;b&gt;else&lt;/b&gt; 브랜치의 순서를 반전시키면 보통 그러한 구문의 명확도가 높아집니다.
&lt;!-- tooltip end --&gt;&lt;p&gt;&lt;small&gt;Inspection ID: NegatedIfStatementJS&lt;/small&gt;&lt;/p&gt;&lt;/body&gt;
&lt;/html&gt;
</inspection><inspection shortName="OverlyComplexArithmeticExpressionJS" defaultSeverity="WARNING" displayName="지나치게 복잡한 산술 표현식" enabled="false" language="JavaScript" pluginId="JavaScript" pluginVersion="252.26199.162" isGlobalTool="false">&lt;!-- Copied from community/plugins/InspectionGadgets/src/inspectionDescriptions/OverlyComplexArithmeticExpression.html --&gt;
&lt;html&gt;
&lt;body&gt;
항이 너무 많은 산술 표현식을 보고합니다. 그러한 표현식은 혼동을 일으키고 버그가 발생하기 쉽습니다.
&lt;!-- tooltip end --&gt;
&lt;p&gt;
  아래 필드를 사용해 산술 표현식에 허용된 최대 항 개수를 지정하십시오.
&lt;p&gt;&lt;small&gt;Inspection ID: OverlyComplexArithmeticExpressionJS&lt;/small&gt;&lt;/p&gt;&lt;/body&gt;
&lt;/html&gt;</inspection><inspection shortName="ConfusingFloatingPointLiteralJS" defaultSeverity="WARNING" displayName="혼동되는 부동소수점 리터럴" enabled="false" language="JavaScript" pluginId="JavaScript" pluginVersion="252.26199.162" isGlobalTool="false">&lt;!-- Copied from community/plugins/InspectionGadgets/src/inspectionDescriptions/ConfusingFloatingPointLiteral.html --&gt;
&lt;html&gt;
&lt;body&gt;
소수점이 없거나 소수점 앞에 숫자가 없거나 소수점 뒤에 숫자가 없는 부동소수점 수를 보고합니다. 그러한 리터럴은 혼란을 일으킬 수 있으며 몇 가지 코딩 표준을 위반합니다.
&lt;!-- tooltip end --&gt;&lt;p&gt;&lt;small&gt;Inspection ID: ConfusingFloatingPointLiteralJS&lt;/small&gt;&lt;/p&gt;&lt;/body&gt;
&lt;/html&gt;</inspection><inspection shortName="MagicNumberJS" defaultSeverity="WARNING" displayName="매직 넘버" enabled="false" language="JavaScript" pluginId="JavaScript" pluginVersion="252.26199.162" isGlobalTool="false">&lt;!-- Copied from community/plugins/InspectionGadgets/src/inspectionDescriptions/MagicNumber.html --&gt;
&lt;html&gt;
&lt;body&gt;
상수 선언에서 이름이 지정되지 않고 사용되고 있는 숫자 리터럴의 '매직 넘버'를 보고합니다.
매직 넘버는 코드의 의도를 불명확하게 만들 수 있으므로, 한 코드 위치에서 변경되고 다른 곳에서는 변경되지 않을 경우 오류가 발생할 수 있습니다. 숫자 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 100, 1000,
0.0, 1.0은 무시됩니다.
&lt;!-- tooltip end --&gt;&lt;p&gt;&lt;small&gt;Inspection ID: MagicNumberJS&lt;/small&gt;&lt;/p&gt;&lt;/body&gt;
&lt;/html&gt;</inspection><inspection shortName="NestedConditionalExpressionJS" defaultSeverity="WARNING" displayName="중첩된 조건식" enabled="false" language="JavaScript" pluginId="JavaScript" pluginVersion="252.26199.162" isGlobalTool="false">&lt;html&gt;
&lt;body&gt;
다른 삼항 조건을 포함하는 삼항 조건식을 보고합니다.
그러한 중첩 조건은 혼란을 일으킬 가능성이 매우 크며 더욱 명시적인 조건 로직으로 대체하는 것이 최선입니다.
&lt;!-- tooltip end --&gt;&lt;p&gt;&lt;small&gt;Inspection ID: NestedConditionalExpressionJS&lt;/small&gt;&lt;/p&gt;&lt;/body&gt;
&lt;/html&gt;</inspection><inspection shortName="IncrementDecrementResultUsedJS" defaultSeverity="WARNING" displayName="사용된 증분 또는 감소의 결과" enabled="false" language="JavaScript" pluginId="JavaScript" pluginVersion="252.26199.162" isGlobalTool="false">&lt;html&gt;
&lt;body&gt;
대입의 결과가 상위 표현식에서 사용되는 증분(&lt;code&gt;++&lt;/code&gt;) 
또는 감소(&lt;code&gt;--&lt;/code&gt;) 표현식을 보고합니다. 그러한 대입은 예기치 못한 방식으로 외부 표현식에 영향을 미칠 수 있기 때문에 연산 순서로 인해 혼란이 발생할 수 있습니다. 예: &lt;code&gt;var a = b++&lt;/code&gt;
&lt;!-- tooltip end --&gt;&lt;p&gt;&lt;small&gt;Inspection ID: IncrementDecrementResultUsedJS&lt;/small&gt;&lt;/p&gt;&lt;/body&gt;
&lt;/html&gt;</inspection><inspection shortName="NegatedConditionalExpressionJS" defaultSeverity="WARNING" displayName="부정된 조건식" enabled="false" language="JavaScript" pluginId="JavaScript" pluginVersion="252.26199.162" isGlobalTool="false">&lt;!-- Copied from community/plugins/InspectionGadgets/src/inspectionDescriptions/NegatedConditional.html --&gt;
&lt;html&gt;
&lt;body&gt;
조건이 부정된 조건식을 보고합니다.
조건식의 브랜치 순서를 반전시켜 구문의 명확도를 높일 것을 제안합니다.
예: &lt;code&gt;!condition ? 2 : 1&lt;/code&gt;
&lt;!-- tooltip end --&gt;&lt;p&gt;&lt;small&gt;Inspection ID: NegatedConditionalExpressionJS&lt;/small&gt;&lt;/p&gt;&lt;/body&gt;
&lt;/html&gt;</inspection><inspection shortName="OverlyComplexBooleanExpressionJS" defaultSeverity="WARNING" displayName="지나치게 복잡한 부울 표현식" enabled="false" language="JavaScript" pluginId="JavaScript" pluginVersion="252.26199.162" isGlobalTool="false">&lt;!-- Copied from community/plugins/InspectionGadgets/src/inspectionDescriptions/OverlyComplexBooleanExpression.html --&gt;
&lt;html&gt;
&lt;body&gt;
항이 너무 많은 bool 표현식을 보고합니다. 그러한 표현식은 혼동을 일으키고 버그가 발생하기 쉽습니다.
&lt;!-- tooltip end --&gt;
&lt;p&gt;
  아래 필드를 사용해 산술 표현식에 허용된 최대 항 개수를 지정하십시오.
&lt;p&gt;&lt;small&gt;Inspection ID: OverlyComplexBooleanExpressionJS&lt;/small&gt;&lt;/p&gt;&lt;/body&gt;
&lt;/html&gt;</inspection><inspection shortName="EmptyStatementBodyJS" defaultSeverity="WARNING" displayName="본문이 비어 있는 구문" enabled="true" language="JavaScript" pluginId="JavaScript" pluginVersion="252.26199.162" isGlobalTool="false">&lt;html&gt;
&lt;body&gt;
본문이 빈 &lt;code&gt;if&lt;/code&gt;, &lt;code&gt;while&lt;/code&gt;, &lt;code&gt;for&lt;/code&gt;, 또는 &lt;code&gt;with&lt;/code&gt; 문을 보고합니다. 그러한 구문은 보통 오타로 발생하며 혼동을 일으킬 수 있습니다.
&lt;!-- tooltip end --&gt;
&lt;p&gt;
  아래 체크박스를 사용하여 빈 블록 구문을 본문으로 포함하는 구문이 보고되어야 하는지 여부를 지정하십시오.
&lt;/p&gt;
&lt;p&gt;&lt;small&gt;Inspection ID: EmptyStatementBodyJS&lt;/small&gt;&lt;/p&gt;&lt;/body&gt;
&lt;/html&gt;</inspection><inspection shortName="CallerJS" defaultSeverity="WARNING" displayName="'caller' 프로퍼티 사용" enabled="true" language="JavaScript" pluginId="JavaScript" pluginVersion="252.26199.162" isGlobalTool="false">&lt;html&gt;
&lt;body&gt;
JavaScript 함수 내 &lt;code&gt;caller&lt;/code&gt; 프로퍼티의 사용 위치를 보고합니다.
이 프로퍼티를 사용하여 호출 메서드의 스택 프레임에 액세스하는 것은 혼란을 일으킬 가능성이 매우 크며 미묘한 버그를 초래할 수 있습니다.
&lt;!-- tooltip end --&gt;&lt;p&gt;&lt;small&gt;Inspection ID: CallerJS&lt;/small&gt;&lt;/p&gt;&lt;/body&gt;
&lt;/html&gt;</inspection><inspection shortName="ConfusingPlusesOrMinusesJS" defaultSeverity="WARNING" displayName="혼동되는 '+' 또는 '-'의 시퀀스" enabled="false" language="JavaScript" pluginId="JavaScript" pluginVersion="252.26199.162" isGlobalTool="false">&lt;html&gt;
&lt;body&gt;
JavaScript 코드 내 &lt;code&gt;+&lt;/code&gt; 또는 &lt;code&gt;-&lt;/code&gt; 문자의 의심스러운 조합을 보고합니다(예: &lt;code&gt;a+++b&lt;/code&gt;).  그러한 시퀀스는 혼란을 일으킬 수 있으며 
공백 내 변경을 통해 의미가 달라질 수 있습니다
&lt;!-- tooltip end --&gt;&lt;p&gt;&lt;small&gt;Inspection ID: ConfusingPlusesOrMinusesJS&lt;/small&gt;&lt;/p&gt;&lt;/body&gt;
&lt;/html&gt;</inspection></group><group name="발생할 수 있는 버그" path="JavaScript 및 TypeScript"><inspection shortName="ObjectAllocationIgnoredJS" defaultSeverity="WARNING" displayName="객체 대입의 결과가 무시됨" enabled="false" language="JavaScript" pluginId="JavaScript" pluginVersion="252.26199.162" isGlobalTool="false">&lt;html&gt;
&lt;body&gt;
아무 대입이 없이 구문으로 &lt;code&gt;new Error();&lt;/code&gt;를 사용하는 경우와 같이 할당된 객체의 결과가 무시되는 객체 할당을 보고합니다.
그런 할당식은 이상한 객체 초기화 전략을 나타낼 수 있습니다. 
&lt;!-- tooltip end --&gt;&lt;p&gt;&lt;small&gt;Inspection ID: ObjectAllocationIgnoredJS&lt;/small&gt;&lt;/p&gt;&lt;/body&gt;
&lt;/html&gt;</inspection><inspection shortName="JSSuspiciousNameCombination" defaultSeverity="WARNING" displayName="의심스러운 변수/매개변수 이름 조합" enabled="true" language="JavaScript" pluginId="JavaScript" pluginVersion="252.26199.162" isGlobalTool="false">&lt;!-- Copied from community/java/java-impl/src/inspectionDescriptions/SuspiciousNameCombination.html --&gt;
&lt;html&gt;
&lt;body&gt;
대상 변수 또는 함수 매개변수의 이름이 대입된 값의 이름과 일치하지 않는 대입 또는 함수 호출을 보고합니다.
&lt;p&gt;예:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;
  &lt;b&gt;var&lt;/b&gt; x = 0;
  &lt;b&gt;var&lt;/b&gt; y = x;
&lt;/code&gt;&lt;/pre&gt;
또는
&lt;pre&gt;&lt;code&gt;
  &lt;b&gt;var&lt;/b&gt; x = 0, y = 0;
  &lt;b&gt;var&lt;/b&gt; rc = &lt;b&gt;new&lt;/b&gt; Rectangle(y, x, 20, 20);
&lt;/code&gt;&lt;/pre&gt;
여기서 검사는 &lt;code&gt;x&lt;/code&gt;와 &lt;code&gt;y&lt;/code&gt;가 혼합되어 있다고 추측합니다.
&lt;!-- tooltip end --&gt;
&lt;p&gt;함께 사용해서는 안 되는 이름을 지정합니다. 매개변수 이름 또는 대입 대상 이름에 한 그룹에 속한 단어가 포함되어 있으나 대입된 변수 또는 전달된 변수의 이름에는 다른 그룹의 단어가 포함되어 있는 경우에 오류를 보고합니다.&lt;/p&gt;
&lt;p&gt;&lt;small&gt;Inspection ID: JSSuspiciousNameCombination&lt;/small&gt;&lt;/p&gt;&lt;/body&gt;
&lt;/html&gt;</inspection><inspection shortName="JSConsecutiveCommasInArrayLiteral" defaultSeverity="WARNING" displayName="배열 리터럴 내 연속 쉼표" enabled="true" language="JavaScript" pluginId="JavaScript" pluginVersion="252.26199.162" isGlobalTool="false">&lt;html&gt;
&lt;body&gt;
배열 리터럴 내 연속적인 쉼표를 보고합니다. 건너뛴 요소는 &lt;code&gt;undefined&lt;/code&gt; 값을 받아들이지만 
쉼표가 행의 끝과 다음 행의 시작에 있는 경우와 같이 의도치 않게 쉼표가 삽입되는 경우가 있습니다.
&lt;!-- tooltip end --&gt;&lt;p&gt;&lt;small&gt;Inspection ID: JSConsecutiveCommasInArrayLiteral&lt;/small&gt;&lt;/p&gt;&lt;/body&gt;
&lt;/html&gt;</inspection><inspection shortName="JSComparisonWithNaN" defaultSeverity="WARNING" displayName="NaN과 비교" enabled="true" language="JavaScript" pluginId="JavaScript" pluginVersion="252.26199.162" isGlobalTool="false">&lt;html&gt;
&lt;body&gt;
NaN과의 비교를 보고합니다. &lt;code&gt;expr == NaN&lt;/code&gt; 또는 &lt;code&gt;expr === NaN&lt;/code&gt;와 같은 비교는 반드시&lt;code&gt;false&lt;/code&gt;로 평가됩니다.
&lt;!-- tooltip end --&gt;&lt;p&gt;&lt;small&gt;Inspection ID: JSComparisonWithNaN&lt;/small&gt;&lt;/p&gt;&lt;/body&gt;
&lt;/html&gt;</inspection><inspection shortName="ForLoopThatDoesntUseLoopVariableJS" defaultSeverity="WARNING" displayName="업데이트 또는 조건이 루프 변수를 사용하지 않는 'for' 루프" enabled="false" language="JavaScript" pluginId="JavaScript" pluginVersion="252.26199.162" isGlobalTool="false">&lt;html&gt;
&lt;body&gt;
조건 또는 업데이트가 &lt;code&gt;for&lt;/code&gt; 루프 변수를 사용하지 않는 &lt;code&gt;for&lt;/code&gt; 루프를 보고합니다.
&lt;!-- tooltip end --&gt;&lt;p&gt;&lt;small&gt;Inspection ID: ForLoopThatDoesntUseLoopVariableJS&lt;/small&gt;&lt;/p&gt;&lt;/body&gt;
&lt;/html&gt;</inspection><inspection shortName="JSSuspiciousEqPlus" defaultSeverity="WARNING" displayName="의심스러운 '=+' 대입" enabled="true" language="JavaScript" pluginId="JavaScript" pluginVersion="252.26199.162" isGlobalTool="false">&lt;html&gt;
&lt;body&gt;
&lt;code&gt;a =+ b&lt;/code&gt; 양식의 대입을 보고합니다.
&lt;code&gt;a += b&lt;/code&gt;으로 바꿀 것을 제안합니다.
&lt;!-- tooltip end --&gt;&lt;p&gt;&lt;small&gt;Inspection ID: JSSuspiciousEqPlus&lt;/small&gt;&lt;/p&gt;&lt;/body&gt;
&lt;/html&gt;</inspection><inspection shortName="ES6BindWithArrowFunction" defaultSeverity="WARNING" displayName="의심스러운 화살표 함수와 'bind' 사용 위치" enabled="true" language="JavaScript" pluginId="JavaScript" pluginVersion="252.26199.162" isGlobalTool="false">&lt;html&gt;
&lt;body&gt;
화살표 함수와 함께 사용된 &lt;code&gt;bind&lt;/code&gt;를 보고합니다.&lt;br/&gt;
화살표 함수는 렉시컬 &lt;code&gt;this&lt;/code&gt;를 사용하기 때문에 &lt;code&gt;bind&lt;/code&gt; 호출에 아무런 영향을 미치지 않습니다.&lt;br/&gt;
자세한 내용은 &lt;a href="https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Functions/Arrow_functions#Lexical_this"&gt;여기&lt;/a&gt;를 참고하십시오.
&lt;!-- tooltip end --&gt;&lt;p&gt;&lt;small&gt;Inspection ID: ES6BindWithArrowFunction&lt;/small&gt;&lt;/p&gt;&lt;/body&gt;
&lt;/html&gt;</inspection><inspection shortName="JSTypeOfValues" defaultSeverity="WARNING" displayName="비표준 값과 'typeof' 비교" enabled="true" language="JavaScript" pluginId="JavaScript" pluginVersion="252.26199.162" isGlobalTool="false">&lt;html&gt;
&lt;body&gt;
표준 타입(&lt;code&gt;undefined&lt;/code&gt;, &lt;code&gt; object&lt;/code&gt;, &lt;code&gt;boolean&lt;/code&gt;, &lt;code&gt;number&lt;/code&gt;, &lt;code&gt;string&lt;/code&gt;, &lt;code&gt;, &lt;code&gt;function&lt;/code&gt; 중 하나가 아닌 리터럴 문자열과 &lt;code&gt;typeof&lt;/code&gt; 식의 비교를 보고합니다.
그러한 비교는 항상 &lt;code&gt;false&lt;/code&gt;를 반환합니다.
&lt;!-- tooltip end --&gt;&lt;p&gt;&lt;small&gt;Inspection ID: JSTypeOfValues&lt;/small&gt;&lt;/p&gt;&lt;/body&gt;
&lt;/html&gt;</inspection><inspection shortName="JSPotentiallyInvalidConstructorUsage" defaultSeverity="WARNING" displayName="생성자 사용 위치가 잘못되었을 수 있습니다" enabled="true" language="JavaScript" pluginId="JavaScript" pluginVersion="252.26199.162" isGlobalTool="false">&lt;html&gt;
&lt;body&gt;
잠재적으로 유효하지 않은 생성자 함수의 사용 위치를 보고합니다(예: &lt;code&gt;new&lt;/code&gt; 뒤의 생성자가 아닌 함수, 생성자 프로토타입 사용 또는 &lt;code&gt;new&lt;/code&gt; 없이 생성자 호출). 생성자 함수에 대문자 이름(옵션)이나 명시적 JSDoc &lt;code&gt;@constructor&lt;/code&gt; 태그가 있다고 가정합니다.
&lt;!-- tooltip end --&gt;&lt;p&gt;&lt;small&gt;Inspection ID: JSPotentiallyInvalidConstructorUsage&lt;/small&gt;&lt;/p&gt;&lt;/body&gt;
&lt;/html&gt;</inspection><inspection shortName="JSEqualityComparisonWithCoercion" defaultSeverity="WARNING" displayName="동치 연산자는 타입 강제 변환을 일으킬 수 있습니다" enabled="true" language="JavaScript" pluginId="JavaScript" pluginVersion="252.26199.162" isGlobalTool="false">&lt;html&gt;
&lt;body&gt;
예기치 않은 타입 강제 변환을 일으키는 상등 연산자의 사용 위치를 보고합니다.
&lt;code&gt;==&lt;/code&gt; 및 &lt;code&gt;!=&lt;/code&gt;을 타입 안전 상등 연산자 &lt;code&gt;===&lt;/code&gt; 및 &lt;code&gt;!==&lt;/code&gt;로 바꿀 것을 제안합니다.
&lt;p&gt;선택한 옵션에 따라 다음 중 하나가 보고됩니다.&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;
    &lt;code&gt;==&lt;/code&gt; 및 &lt;code&gt;!=&lt;/code&gt; 연산자의 모든 사용 위치.
  &lt;/li&gt;
  &lt;li&gt;
    null과의 비교를 제외한 모든 사용 위치. 일부 코드 스타일은 &lt;code&gt;x === null || x === undefined&lt;/code&gt; 대신 &lt;code&gt;x == null&lt;/code&gt;을 사용할 수 있도록 허용합니다.
  &lt;/li&gt;
  &lt;li&gt;
    의심스러운 표현식만(예: &lt;code&gt;0&lt;/code&gt;, &lt;code&gt;''&lt;/code&gt;, 
&lt;code&gt;null&lt;/code&gt;, &lt;code&gt;true&lt;/code&gt;, 
&lt;code&gt;false&lt;/code&gt; 또는 &lt;code&gt;undefined&lt;/code&gt;와의 &lt;code&gt;==&lt;/code&gt; 또는 &lt;code&gt;!=&lt;/code&gt; 비교).
  &lt;/li&gt;
&lt;/ul&gt;
&lt;!-- tooltip end --&gt;&lt;p&gt;&lt;small&gt;Inspection ID: JSEqualityComparisonWithCoercion&lt;/small&gt;&lt;/p&gt;&lt;/body&gt;
&lt;/html&gt;</inspection><inspection shortName="JSVoidFunctionReturnValueUsed" defaultSeverity="WARNING" displayName="void 함수 반환 값이 사용됨" enabled="true" language="JavaScript" pluginId="JavaScript" pluginVersion="252.26199.162" isGlobalTool="false">&lt;html&gt;
&lt;body&gt;
어떤 것도 반환하지 않는 함수의 반환값을 보고합니다.
그러한 함수를 호출하면 항상 &lt;code&gt;undefined&lt;/code&gt; 값이 생성되며 그러한 대입은 에러를 나타낼 수 있습니다. &lt;p&gt;예:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;
let a = console.log('foo');
&lt;/code&gt;&lt;/pre&gt;
&lt;br/&gt;
다음 사용 위치가 무시됩니다:
&lt;ul&gt;
  &lt;li&gt;return 문 내부&lt;/li&gt;
  &lt;li&gt;일부 이항연산 내&lt;/li&gt;
  &lt;li&gt;재정의된 비 void 함수&lt;/li&gt;
&lt;/ul&gt;
&lt;!-- tooltip end --&gt;&lt;p&gt;&lt;small&gt;Inspection ID: JSVoidFunctionReturnValueUsed&lt;/small&gt;&lt;/p&gt;&lt;/body&gt;
&lt;/html&gt;</inspection><inspection shortName="InfiniteRecursionJS" defaultSeverity="WARNING" displayName="무한 재귀" enabled="true" language="JavaScript" pluginId="JavaScript" pluginVersion="252.26199.162" isGlobalTool="false">&lt;html&gt;
&lt;body&gt;
무한으로 재귀하거나 예외를 던지는 
함수를 보고합니다. 그러한 함수는 일반적으로 반환하지 않습니다.
&lt;!-- tooltip end --&gt;&lt;p&gt;&lt;small&gt;Inspection ID: InfiniteRecursionJS&lt;/small&gt;&lt;/p&gt;&lt;/body&gt;
&lt;/html&gt;</inspection><inspection shortName="JSPotentiallyInvalidTargetOfIndexedPropertyAccess" defaultSeverity="WARNING" displayName="색인 생성된 프로퍼티 액세스 타깃이 잘못되었을 수 있습니다" enabled="true" language="JavaScript" pluginId="JavaScript" pluginVersion="252.26199.162" isGlobalTool="false">&lt;html&gt;
&lt;body&gt;
잠재적으로 유효하지 않은 색인화된 프로퍼티 액세스를 보고합니다(예: &lt;code&gt;Array[1]&lt;/code&gt;).
&lt;!-- tooltip end --&gt;&lt;p&gt;&lt;small&gt;Inspection ID: JSPotentiallyInvalidTargetOfIndexedPropertyAccess&lt;/small&gt;&lt;/p&gt;&lt;/body&gt;
&lt;/html&gt;</inspection><inspection shortName="JSPotentiallyInvalidUsageOfClassThis" defaultSeverity="WARNING" displayName="클로저에서 클래스의 'this'에 대한 참조가 잘못되었을 수 있습니다." enabled="true" language="JavaScript" pluginId="JavaScript" pluginVersion="252.26199.162" isGlobalTool="false">&lt;html&gt;
&lt;body&gt;
람다가 아닌 중첩 함수의 &lt;code&gt;this.&lt;/code&gt; 한정자를 통해 ECMAScript 클래스의 멤버를 참조하려는 시도를 보고합니다.&lt;br/&gt;
람다가 아닌 중첩 함수의 &lt;code&gt;this&lt;/code&gt;는 함수 자체의 &lt;code&gt;this&lt;/code&gt;이며, 외부 클래스와는 관계가 없습니다.
&lt;!-- tooltip end --&gt;&lt;p&gt;&lt;small&gt;Inspection ID: JSPotentiallyInvalidUsageOfClassThis&lt;/small&gt;&lt;/p&gt;&lt;/body&gt;
&lt;/html&gt;</inspection><inspection shortName="JSIncompatibleTypesComparison" defaultSeverity="WEAK WARNING" displayName="호환되지 않는 타입이 있는 표현식 비교" enabled="true" language="JavaScript" pluginId="JavaScript" pluginVersion="252.26199.162" isGlobalTool="false">&lt;html&gt;
&lt;body&gt;
호환성이 없는 타입의 피연산자 또는 가능한 공통 값이 없는 타입의 피연산자와의 비교를 보고합니다.
&lt;!-- tooltip end --&gt;&lt;p&gt;&lt;small&gt;Inspection ID: JSIncompatibleTypesComparison&lt;/small&gt;&lt;/p&gt;&lt;/body&gt;
&lt;/html&gt;</inspection><inspection shortName="DivideByZeroJS" defaultSeverity="WARNING" displayName="0으로 나누기" enabled="false" language="JavaScript" pluginId="JavaScript" pluginVersion="252.26199.162" isGlobalTool="false">&lt;html&gt;
&lt;body&gt;
0에 의한 나누기 또는 나머지를 보고합니다.
&lt;!-- tooltip end --&gt;&lt;p&gt;&lt;small&gt;Inspection ID: DivideByZeroJS&lt;/small&gt;&lt;/p&gt;&lt;/body&gt;
&lt;/html&gt;</inspection><inspection shortName="InfiniteLoopJS" defaultSeverity="WARNING" displayName="무한 루프 문" enabled="true" language="JavaScript" pluginId="JavaScript" pluginVersion="252.26199.162" isGlobalTool="false">&lt;html&gt;
&lt;body&gt;
예외를 던져야만 종료할 수 있는 &lt;code&gt;for&lt;/code&gt;, &lt;code&gt;while&lt;/code&gt;, 또는&lt;code&gt;do&lt;/code&gt; 문을 보고합니다. 그러한 구문은 보통 코딩 오류를 나타냅니다.
&lt;!-- tooltip end --&gt;&lt;p&gt;&lt;small&gt;Inspection ID: InfiniteLoopJS&lt;/small&gt;&lt;/p&gt;&lt;/body&gt;
&lt;/html&gt;</inspection><inspection shortName="JSPotentiallyInvalidUsageOfThis" defaultSeverity="WARNING" displayName="클로저에서 'this'에 대한 참조가 잘못되었을 수 있습니다." enabled="true" language="JavaScript" pluginId="JavaScript" pluginVersion="252.26199.162" isGlobalTool="false">&lt;html&gt;
&lt;body&gt;
외부 컨텍스트의 프로퍼티 참조를 위해 사용된 클로저 내 &lt;code&gt;this&lt;/code&gt;를 보고합니다. &lt;p&gt;예:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;
function Outer() {
  this.outerProp = 1;
  function inner() {
    // Outer의 'outerProp' 때문에 좋지 않음
    // 여기서 업데이트 안 함
    // 'new Outer()'를 호출할 수 있음
    this.outerProp = 2;
  }
  inner();
}
&lt;/code&gt;&lt;/pre&gt;
&lt;!-- tooltip end --&gt;&lt;p&gt;&lt;small&gt;Inspection ID: JSPotentiallyInvalidUsageOfThis&lt;/small&gt;&lt;/p&gt;&lt;/body&gt;
&lt;/html&gt;</inspection></group><group name="RELAX NG" path=""><inspection shortName="UnusedDefine" defaultSeverity="WARNING" displayName="사용되지 않는 정의" enabled="false" pluginId="com.intellij" pluginVersion="252.26199.162" isGlobalTool="false">&lt;html&gt;
&lt;body&gt;
RELAX-NG 파일(XML 또는 Compact 구문) 내 사용되지 않는 명명된 패턴(&lt;code&gt;define&lt;/code&gt;)을 보고합니다.
다른 파일의 include에서 사용된 &lt;code&gt;define&lt;/code&gt; 요소는 무시됩니다.
&lt;!-- tooltip end --&gt;&lt;p&gt;&lt;small&gt;Inspection ID: UnusedDefine&lt;/small&gt;&lt;/p&gt;&lt;/body&gt;
&lt;/html&gt;</inspection><inspection shortName="UnresolvedReference" defaultSeverity="ERROR" displayName="해결되지 않은 참조" enabled="true" pluginId="com.intellij" pluginVersion="252.26199.162" isGlobalTool="false">&lt;html&gt;
&lt;body&gt;
XML 구문을 사용하는 RELAX-NG 파일 내 명명된 패턴(&lt;code&gt;define&lt;/code&gt;)으로의 해결되지 않은 참조를 를 보고합니다.
참조된 &lt;code&gt;define&lt;/code&gt; 요소를 생성할 것을 제안합니다.
&lt;!-- tooltip end --&gt;&lt;p&gt;&lt;small&gt;Inspection ID: UnresolvedReference&lt;/small&gt;&lt;/p&gt;&lt;/body&gt;
&lt;/html&gt;</inspection></group><group name="Angular" path=""><inspection shortName="AngularUnresolvedPipe" defaultSeverity="ERROR" displayName="해결되지 않은 파이프" enabled="true" language="HtmlCompatible" pluginId="AngularJS" pluginVersion="252.26199.162" isGlobalTool="false">&lt;html&gt;
&lt;body&gt;
사용되지 않는 파이프를 보고합니다.
&lt;!-- tooltip end --&gt;&lt;p&gt;&lt;small&gt;Inspection ID: AngularUnresolvedPipe&lt;/small&gt;&lt;/p&gt;&lt;/body&gt;
&lt;/html&gt;</inspection><inspection shortName="AngularUnusedComponentImport" defaultSeverity="ERROR" displayName="Angular 구성 요소 선언 내 사용되지 않는 import" enabled="true" language="TypeScript" pluginId="AngularJS" pluginVersion="252.26199.162" isGlobalTool="false">&lt;html&gt;
&lt;body&gt;
Angular 구성 요소에서 사용되지 않은 import를 보고합니다.
&lt;!-- tooltip end --&gt;&lt;p&gt;&lt;small&gt;Inspection ID: AngularUnusedComponentImport&lt;/small&gt;&lt;/p&gt;&lt;/body&gt;
&lt;/html&gt;</inspection><inspection shortName="AngularIncorrectTemplateDefinition" defaultSeverity="ERROR" displayName="잘못된 구성 요소 템플릿 정의" enabled="true" language="TypeScript" pluginId="AngularJS" pluginVersion="252.26199.162" isGlobalTool="false">&lt;html&gt;
&lt;body&gt;
연결된 템플릿을 포함하지 않거나 &lt;code&gt;template&lt;/code&gt; 및 &lt;code&gt;templateUrl&lt;/code&gt; 프로퍼티를 둘 다 사용하는 구성 요소를 보고합니다.
&lt;!-- tooltip end --&gt;&lt;p&gt;&lt;small&gt;Inspection ID: AngularIncorrectTemplateDefinition&lt;/small&gt;&lt;/p&gt;&lt;/body&gt;
&lt;/html&gt;</inspection><inspection shortName="AngularInvalidTemplateReferenceVariable" defaultSeverity="ERROR" displayName="바운드되지 않거나 모호한 템플릿 참조 변수" enabled="true" language="HtmlCompatible" pluginId="AngularJS" pluginVersion="252.26199.162" isGlobalTool="false">&lt;html&gt;
&lt;body&gt;
&lt;code&gt;exportAs&lt;/code&gt; 사용 시 지시문에 대입되어 있지 않거나 복수의 지시문에 대입되어 있는 템플릿 참조 변수를 보고합니다.
&lt;!-- tooltip end --&gt;&lt;p&gt;&lt;small&gt;Inspection ID: AngularInvalidTemplateReferenceVariable&lt;/small&gt;&lt;/p&gt;&lt;/body&gt;
&lt;/html&gt;</inspection><inspection shortName="AngularInsecureBindingToEvent" defaultSeverity="WARNING" displayName="안전하지 않은 이벤트로의 바인드" enabled="true" language="HtmlCompatible" pluginId="AngularJS" pluginVersion="252.26199.162" isGlobalTool="false">&lt;html&gt;
&lt;body&gt;
&lt;code&gt;(click)&lt;/code&gt;이 아닌 이벤트 프로퍼티 또는 속성에 대한 바인딩을 보고합니다(예: &lt;code&gt;[onclick]&lt;/code&gt; 또는 &lt;code&gt;[attr.onclick]&lt;/code&gt;).
&lt;!-- tooltip end --&gt;&lt;p&gt;&lt;small&gt;Inspection ID: AngularInsecureBindingToEvent&lt;/small&gt;&lt;/p&gt;&lt;/body&gt;
&lt;/html&gt;</inspection><inspection shortName="AngularInvalidImportedOrDeclaredSymbol" defaultSeverity="ERROR" displayName="가져오거나 선언된 잘못된 심볼" enabled="true" language="TypeScript" pluginId="AngularJS" pluginVersion="252.26199.162" isGlobalTool="false">&lt;html&gt;
&lt;body&gt;
모듈이나 구성 요소, 지시문, 파이프가 아니거나 프로퍼티의 컨텍스트에서 사용될 수 없는 Angular 모듈 또는 독립실행형 구성 요소에서 선언하거나, 가져오거나 내보낸 심볼을 보고합니다.
&lt;!-- tooltip end --&gt;&lt;p&gt;&lt;small&gt;Inspection ID: AngularInvalidImportedOrDeclaredSymbol&lt;/small&gt;&lt;/p&gt;&lt;/body&gt;
&lt;/html&gt;</inspection><inspection shortName="AngularInaccessibleSymbol" defaultSeverity="ERROR" displayName="액세스할 수 없는 구성 요소 멤버 또는 지시문 입력" enabled="true" pluginId="AngularJS" pluginVersion="252.26199.162" isGlobalTool="false">&lt;html&gt;
&lt;body&gt;
Angular 템플릿의 보이지 않는(private 또는 protected) 구성 요소 멤버 또는 지시문 입력에 대한 액세스를 보고합니다.
&lt;!-- tooltip end --&gt;&lt;p&gt;&lt;small&gt;Inspection ID: AngularInaccessibleSymbol&lt;/small&gt;&lt;/p&gt;&lt;/body&gt;
&lt;/html&gt;</inspection><inspection shortName="AngularNonStandaloneComponentImports" defaultSeverity="ERROR" displayName="독립 실행형이 아닌 구성 요소의 올바르지 않은 import 사용 위치" enabled="true" language="TypeScript" pluginId="AngularJS" pluginVersion="252.26199.162" isGlobalTool="false">&lt;html&gt;
&lt;body&gt;
독립실행형이 아닌 구성 요소 데코레이터 내에서 imports 프로퍼티가 사용된 경우를 보고합니다. Imports는 독립실행형 구성 요소에서만 사용될 수 있습니다.
&lt;!-- tooltip end --&gt;&lt;p&gt;&lt;small&gt;Inspection ID: AngularNonStandaloneComponentImports&lt;/small&gt;&lt;/p&gt;&lt;/body&gt;
&lt;/html&gt;</inspection><inspection shortName="AngularInvalidAnimationTriggerAssignment" defaultSeverity="ERROR" displayName="잘못된 애니메이션 트리거 대입" enabled="true" language="HtmlCompatible" pluginId="AngularJS" pluginVersion="252.26199.162" isGlobalTool="false">&lt;html&gt;
&lt;body&gt;
애니메이션 트리거의 잘못된 대입을 보고합니다. 애니메이션을 요소에 연결하려면, &lt;code&gt;[@triggerName]="expression"&lt;/code&gt;을 사용하거나 &lt;code&gt;@triggerName&lt;/code&gt;값 없이 속성을 사용하세요.
&lt;!-- tooltip end --&gt;&lt;p&gt;&lt;small&gt;Inspection ID: AngularInvalidAnimationTriggerAssignment&lt;/small&gt;&lt;/p&gt;&lt;/body&gt;
&lt;/html&gt;</inspection><inspection shortName="AngularInvalidSelector" defaultSeverity="ERROR" displayName="누락되었거나 잘못된 선택자" enabled="true" pluginId="AngularJS" pluginVersion="252.26199.162" isGlobalTool="false">&lt;html&gt;
&lt;body&gt;
구성 요소 또는 지시문의 잘못된 &lt;code&gt;selector&lt;/code&gt; 프로퍼티를 보고합니다.
&lt;!-- tooltip end --&gt;&lt;p&gt;&lt;small&gt;Inspection ID: AngularInvalidSelector&lt;/small&gt;&lt;/p&gt;&lt;/body&gt;
&lt;/html&gt;</inspection><inspection shortName="AngularDeferBlockOnTrigger" defaultSeverity="ERROR" displayName="@defer 'on' 트리거의 문제" enabled="true" language="Angular2Html" pluginId="AngularJS" pluginVersion="252.26199.162" isGlobalTool="false">&lt;html&gt;
&lt;body&gt;
`@defer` 블록 내 `on` 매개변수에서 트리거와 관련된 문제를 보고합니다.
&lt;!-- tooltip end --&gt;&lt;p&gt;&lt;small&gt;Inspection ID: AngularDeferBlockOnTrigger&lt;/small&gt;&lt;/p&gt;&lt;/body&gt;
&lt;/html&gt;</inspection><inspection shortName="AngularUndefinedTag" defaultSeverity="ERROR" displayName="정의되지 않은 태그" enabled="true" language="HtmlCompatible" pluginId="AngularJS" pluginVersion="252.26199.162" isGlobalTool="false">&lt;html&gt;
&lt;body&gt;
현재 범위 바깥의 구성 요소 또는 지시문에 의해 정의된 태그를 보고합니다.
&lt;!-- tooltip end --&gt;&lt;p&gt;&lt;small&gt;Inspection ID: AngularUndefinedTag&lt;/small&gt;&lt;/p&gt;&lt;/body&gt;
&lt;/html&gt;</inspection><inspection shortName="AngularUndefinedBinding" defaultSeverity="ERROR" displayName="정의되지 않은 바인딩" enabled="true" language="HtmlCompatible" pluginId="AngularJS" pluginVersion="252.26199.162" isGlobalTool="false">&lt;html&gt;
&lt;body&gt;
요소에 대한 정의되지 않은 프로퍼티, 이벤트, 또는 구조 지시문 바인딩을 보고합니다.
&lt;!-- tooltip end --&gt;&lt;p&gt;&lt;small&gt;Inspection ID: AngularUndefinedBinding&lt;/small&gt;&lt;/p&gt;&lt;/body&gt;
&lt;/html&gt;</inspection><inspection shortName="AngularIllegalForLoopTrackAccess" defaultSeverity="ERROR" displayName="잘못된 @for 루프 액세스" enabled="true" language="HtmlCompatible" pluginId="AngularJS" pluginVersion="252.26199.162" isGlobalTool="false">&lt;html&gt;
&lt;body&gt;
&lt;code&gt;@for&lt;/code&gt; 루프 &lt;code&gt;track&lt;/code&gt; 식 내의 템플릿 변수에 대한 부적절한 액세스를 보고합니다.
&lt;!-- tooltip end --&gt;&lt;p&gt;&lt;small&gt;Inspection ID: AngularIllegalForLoopTrackAccess&lt;/small&gt;&lt;/p&gt;&lt;/body&gt;
&lt;/html&gt;</inspection><inspection shortName="AngularMultipleStructuralDirectives" defaultSeverity="ERROR" displayName="하나의 요소에 대한 여러 개의 구조 지시문" enabled="true" language="HtmlCompatible" pluginId="AngularJS" pluginVersion="252.26199.162" isGlobalTool="false">&lt;html&gt;
&lt;body&gt;
하나의 요소에 있는 여러 구조 지시문을 보고합니다(&lt;code&gt;*ngIf&lt;/code&gt;, &lt;code&gt;*ngFor&lt;/code&gt; 등).
&lt;!-- tooltip end --&gt;&lt;p&gt;&lt;small&gt;Inspection ID: AngularMultipleStructuralDirectives&lt;/small&gt;&lt;/p&gt;&lt;/body&gt;
&lt;/html&gt;</inspection><inspection shortName="AngularAmbiguousComponentTag" defaultSeverity="ERROR" displayName="모호한 구성 요소 태그" enabled="true" language="HtmlCompatible" pluginId="AngularJS" pluginVersion="252.26199.162" isGlobalTool="false">&lt;html&gt;
&lt;body&gt;
임베딩된 템플릿 요소의 &lt;code&gt;&amp;lt;ng-template&amp;gt;&lt;/code&gt;에서 일치하는 구성 요소 또는 기타 임의의 요소에서 일치하는 여러 구성 요소를 보고합니다.
&lt;!-- tooltip end --&gt;&lt;p&gt;&lt;small&gt;Inspection ID: AngularAmbiguousComponentTag&lt;/small&gt;&lt;/p&gt;&lt;/body&gt;
&lt;/html&gt;</inspection><inspection shortName="AngularMissingOrInvalidDeclarationInModule" defaultSeverity="ERROR" displayName="모듈 내 구성 요소, 지시문 또는 파이프 선언이 누락되었거나 잘못되었습니다." enabled="true" language="TypeScript" pluginId="AngularJS" pluginVersion="252.26199.162" isGlobalTool="false">&lt;html&gt;
&lt;body&gt;
어떤 모듈에서도 선언되지 않았거나 여러 모듈에서 선언된 비독립실행형 Angular 구성 요소, 지시문 또는 파이프를 보고합니다.
&lt;!-- tooltip end --&gt;&lt;p&gt;&lt;small&gt;Inspection ID: AngularMissingOrInvalidDeclarationInModule&lt;/small&gt;&lt;/p&gt;&lt;/body&gt;
&lt;/html&gt;
</inspection><inspection shortName="AngularForBlockNonIterableVar" defaultSeverity="ERROR" displayName="@for 블록 내 반복할 수 없는 타입" enabled="true" language="Angular2Html" pluginId="AngularJS" pluginVersion="252.26199.162" isGlobalTool="false">&lt;html&gt;
&lt;body&gt;
반복 처리할 변수 타입에 반복자를 반환하는 &lt;code&gt;[Symbol.iterator]()&lt;/code&gt; 메서드가 없는 경우를 보고합니다.
&lt;!-- tooltip end --&gt;&lt;p&gt;&lt;small&gt;Inspection ID: AngularForBlockNonIterableVar&lt;/small&gt;&lt;/p&gt;&lt;/body&gt;
&lt;/html&gt;</inspection><inspection shortName="AngularInvalidEntryComponent" defaultSeverity="ERROR" displayName="잘못된 입력 구성 요소" enabled="true" language="TypeScript" pluginId="AngularJS" pluginVersion="252.26199.162" isGlobalTool="false">&lt;html&gt;
&lt;body&gt;
모듈의 &lt;code&gt;bootstrap&lt;/code&gt; 또는 &lt;code&gt;entryComponents&lt;/code&gt; 프로퍼티에 지정된 잘못된 Angular 구성 요소를 보고합니다.
&lt;!-- tooltip end --&gt;&lt;p&gt;&lt;small&gt;Inspection ID: AngularInvalidEntryComponent&lt;/small&gt;&lt;/p&gt;&lt;/body&gt;
&lt;/html&gt;</inspection><inspection shortName="AngularMissingRequiredDirectiveInputBinding" defaultSeverity="ERROR" displayName="필수 지시문 입력 누락" enabled="true" language="HtmlCompatible" pluginId="AngularJS" pluginVersion="252.26199.162" isGlobalTool="false">&lt;html&gt;
&lt;body&gt;
필수 지시문 입력에서 누락된 바인딩을 보고합니다.
&lt;!-- tooltip end --&gt;&lt;p&gt;&lt;small&gt;Inspection ID: AngularMissingRequiredDirectiveInputBinding&lt;/small&gt;&lt;/p&gt;&lt;/body&gt;
&lt;/html&gt;</inspection><inspection shortName="AngularUnsupportedSyntax" defaultSeverity="ERROR" displayName="지원되지 않는 Angular 식 구문" enabled="true" language="Angular2" pluginId="AngularJS" pluginVersion="252.26199.162" isGlobalTool="false">&lt;html&gt;
&lt;body&gt;
오래된 버전의 Angular에서는 지원되지 않아 문제가 있는 Angular 식 구문을 보고합니다.
&lt;!-- tooltip end --&gt;&lt;p&gt;&lt;small&gt;Inspection ID: AngularUnsupportedSyntax&lt;/small&gt;&lt;/p&gt;&lt;/body&gt;
&lt;/html&gt;</inspection><inspection shortName="AngularCliAddDependency" defaultSeverity="WARNING" displayName="Angular CLI 종속 요소 추가" enabled="true" language="JSON" pluginId="AngularJS" pluginVersion="252.26199.162" isGlobalTool="false">&lt;html&gt;
&lt;body&gt;
종속성 설치에 &lt;code&gt;ng add&lt;/code&gt; 명령어를 사용할 것을 제안합니다.
&lt;p&gt;&lt;code&gt;ng add&lt;/code&gt;는 패키지 관리자를 사용해 종속성을 다운로드하여 구성 변경에 따른 프로젝트 업데이트, 그 외의 종속성 추가(예: polyfill), 또는 패키지용 초기화 코드 스캐폴드를 수행할 수 있는 스키매틱을 호출합니다.
&lt;!-- tooltip end --&gt;&lt;p&gt;&lt;small&gt;Inspection ID: AngularCliAddDependency&lt;/small&gt;&lt;/p&gt;&lt;/body&gt;
&lt;/html&gt;</inspection><inspection shortName="AngularInvalidI18nAttribute" defaultSeverity="WARNING" displayName="잘못된 i18n 속성" enabled="true" language="HtmlCompatible" pluginId="AngularJS" pluginVersion="252.26199.162" isGlobalTool="false">&lt;html&gt;
&lt;body&gt;
&lt;code&gt;i18n-*&lt;/code&gt; 속성 문제를 보고합니다.
&lt;!-- tooltip end --&gt;&lt;p&gt;&lt;small&gt;Inspection ID: AngularInvalidI18nAttribute&lt;/small&gt;&lt;/p&gt;&lt;/body&gt;
&lt;/html&gt;</inspection><inspection shortName="AngularNonEmptyNgContent" defaultSeverity="ERROR" displayName="&lt;ng-content&gt; 태그 내 내용" enabled="true" language="HtmlCompatible" pluginId="AngularJS" pluginVersion="252.26199.162" isGlobalTool="false">&lt;html&gt;
&lt;body&gt;
콘텐츠 프로젝션에 사용된 &lt;code&gt;&amp;lt;ng-content&amp;gt;&lt;/code&gt; 태그 내에 텍스트 또는 태그가 있는 경우를 보고합니다.
&lt;!-- tooltip end --&gt;&lt;p&gt;&lt;small&gt;Inspection ID: AngularNonEmptyNgContent&lt;/small&gt;&lt;/p&gt;&lt;/body&gt;
&lt;/html&gt;</inspection><inspection shortName="AngularMissingEventHandler" defaultSeverity="ERROR" displayName="이벤트 핸들러 누락" enabled="true" language="HtmlCompatible" pluginId="AngularJS" pluginVersion="252.26199.162" isGlobalTool="false">&lt;html&gt;
&lt;body&gt;
이벤트 바인딩의 이벤트 핸들러 구문 누락을 보고합니다.
&lt;!-- tooltip end --&gt;&lt;p&gt;&lt;small&gt;Inspection ID: AngularMissingEventHandler&lt;/small&gt;&lt;/p&gt;&lt;/body&gt;
&lt;/html&gt;</inspection><inspection shortName="AngularUndefinedModuleExport" defaultSeverity="ERROR" displayName="Angular 모듈에서 정의되지 않은 내보내기" enabled="true" language="TypeScript" pluginId="AngularJS" pluginVersion="252.26199.162" isGlobalTool="false">&lt;html&gt;
&lt;body&gt;
Angular 모듈에서 선언되어 있지 않거나 가져오지 않은 구성 요소, 지시문, 파이프의 내보내기를 보고합니다.
&lt;!-- tooltip end --&gt;&lt;p&gt;&lt;small&gt;Inspection ID: AngularUndefinedModuleExport&lt;/small&gt;&lt;/p&gt;&lt;/body&gt;
&lt;/html&gt;</inspection><inspection shortName="AngularNgOptimizedImage" defaultSeverity="WEAK WARNING" displayName="img 태그 내 ngSrc 사용과 관련된 문제" enabled="true" language="HtmlCompatible" pluginId="AngularJS" pluginVersion="252.26199.162" isGlobalTool="false">&lt;html&gt;
&lt;body&gt;
&lt;code&gt;img&lt;/code&gt; 태그에서 &lt;code&gt;ngSrc&lt;/code&gt;(&lt;a href="https://angular.io/guide/image-directive"&gt;NgOptimizedDirective&lt;/a&gt;)의 사용과 관련된 문제를 보고합니다.
&lt;p&gt;
다음과 같은 문제가 보고됩니다.
&lt;ul&gt;
  &lt;li&gt;&lt;code&gt;ngSrc&lt;/code&gt; 대신 &lt;code&gt;src&lt;/code&gt;를 사용하는 &lt;code&gt;img&lt;/code&gt; 태그
  &lt;li&gt;&lt;code&gt;ngSrc&lt;/code&gt;가 사용될 때 &lt;code&gt;width&lt;/code&gt; 및 &lt;code&gt;height&lt;/code&gt; 또는 &lt;code&gt;fill&lt;/code&gt; 속성이 없는 경우
  &lt;li&gt;&lt;code&gt;ngSrc&lt;/code&gt;이 사용될 때 동일한 요소에 &lt;code&gt;width&lt;/code&gt; 또는 &lt;code&gt;height&lt;/code&gt; 및 &lt;code&gt;fill&lt;/code&gt; 속성이 있는 경우
&lt;/ul&gt;
&lt;!-- tooltip end --&gt;
&lt;p&gt;&lt;small&gt;Inspection ID: AngularNgOptimizedImage&lt;/small&gt;&lt;/p&gt;&lt;/body&gt;
&lt;/html&gt;</inspection><inspection shortName="AngularBindingTypeMismatch" defaultSeverity="ERROR" displayName="잘못된 바인딩 타입" enabled="true" language="HtmlCompatible" pluginId="AngularJS" pluginVersion="252.26199.162" isGlobalTool="false">&lt;html&gt;
&lt;body&gt;
실제 지시문 바인딩 타입과 필요한 타입이 불일치하면 보고합니다.
&lt;!-- tooltip end --&gt;&lt;p&gt;&lt;small&gt;Inspection ID: AngularBindingTypeMismatch&lt;/small&gt;&lt;/p&gt;&lt;/body&gt;
&lt;/html&gt;</inspection><inspection shortName="AngularRecursiveModuleImportExport" defaultSeverity="ERROR" displayName="Angular 모듈 또는 독립실행형 구성 요소의 재귀적 가져오기 또는 내보내기" enabled="true" language="TypeScript" pluginId="AngularJS" pluginVersion="252.26199.162" isGlobalTool="false">&lt;html&gt;
&lt;body&gt;
Angular 모듈과 독립실행형 모듈 간의 순환 종속성을 보고합니다.
&lt;!-- tooltip end --&gt;&lt;p&gt;&lt;small&gt;Inspection ID: AngularRecursiveModuleImportExport&lt;/small&gt;&lt;/p&gt;&lt;/body&gt;
&lt;/html&gt;</inspection><inspection shortName="AngularIncorrectLetUsage" defaultSeverity="ERROR" displayName="@let 선언의 잘못된 사용" enabled="true" language="Angular2" pluginId="AngularJS" pluginVersion="252.26199.162" isGlobalTool="false">&lt;html&gt;
&lt;body&gt;
@let 선언 사용 위치의 문제를 보고합니다.
&lt;!-- tooltip end --&gt;&lt;p&gt;&lt;small&gt;Inspection ID: AngularIncorrectLetUsage&lt;/small&gt;&lt;/p&gt;&lt;/body&gt;
&lt;/html&gt;</inspection><inspection shortName="AngularIncorrectBlockUsage" defaultSeverity="ERROR" displayName="Angular 블록의 잘못된 사용" enabled="true" language="Angular2Html" pluginId="AngularJS" pluginVersion="252.26199.162" isGlobalTool="false">&lt;html&gt;
&lt;body&gt;
Angular 블록 문제를 보고합니다.
&lt;!-- tooltip end --&gt;&lt;p&gt;&lt;small&gt;Inspection ID: AngularIncorrectBlockUsage&lt;/small&gt;&lt;/p&gt;&lt;/body&gt;
&lt;/html&gt;</inspection></group></inspections>